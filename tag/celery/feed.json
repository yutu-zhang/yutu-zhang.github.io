{
    "version": "https://jsonfeed.org/version/1",
    "title": "The course of true love never did run smooth. • All posts by \"celery\" tag",
    "description": "不知道写啥",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/Django%E6%A1%86%E6%9E%B6/Django-Celery%E5%BC%82%E6%AD%A5%E6%A1%86%E6%9E%B6/",
            "url": "http://example.com/Django%E6%A1%86%E6%9E%B6/Django-Celery%E5%BC%82%E6%AD%A5%E6%A1%86%E6%9E%B6/",
            "title": "Celery异步框架",
            "date_published": "2020-11-20T08:18:25.000Z",
            "content_html": "<h2 id=\"celery异步框架\"><a class=\"markdownIt-Anchor\" href=\"#celery异步框架\">#</a> Celery 异步框架</h2>\n<h3 id=\"介绍\"><a class=\"markdownIt-Anchor\" href=\"#介绍\">#</a> 介绍</h3>\n<blockquote>\n<p><code>Celery </code> 是一个 基于 <code>python</code>  开发的分布式异步消息任务队列，通过它可以轻松的实现任务的异步处理， 如果你的业务场景中需要用到异步任务，就可以考虑使用 <code>celery</code></p>\n<p>你想对 100 台机器执行一条批量命令，可能会花很长时间 ，但你不想让你的程序等着结果返回，而是给你返回 一个任务 ID, 你过一段时间只需要拿着这个任务 id 就可以拿到任务执行结果， 在任务执行 ing 进行时，你可以继续做其它的事情</p>\n<p><code>Celery </code> 在执行任务时需要通过一个消息中间件来接收和发送任务消息，以及存储任务结果， 一般使用 <code>rabbitMQ </code> or  <code>Redis</code></p>\n</blockquote>\n<h3 id=\"优点\"><a class=\"markdownIt-Anchor\" href=\"#优点\">#</a> 优点</h3>\n<ul>\n<li>简单：一但熟悉了 <code>celery</code>  的工作流程后，配置和使用还是比较简单的</li>\n<li>高可用：当任务执行失败或执行过程中发生连接中断， <code>celery </code> 会自动尝试重新执行任务</li>\n<li>快速：一个单进程的 <code>celery</code>  每分钟可处理上百万个任务</li>\n<li>灵活： 几乎 <code>celery</code>  的各个组件都可以被扩展及自定制</li>\n</ul>\n<h3 id=\"celery架构图\"><a class=\"markdownIt-Anchor\" href=\"#celery架构图\">#</a> celery 架构图</h3>\n<p><img data-src=\"1.png\" alt=\"\"></p>\n<h3 id=\"celery-扮演生产者和消费者的角色\"><a class=\"markdownIt-Anchor\" href=\"#celery-扮演生产者和消费者的角色\">#</a> Celery 扮演生产者和消费者的角色</h3>\n<ul>\n<li><code>Celery Beat</code>  : 任务调度器. Beat 进程会读取配置文件的内容，周期性的将配置中到期需要执行的任务发送给任务队列.</li>\n<li><code>Celery Worker</code>  : 执行任务的消费者，通常会在多台服务器运行多个消费者，提高运行效率.</li>\n<li><code>Broker</code>  : 消息代理，队列本身。也称为消息中间件。接受任务生产者发送过来的任务消息，存进队列再按序分发给任务消费方 (通常是消息队列或者数据库).</li>\n<li><code>Producer </code> : 任务生产者。调用 Celery API , 函数或者装饰器，而产生任务并交给任务队列处理的都是任务生产者.</li>\n<li><code>Result Backend</code>  : 任务处理完成之后保存状态信息和结果，以供查询.</li>\n</ul>\n<h3 id=\"django实现异步任务与定时任务\"><a class=\"markdownIt-Anchor\" href=\"#django实现异步任务与定时任务\">#</a> Django 实现异步任务与定时任务</h3>\n<h4 id=\"相关依赖包\"><a class=\"markdownIt-Anchor\" href=\"#相关依赖包\">#</a> 相关依赖包</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip install Django<span class=\"token operator\">==</span><span class=\"token number\">2.2</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>pip install celery<span class=\"token operator\">==</span><span class=\"token number\">4.4</span><span class=\"token number\">.7</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>pip install django<span class=\"token operator\">-</span>celery<span class=\"token operator\">-</span>beat<span class=\"token operator\">==</span><span class=\"token number\">2.1</span><span class=\"token number\">.0</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>pip install redis<span class=\"token operator\">==</span><span class=\"token number\">3.5</span><span class=\"token number\">.3</span></pre></td></tr></table></figure><h4 id=\"目录结构\"><a class=\"markdownIt-Anchor\" href=\"#目录结构\">#</a> 目录结构</h4>\n<p><img data-src=\"2.png\" alt=\"\"></p>\n<h4 id=\"celerypy\"><a class=\"markdownIt-Anchor\" href=\"#celerypy\">#</a>  <code>celery.py</code></h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> celery <span class=\"token keyword\">import</span> Celery</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> os<span class=\"token punctuation\">,</span>sys</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> django</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 1. 添加 django 项目根路径</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>CELERY_BASE_DIR <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>dirname<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>abspath<span class=\"token punctuation\">(</span>__file__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>sys<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>CELERY_BASE_DIR<span class=\"token punctuation\">,</span> <span class=\"token string\">'../loonflow'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 2. 添加 django 环境</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>os<span class=\"token punctuation\">.</span>environ<span class=\"token punctuation\">.</span>setdefault<span class=\"token punctuation\">(</span><span class=\"token string\">\"DJANGO_SETTINGS_MODULE\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"loonflow.settings\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>django<span class=\"token punctuation\">.</span>setup<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 读取配置</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 3.celery 基本配置</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>app <span class=\"token operator\">=</span> Celery<span class=\"token punctuation\">(</span><span class=\"token string\">'task'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    broker <span class=\"token operator\">=</span> <span class=\"token string\">'redis://127.0.0.1:6379/14'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    backend <span class=\"token operator\">=</span> <span class=\"token string\">'redis://127.0.0.1:6379/15'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    include<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'celery_task.tasks'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># 4. 实例化时可以添加下面这个属性</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>app<span class=\"token punctuation\">.</span>conf<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   result_expires<span class=\"token operator\">=</span><span class=\"token number\">3600</span><span class=\"token punctuation\">,</span>        <span class=\"token comment\">#执行结果放到 redis 里，一个小时没人取就丢弃</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># 5. 配置定时任务：每 5 秒钟执行 调用一次 celery_task 下 tasks.py 文件中的 add 函数</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>app<span class=\"token punctuation\">.</span>conf<span class=\"token punctuation\">.</span>beat_schedule <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token string\">'add-every-5-seconds'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token string\">'task'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'celery_task.tasks.test_task_crontab'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token string\">'schedule'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5.0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token string\">'args'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\"># 时区</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>app<span class=\"token punctuation\">.</span>conf<span class=\"token punctuation\">.</span>timezone <span class=\"token operator\">=</span> <span class=\"token string\">'Asia/Shanghai'</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>   app<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"taskspy\"><a class=\"markdownIt-Anchor\" href=\"#taskspy\">#</a>  <code>tasks.py</code></h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>celery <span class=\"token keyword\">import</span> app</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> os<span class=\"token punctuation\">,</span>sys</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>celery <span class=\"token keyword\">import</span> CELERY_BASE_DIR</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token triple-quoted-string string\">'''测试定时任务'''</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>task</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">test_task_crontab</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token triple-quoted-string string\">'''添加django项目路径'''</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    sys<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>CELERY_BASE_DIR<span class=\"token punctuation\">,</span> <span class=\"token string\">'../loonflow'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">from</span> libs<span class=\"token punctuation\">.</span>aliyun_sms <span class=\"token keyword\">import</span> test_crontab</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    res <span class=\"token operator\">=</span> test_crontab<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 执行异步任务</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>task</span><span class=\"token punctuation\">(</span>bind<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">send_sms_code</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> mobile<span class=\"token punctuation\">,</span> datas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    sys<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>CELERY_BASE_DIR<span class=\"token punctuation\">,</span> <span class=\"token string\">'../loonflow'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\"># 在方法中导包</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">from</span> libs<span class=\"token punctuation\">.</span>aliyun_sms <span class=\"token keyword\">import</span> send_sms</pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token comment\"># time.sleep(5)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token comment\"># 用 res 接收发送结果，成功是:０，　失败是：－１</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        res <span class=\"token operator\">=</span> send_sms<span class=\"token punctuation\">(</span>mobile<span class=\"token punctuation\">,</span> datas<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        res <span class=\"token operator\">=</span> <span class=\"token string\">'-1'</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">if</span> res <span class=\"token operator\">==</span> <span class=\"token string\">'-1'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token comment\"># 如果发送结果是 -1  就重试.</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        self<span class=\"token punctuation\">.</span>retry<span class=\"token punctuation\">(</span>countdown<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> max_retries<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> exc<span class=\"token operator\">=</span>Exception<span class=\"token punctuation\">(</span><span class=\"token string\">'短信发送失败'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"aliyun_smspy\"><a class=\"markdownIt-Anchor\" href=\"#aliyun_smspy\">#</a>  <code>aliyun_sms.py</code></h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">send_sms</span><span class=\"token punctuation\">(</span>phone<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    client <span class=\"token operator\">=</span> AcsClient<span class=\"token punctuation\">(</span>ALY_ACCESSKEY_ID<span class=\"token punctuation\">,</span> ALY_ACCESSKEY_SECRET<span class=\"token punctuation\">,</span> <span class=\"token string\">'cn-hangzhou'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    request <span class=\"token operator\">=</span> CommonRequest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    request<span class=\"token punctuation\">.</span>set_accept_format<span class=\"token punctuation\">(</span><span class=\"token string\">'json'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    request<span class=\"token punctuation\">.</span>set_domain<span class=\"token punctuation\">(</span><span class=\"token string\">'dysmsapi.aliyuncs.com'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    request<span class=\"token punctuation\">.</span>set_method<span class=\"token punctuation\">(</span><span class=\"token string\">'POST'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    request<span class=\"token punctuation\">.</span>set_protocol_type<span class=\"token punctuation\">(</span><span class=\"token string\">'https'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    request<span class=\"token punctuation\">.</span>set_version<span class=\"token punctuation\">(</span><span class=\"token string\">'2017-05-25'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    request<span class=\"token punctuation\">.</span>set_action_name<span class=\"token punctuation\">(</span><span class=\"token string\">'SendSms'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    request<span class=\"token punctuation\">.</span>add_query_param<span class=\"token punctuation\">(</span><span class=\"token string\">'RegionId'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cn-hangzhou\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    request<span class=\"token punctuation\">.</span>add_query_param<span class=\"token punctuation\">(</span><span class=\"token string\">'PhoneNumbers'</span><span class=\"token punctuation\">,</span> phone<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    request<span class=\"token punctuation\">.</span>add_query_param<span class=\"token punctuation\">(</span><span class=\"token string\">'SignName'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ABC商城\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    request<span class=\"token punctuation\">.</span>add_query_param<span class=\"token punctuation\">(</span><span class=\"token string\">'TemplateCode'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"SMS_205407934\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    request<span class=\"token punctuation\">.</span>add_query_param<span class=\"token punctuation\">(</span><span class=\"token string\">'TemplateParam'</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    response <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span>do_action<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\"># python2:  print(response)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    res <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"##########################################\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'执行了这个方法 send_message'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">test_crontab</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'############### 执行test_crontab测试任务 #############'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'############### 审批超时短信提醒 #############'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"测试定时任务\"><a class=\"markdownIt-Anchor\" href=\"#测试定时任务\">#</a> 测试定时任务</h4>\n<blockquote>\n<p>开启异步 celery -A celery_task worker -l INFO</p>\n</blockquote>\n<p><img data-src=\"3.png\" alt=\"\"></p>\n<blockquote>\n<p>开启定时任务  celery -A celery_task beat -l INFO</p>\n</blockquote>\n<p><img data-src=\"4.png\" alt=\"\"></p>\n<h4 id=\"测试异步任务\"><a class=\"markdownIt-Anchor\" href=\"#测试异步任务\">#</a> 测试异步任务</h4>\n<p><img data-src=\"5.png\" alt=\"\"></p>\n<h3 id=\"celery管理\"><a class=\"markdownIt-Anchor\" href=\"#celery管理\">#</a> Celery 管理</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>celery <span class=\"token operator\">-</span>A celery_task worker <span class=\"token operator\">-</span>l INFO\t\t\t<span class=\"token comment\"># 单线程</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>celery <span class=\"token operator\">-</span>A celery_task status\t\t\t\t<span class=\"token comment\"># 查看当前有哪些 worker 在运行</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>celery multi start w1 w2 <span class=\"token operator\">-</span>A celery_task <span class=\"token operator\">-</span>l INFO\t\t<span class=\"token comment\"># 一次性启动 w1，w2 两个 worker</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>celery multi stop w1 w2 <span class=\"token operator\">-</span>A celery_task\t\t\t<span class=\"token comment\">#停止 w1，w2 两个 worker</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 项目中启动 celery worker , 并发数最多 50，最少 10 个</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>celery multi start celery_task <span class=\"token operator\">-</span>A celery_task <span class=\"token operator\">-</span>l debug <span class=\"token operator\">-</span><span class=\"token operator\">-</span>autoscale<span class=\"token operator\">=</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 在项目中关闭 celery worker 所有进程</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>ps auxww<span class=\"token operator\">|</span>grep <span class=\"token string\">\"celery worker\"</span><span class=\"token operator\">|</span>grep <span class=\"token operator\">-</span>v grep<span class=\"token operator\">|</span>awk <span class=\"token string\">'&#123;print $2&#125;'</span><span class=\"token operator\">|</span>xargs kill <span class=\"token operator\">-</span><span class=\"token number\">9</span></pre></td></tr></table></figure><h3 id=\"django-celery-beat管理\"><a class=\"markdownIt-Anchor\" href=\"#django-celery-beat管理\">#</a> django-celery-beat 管理</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 启动 celery beat</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>celery <span class=\"token operator\">-</span>A celery_task beat <span class=\"token operator\">-</span>l INFO</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 项目中启动 celery beat</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>celery <span class=\"token operator\">-</span>A celery_task beat <span class=\"token operator\">-</span>l debug <span class=\"token operator\">>></span> <span class=\"token operator\">/</span>aaa<span class=\"token operator\">/</span>Scheduler<span class=\"token punctuation\">.</span>log <span class=\"token number\">2</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 停止 celery beat 杀死所有心跳进程</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>ps <span class=\"token operator\">-</span>ef <span class=\"token operator\">|</span> grep <span class=\"token operator\">-</span>E <span class=\"token string\">\"celery -A celery_task beat\"</span> <span class=\"token operator\">|</span> grep <span class=\"token operator\">-</span>v grep<span class=\"token operator\">|</span> awk <span class=\"token string\">'&#123;print $2&#125;'</span> <span class=\"token operator\">|</span> xargs kill <span class=\"token operator\">-</span>TERM <span class=\"token operator\">&amp;</span><span class=\"token operator\">></span> <span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span>null</pre></td></tr></table></figure>",
            "tags": [
                "Celery"
            ]
        }
    ]
}