{
    "version": "https://jsonfeed.org/version/1",
    "title": "The course of true love never did run smooth. • All posts by \"序列化器\" tag",
    "description": "不知道写啥",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/Django%E6%A1%86%E6%9E%B6/Django-%E5%BA%8F%E5%88%97%E5%8C%96%E5%99%A8/",
            "url": "http://example.com/Django%E6%A1%86%E6%9E%B6/Django-%E5%BA%8F%E5%88%97%E5%8C%96%E5%99%A8/",
            "title": "序列化器",
            "date_published": "2020-03-10T12:10:28.000Z",
            "content_html": "<h1 id=\"1-序列化\"><a class=\"markdownIt-Anchor\" href=\"#1-序列化\">#</a> 1. 序列化</h1>\n<hr>\n<p>DRF 的核心 就是 前后端分离的核心</p>\n<p><strong>前后端分离开发的核心：</strong><br>\n将模型转换为 json 称之为 序列化<br>\n将 json 转换成模型 称之为 反序列化</p>\n<h3 id=\"11-序列化器的字段\"><a class=\"markdownIt-Anchor\" href=\"#11-序列化器的字段\">#</a> 1.1 序列化器的字段</h3>\n<hr>\n<p>Serializer 序列化器<br>\n为了得到模型里的字段，序列化器中的字段应与模型类中的字段名一致</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">''' serializers.py '''</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookInfoSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>Serializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\"># read_only=True 只能读 不能修改</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>read_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        name <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'书籍名'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        pub_date <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>DataField<span class=\"token punctuation\">(</span>label<span class=\"token operator\">=</span><span class=\"token string\">'发布日期'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        readcount <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        is_delete <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>BooleanField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        image <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>ImageField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"12-序列化\"><a class=\"markdownIt-Anchor\" href=\"#12-序列化\">#</a> 1.2 序列化</h3>\n<hr>\n<p>创建序列器</p>\n<p>序列化器的第一个参数：instance 用于序列化操作</p>\n<p>序列化器的第二个参数：data 用于反序列化操作</p>\n<p>除了 instance 和 data 参数外，在构造 Serializer 对象时，还可通过 context 参数额外添加数据，如</p>\n<blockquote>\n<p>serializer = AccountSerializer(account, context={‘request’: request})</p>\n</blockquote>\n<p>通过 context 参数附加的数据，可以通过 Serializer 对象的 context 属性获取。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">''' views.py '''</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    book <span class=\"token operator\">=</span> BookInfo<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    s <span class=\"token operator\">=</span> BookInfoSerializers<span class=\"token punctuation\">(</span>instance<span class=\"token operator\">=</span>book<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\"># 我们是通过 序列化器的 data 属性来获取 模型转换为字典的数据</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    s<span class=\"token punctuation\">.</span>data</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\"># 传递多个数据</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\"># 应用： 查询所有书籍列表</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    books <span class=\"token operator\">=</span> BookInfo<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\"># 创建序列化器，将所有书籍信息传递给序列化器</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\"># books = [BookInfo,BookInfo,...] 对象列表</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    s <span class=\"token operator\">=</span> BookInfoSerializers<span class=\"token punctuation\">(</span>books<span class=\"token punctuation\">,</span>many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    person <span class=\"token operator\">=</span> PeopleInfo<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\"># 序列化器初始化</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    s <span class=\"token operator\">=</span> PeopleInfoSerializer<span class=\"token punctuation\">(</span>instance<span class=\"token operator\">=</span>person<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"13-关联序列化器的操作\"><a class=\"markdownIt-Anchor\" href=\"#13-关联序列化器的操作\">#</a> 1.3 关联序列化器的操作</h3>\n<hr>\n<p>对于关联字段，可以采用以下几种方式：</p>\n<p>1） PrimaryKeyRelatedField</p>\n<p>2） StringRelatedField</p>\n<p>3） 使用关联对象的序列化器</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">######### 关联序列化器 ##########################</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">PeopleInfoSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>Serializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"英雄数据序列化器\"\"\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        GENDER_CHOICES <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'male'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'female'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>label<span class=\"token operator\">=</span><span class=\"token string\">'ID'</span><span class=\"token punctuation\">,</span> read_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        name <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>label<span class=\"token operator\">=</span><span class=\"token string\">'名字'</span><span class=\"token punctuation\">,</span> max_length<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        gender <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>ChoiceField<span class=\"token punctuation\">(</span>choices<span class=\"token operator\">=</span>GENDER_CHOICES<span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">'性别'</span><span class=\"token punctuation\">,</span> required<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        description <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>label<span class=\"token operator\">=</span><span class=\"token string\">'描述信息'</span><span class=\"token punctuation\">,</span> max_length<span class=\"token operator\">=</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> required<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> allow_null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token triple-quoted-string string\">''' PrimaryKeyRelatedField '''</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\"># 设置关联外键的时候，要将 read_only=True</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\"># 包含 read_only=True 参数时，该字段将不能用作反序列化使用</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\"># book = serializers.PrimaryKeyRelatedField (read_only=True,label=' 外键 ')</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token comment\"># 或者</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\"># 包含 queryset 参数时，将被用作反序列化时参数校验使用</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token comment\"># queryset 将关联模型的所有数据传递给这个属性就可以</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        book <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>PrimaryKeyRelatedField<span class=\"token punctuation\">(</span>label<span class=\"token operator\">=</span><span class=\"token string\">'外键'</span><span class=\"token punctuation\">,</span>queryset<span class=\"token operator\">=</span>BookInfo<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token triple-quoted-string string\">'''StringRelatedField'''</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token comment\"># 现在通过  PrimaryKeyRelatedField 得到的是一个  外键的一个值  2</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token comment\"># 接下来通过 一个设置 来获取 书籍的名字</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token comment\"># StringRelatedField 可以获取关联模型中的 __str_ 里的字符串</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        book <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>StringRelatedField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token triple-quoted-string string\">''' 使用关联对象的序列化器  拿到所有数据 '''</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        book <span class=\"token operator\">=</span> BookInfoSerializer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"14-关联查询\"><a class=\"markdownIt-Anchor\" href=\"#14-关联查询\">#</a> 1.4 关联查询</h3>\n<hr>\n<p>关联模型类名小写_set 作为字段名</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">''' serializers.py '''</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookInfoSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>Serializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>read_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        name <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharFIeld<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'书籍名'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        pub_date <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>DataField<span class=\"token punctuation\">(</span>label<span class=\"token operator\">=</span><span class=\"token string\">'发布日期'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        readcount <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        is_delete <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>BooleanField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        iamge <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>ImageField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\"># 书籍和人物的关系是 1：n   ===> many=True</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        peopleinfo_set <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>PrimaryKeyRelatedField<span class=\"token punctuation\">(</span>read_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>name</pre></td></tr></table></figure><h1 id=\"2-反序列化\"><a class=\"markdownIt-Anchor\" href=\"#2-反序列化\">#</a> 2. 反序列化</h1>\n<hr>\n<p>反序列化 分为两个：</p>\n<ul>\n<li>\n<p>数据校验</p>\n</li>\n<li>\n<p>数据入库</p>\n</li>\n</ul>\n<h3 id=\"21-数据校验\"><a class=\"markdownIt-Anchor\" href=\"#21-数据校验\">#</a> 2.1 数据校验</h3>\n<hr>\n<p>使用序列化器进行反序列化时，需要对数据进行验证后，才能获取验证成功的数据或保存成模型类对象。</p>\n<p>在获取反序列化的数据前，必须调用 is_valid () 方法进行验证，验证成功返回 True，否则返回 False。</p>\n<p>验证失败，可以通过序列化器对象的 errors 属性获取错误信息，返回字典，包含了字段和字段的错误。</p>\n<p>验证成功，可以通过序列化器对象的 validated_data 属性获取数据。</p>\n<p>在定义序列化器时，指明每个字段的序列化类型和选项参数，本身就是一种验证行为</p>\n<h4 id=\"211-数据校验的第一种方式\"><a class=\"markdownIt-Anchor\" href=\"#211-数据校验的第一种方式\">#</a> 2.1.1 数据校验的第一种方式</h4>\n<hr>\n<p>在定义序列化器字段的时候，规定是什么类型 就要提交符合规则的数据</p>\n<p>例如：DateField 就需要传入符合日期规则的数据</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">############## 将 JSON 转换为模型  反序列化 #############</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     <span class=\"token triple-quoted-string string\">''' serializers.py '''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookInfoSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>Serializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>read_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        name <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharFIeld<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'书籍名'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        pub_date <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>DataField<span class=\"token punctuation\">(</span>label<span class=\"token operator\">=</span><span class=\"token string\">'发布日期'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>       </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        peopleinfo_set <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>PrimaryKeyRelatedField<span class=\"token punctuation\">(</span>read_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>name</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token triple-quoted-string string\">''' views.py '''</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token builtin\">dict</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'itcast'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token string\">'pub_date'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'123'</span>   <span class=\"token comment\"># Flase</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token comment\"># 'pub_date':'2010-1-1'  # True</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token comment\"># 1. 创建序列器</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\"># 序列化器的第一个参数：instance 用于序列化操作</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\"># 序列化器的第二个参数：data 用于反序列化操作</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    serializer <span class=\"token operator\">=</span> BookInfoSerializer<span class=\"token punctuation\">(</span>data<span class=\"token operator\">=</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token comment\"># 2. 需要调用序列化器的 is_valid 方法 valid 验证  返回 True False</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token comment\"># 如果数据可用  返回 True</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    serializer<span class=\"token punctuation\">.</span>is_valid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token comment\"># raise_exception=True 可以设置为 True 来抛出异常</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    serializer<span class=\"token punctuation\">.</span>is_valid<span class=\"token punctuation\">(</span>raise_exception<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"212-数据校验的第二种方式\"><a class=\"markdownIt-Anchor\" href=\"#212-数据校验的第二种方式\">#</a> 2.1.2 数据校验的第二种方式</h4>\n<hr>\n<p>字段的选项</p>\n<p>required : 进行反序列化的时候，必须传这个字段</p>\n<p>min_length,max_length 作用于字符串</p>\n<p>min_value,max_value 作用于 Int 整型</p>\n<p>default 不传入数据 设置默认值</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">''' serializers.py '''</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookInfoSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>Serializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>read_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        name <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharFIeld<span class=\"token punctuation\">(</span>min_length<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'书籍名'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        pub_date <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>DataField<span class=\"token punctuation\">(</span>label<span class=\"token operator\">=</span><span class=\"token string\">'发布日期'</span><span class=\"token punctuation\">,</span>required<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>name</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token triple-quoted-string string\">''' views.py '''</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token builtin\">dict</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'itcast'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token string\">'pub_date'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'123'</span>   <span class=\"token comment\"># 若去掉 pub_date 则报错</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"313-数据校验的第三种方式\"><a class=\"markdownIt-Anchor\" href=\"#313-数据校验的第三种方式\">#</a> 3.1.3 数据校验的第三种方式</h4>\n<hr>\n<p>对单个字段的数据进行验证</p>\n<p>语法形式为： 在序列化器中实现方法 def validate_字段名 ()</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">''' serializers.py '''</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookInfoSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>Serializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>read_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        name <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharFIeld<span class=\"token punctuation\">(</span>min_length<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'书籍名'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        pub_date <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>DataField<span class=\"token punctuation\">(</span>label<span class=\"token operator\">=</span><span class=\"token string\">'发布日期'</span><span class=\"token punctuation\">,</span>required<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        readcount <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>default<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>required<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>name</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">validate_readcount</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token comment\"># value 就是字段传递过来的数据</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">if</span> value <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token keyword\">raise</span> serializers<span class=\"token punctuation\">.</span>ValidationError<span class=\"token punctuation\">(</span><span class=\"token string\">'阅读量不能为负数'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token comment\"># 需要将 value 返回回去</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">return</span> value</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token triple-quoted-string string\">''' views.py '''</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token builtin\">dict</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'itcast'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token string\">'readcount'</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 报异常</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"314-数据校验的第四种方式\"><a class=\"markdownIt-Anchor\" href=\"#314-数据校验的第四种方式\">#</a> 3.1.4 数据校验的第四种方式</h4>\n<hr>\n<p>对多个字段的数据进行验证时</p>\n<p>语法形式为： 在序列化器中实现方法 def validate (self,attrs)</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">''' serializers.py '''</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookInfoSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>Serializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>read_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        name <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharFIeld<span class=\"token punctuation\">(</span>min_length<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'书籍名'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        pub_date <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>DataField<span class=\"token punctuation\">(</span>label<span class=\"token operator\">=</span><span class=\"token string\">'发布日期'</span><span class=\"token punctuation\">,</span>required<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        readcount <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>default<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>required<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        commentcount <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>default<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>required<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>name</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\"># 对多个字段进行验证</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\"># def validate(self,attrs):</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">validate</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token comment\"># attrs  -->  其实就是 data</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            readcount <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'readcount'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            commentcount <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token string\">'commentcount'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">if</span> readcount <span class=\"token operator\">&lt;</span> commentcount<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token keyword\">raise</span> serializers<span class=\"token punctuation\">.</span>ValidationError<span class=\"token punctuation\">(</span><span class=\"token string\">'评论量不能大于阅读量'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token comment\"># 要将数据返回</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token keyword\">return</span> data</pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token triple-quoted-string string\">''' views.py '''</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token comment\"># 自定义需求：评论量不能大于阅读量</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token builtin\">dict</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'itcast'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token string\">'readcount'</span><span class=\"token punctuation\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token string\">'commentcount'</span><span class=\"token punctuation\">:</span><span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"315-数据校验的第五种方式\"><a class=\"markdownIt-Anchor\" href=\"#315-数据校验的第五种方式\">#</a> 3.1.5 数据校验的第五种方式</h4>\n<hr>\n<p>自定义验证方法</p>\n<p>同时给字段添加自定义验证方法</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">''' serializers.py '''</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookInfoSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>Serializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\"># 自定义验证方法</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">custom_validate</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">if</span> self <span class=\"token operator\">==</span> <span class=\"token string\">'admin'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">raise</span> serializers<span class=\"token punctuation\">.</span>ValidationError<span class=\"token punctuation\">(</span><span class=\"token string\">'我就是来捣乱的'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>read_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>       </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\"># validators=[]  是给字段 添加自定义验证方法</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        name <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharFIeld<span class=\"token punctuation\">(</span>min_length<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'书籍名'</span><span class=\"token punctuation\">,</span>validators<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>custom_validate<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>       </pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>name</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token triple-quoted-string string\">''' views.py '''</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\"># 规定：评论量不能大于阅读量</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token builtin\">dict</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'itcast'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token string\">'readcount'</span><span class=\"token punctuation\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token string\">'commentcount'</span><span class=\"token punctuation\">:</span><span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"22-数据入库\"><a class=\"markdownIt-Anchor\" href=\"#22-数据入库\">#</a> 2.2 数据入库</h3>\n<hr>\n<h4 id=\"221-数据保存-save-方法\"><a class=\"markdownIt-Anchor\" href=\"#221-数据保存-save-方法\">#</a> 2.2.1 数据保存 save 方法</h4>\n<hr>\n<p>继承自 Serializer 的序列化 我们在调用 save 方法的时候，需要手动实现 create 方法，</p>\n<p>调用 save 方法之前，必须调用 is_valid 方法，</p>\n<p>即 要想保存数据，必须保证数据是经过校验的。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">''' serializers.py '''</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookInfoSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>Serializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>validated_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token comment\"># dict -->  data --> attrs  -->  validated_data</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token comment\"># validated_data 此处其实就是 views.py 中的 dict</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token comment\"># validated_data 已经被验证过的数据</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token comment\"># *  对列表进行解包    *list</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token comment\"># ** 对字典进行解包    **dict</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token comment\">#   此处解包  将 dict 中的值 赋值给对象中的对应字段</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            book <span class=\"token operator\">=</span> BookInfo<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>create<span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>validated_data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token comment\"># create 需要将创建的对象返回</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">return</span> book </pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>     <span class=\"token triple-quoted-string string\">''' views.py '''</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\"># 规定：评论量不能大于阅读量</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token builtin\">dict</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'itcast'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token string\">'readcount'</span><span class=\"token punctuation\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token string\">'commentcount'</span><span class=\"token punctuation\">:</span><span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>   </pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    serializer <span class=\"token operator\">=</span> BookInfoSerializer<span class=\"token punctuation\">(</span>data<span class=\"token operator\">=</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    serializer<span class=\"token punctuation\">.</span>is_valid<span class=\"token punctuation\">(</span>raise_exception<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token comment\"># 3. 保存需要调用序列化器的 save 方法</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token comment\"># 继承自 Serializer 的序列化 我们在调用 save 方法的时候，需要手动实现 create 方法</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    serializer<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"222-序列化器中传入两个参数即数据的更新操作\"><a class=\"markdownIt-Anchor\" href=\"#222-序列化器中传入两个参数即数据的更新操作\">#</a> 2.2.2 序列化器中传入两个参数，即数据的更新操作</h4>\n<hr>\n<p>如果我们在序列化器中既传入了对象，又传入了数据</p>\n<p>系统会认为我们在更新数据</p>\n<p>继承自 Serializer 的类，要更新数据的时候，需要手动实现 update 方法</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">''' serializers.py '''</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookInfoSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>Serializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>instance<span class=\"token punctuation\">,</span>validated_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token comment\"># instance : 就是我们在更新数据时，传入序列化器的对象</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token comment\"># validated_data ： 验证之后的数据</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            instance<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> validated_data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span>instance<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            instance<span class=\"token punctuation\">.</span>pub_date <span class=\"token operator\">=</span> validated_data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'pub_date'</span><span class=\"token punctuation\">,</span>instance<span class=\"token punctuation\">.</span>pub_date<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            instance<span class=\"token punctuation\">.</span>readcount <span class=\"token operator\">=</span> validated_data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'readcount'</span><span class=\"token punctuation\">,</span>instance<span class=\"token punctuation\">.</span>readcount<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            instance<span class=\"token punctuation\">.</span>commentcount <span class=\"token operator\">=</span> validated_data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'commentcount'</span><span class=\"token punctuation\">,</span>instance<span class=\"token punctuation\">.</span>commentcount<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            instance<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token comment\"># update () 方法需要我们手动返回对象</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">return</span> instance</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token triple-quoted-string string\">'''views.py '''</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\"># 1. 获取对象</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    book <span class=\"token operator\">=</span> BookInfo<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\"># 2. 保存数据</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    data <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'lalala'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token string\">'pub_date'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'2018-1-1'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token string\">'readcount'</span><span class=\"token punctuation\">:</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token string\">'commentcount'</span><span class=\"token punctuation\">:</span><span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>    </pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token comment\"># 3. 创建序列化器</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    s <span class=\"token operator\">=</span> BookInfoSerializer<span class=\"token punctuation\">(</span>instance<span class=\"token operator\">=</span>book<span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token comment\"># 4. 验证数据</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    s<span class=\"token punctuation\">.</span>is_valid<span class=\"token punctuation\">(</span>raise_exception<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token comment\"># 5. 保存数据</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    s<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"3-modelserializer\"><a class=\"markdownIt-Anchor\" href=\"#3-modelserializer\">#</a> 3. ModelSerializer</h1>\n<hr>\n<p>如果我们想要使用序列化器对应的是 Django 的模型类，DRF 为我们提供了 ModelSerializer 模型类</p>\n<p>序列化器来帮助我们快速创建一个 Serializer 类。</p>\n<p>ModelSerializer 与常规的 Serializer 相同，但提供了：</p>\n<p>基于模型类自动生成一系列字段</p>\n<p>包含默认的 create () 和 update () 的实现</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">''' serializers.py '''</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>ModelSerializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\"># 如何设置   通过 class Meta</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            model <span class=\"token operator\">=</span> BookInfo    <span class=\"token comment\"># 设置关联模型     model 就是关联模型</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token comment\"># fields = '__all__'  # fields 设置字段   __all__表示所有字段</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token comment\"># fields = ['id','name','pub_date']  # fields 设置字段  [] 列表显示来设置</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            exclude <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'image'</span><span class=\"token punctuation\">]</span>   <span class=\"token comment\"># exclude 排除列表中的字段，剩余的字段都显示</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            read_only_fields <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'readcount'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'commentcount'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token comment\"># 我们可以对自动生成的字段  进行额外的设置</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            extra_kwargs <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token comment\"># 字段名：&#123;选项：值&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token string\">'pub_date'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'required'</span><span class=\"token punctuation\">:</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token string\">'readcount'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                    <span class=\"token string\">'max_value'</span><span class=\"token punctuation\">:</span><span class=\"token number\">10000</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                    <span class=\"token string\">'min_value'</span><span class=\"token punctuation\">:</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token triple-quoted-string string\">'''views.py'''</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\">#########ModelSerializer##############</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    data <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'abc'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token string\">'pub_date'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'2018-1-1'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token string\">'readcount'</span><span class=\"token punctuation\">:</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token string\">'commentcount'</span><span class=\"token punctuation\">:</span><span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>    </pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    s <span class=\"token operator\">=</span> BookSerializer<span class=\"token punctuation\">(</span>data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    s<span class=\"token punctuation\">.</span>is_valid<span class=\"token punctuation\">(</span>raise_exception<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    s<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "序列化器"
            ]
        }
    ]
}