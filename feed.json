{
    "version": "https://jsonfeed.org/version/1",
    "title": "The course of true love never did run smooth.",
    "description": "不知道写啥",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/Django%E6%A1%86%E6%9E%B6/wechat-%E6%89%AB%E7%A0%81%E6%94%AF%E4%BB%98/",
            "url": "http://example.com/Django%E6%A1%86%E6%9E%B6/wechat-%E6%89%AB%E7%A0%81%E6%94%AF%E4%BB%98/",
            "title": "Wechat--扫码支付",
            "date_published": "2020-12-27T08:35:04.000Z",
            "content_html": "<h1 id=\"概述\"><a class=\"markdownIt-Anchor\" href=\"#概述\">#</a> 概述</h1>\n<blockquote>\n<p>在生活中真正具有广泛性、高效性、使用方便性的支付方式还得是扫码支付，扫码的优点在于推广成本低，上至钓鱼台国宾馆，下至发廊地摊都能用，打印出来就完事了，而相比其他支付方式，现金的找零及假钞问题，信用卡的办理门槛、pos 机的沉没成本，所以基于二维码的扫码支付的确是非常符合国情的。</p>\n</blockquote>\n<h1 id=\"python3-django22-vue-实现微信扫码支付\"><a class=\"markdownIt-Anchor\" href=\"#python3-django22-vue-实现微信扫码支付\">#</a> Python3 + Django2.2 + Vue 实现微信扫码支付</h1>\n<h2 id=\"wechat\"><a class=\"markdownIt-Anchor\" href=\"#wechat\">#</a> Wechat</h2>\n<ol>\n<li>首先注册微信公众平台</li>\n</ol>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29t\">https://mp.weixin.qq.com</span></p>\n</blockquote>\n<ul>\n<li>获得开发者 id 和秘钥 (appid &amp; appsecret)</li>\n</ul>\n<p><img data-src=\"1.png\" alt=\"\"></p>\n<ul>\n<li>同时确保获取微信支付接口的权限</li>\n</ul>\n<p><img data-src=\"2.png\" alt=\"\"></p>\n<ol start=\"2\">\n<li>随后注册微信支付商户平台</li>\n</ol>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYXkud2VpeGluLnFxLmNvbS8=\">https://pay.weixin.qq.com/</span></p>\n</blockquote>\n<ul>\n<li>获取微信支付的商户号 (在账户信息页面)</li>\n</ul>\n<p><img data-src=\"3.png\" alt=\"\"></p>\n<ul>\n<li>获取微信支付接口的秘钥 (账户中心 -&gt;api 安全)</li>\n</ul>\n<p><img data-src=\"4.png\" alt=\"\"></p>\n<ul>\n<li>产品中心 -&gt; 开发配置页面，配置支付域名</li>\n</ul>\n<p><img data-src=\"5.png\" alt=\"\"></p>\n<div class=\"note info\">\n<p>扫码支付域名既支持 https 也支持 http，非常方便，同时注意域名必须是一个备案域名。</p>\n</div>\n<h2 id=\"django\"><a class=\"markdownIt-Anchor\" href=\"#django\">#</a> Django</h2>\n<ol>\n<li>首先导入依赖的库和一些工具方法</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>http <span class=\"token keyword\">import</span> HttpResponse<span class=\"token punctuation\">,</span> HttpResponseRedirect</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> random</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> time</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> hashlib</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> qrcode</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">from</span> bs4 <span class=\"token keyword\">import</span> BeautifulSoup</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">trans_xml_to_dict</span><span class=\"token punctuation\">(</span>data_xml<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    soup <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span>data_xml<span class=\"token punctuation\">,</span> features<span class=\"token operator\">=</span><span class=\"token string\">'xml'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    xml <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'xml'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 解析 XML</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> xml<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    data_dict <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> item <span class=\"token keyword\">in</span> xml<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">return</span> data_dict</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">trans_dict_to_xml</span><span class=\"token punctuation\">(</span>data_dict<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 定义字典转 XML 的函数</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    data_xml <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>data_dict<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 遍历字典排序后的 key</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        v <span class=\"token operator\">=</span> data_dict<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 取出字典中 key 对应的 value</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">if</span> k <span class=\"token operator\">==</span> <span class=\"token string\">'detail'</span> <span class=\"token keyword\">and</span> <span class=\"token keyword\">not</span> v<span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;![CDATA['</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 添加 XML 标记</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            v <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;![CDATA[&#123;&#125;]]>'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        data_xml<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;&#123;key&#125;>&#123;value&#125;&lt;/&#123;key&#125;>'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>key<span class=\"token operator\">=</span>k<span class=\"token punctuation\">,</span> value<span class=\"token operator\">=</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token string\">'&lt;xml>&#123;&#125;&lt;/xml>'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>data_xml<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 返回 XML</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_sign</span><span class=\"token punctuation\">(</span>data_dict<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 签名函数，参数为签名的数据和密钥</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    params_list <span class=\"token operator\">=</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>data_dict<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> key<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> e<span class=\"token punctuation\">:</span> e<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> reverse<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 参数字典倒排序为列表</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    params_str <span class=\"token operator\">=</span> <span class=\"token string\">\"&amp;\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token string\">u\"&#123;&#125;=&#123;&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span> v <span class=\"token keyword\">in</span> params_list<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'&amp;key='</span> <span class=\"token operator\">+</span> key</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token comment\"># 组织参数字符串并在末尾添加商户交易密钥</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    md5 <span class=\"token operator\">=</span> hashlib<span class=\"token punctuation\">.</span>md5<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 使用 MD5 加密模式</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    md5<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span>params_str<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 将参数字符串传入</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    sign <span class=\"token operator\">=</span> md5<span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 完成加密并转为大写</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">return</span> sign</pre></td></tr></table></figure><ol start=\"2\">\n<li>编写支付逻辑，参考微信官方文档</li>\n</ol>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYXkud2VpeGluLnFxLmNvbS93aWtpL2RvYy9hcGkvbmF0aXZlLnBocD9jaGFwdGVyPTZfNSZhbXA7aW5kZXg9Mw==\">https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=6_5&amp;index=3</span></p>\n</blockquote>\n<details class=\"primary\"><summary>业务流程说明</summary><div>\n<p>（1）商户后台系统根据用户选购的商品生成订单。</p>\n<p>（2）用户确认支付后调用微信支付【统一下单 API】生成预支付交易；</p>\n<p>（3）微信支付系统收到请求后生成预支付交易单，并返回交易会话的二维码链接 code_url。</p>\n<p>（4）商户后台系统根据返回的 code_url 生成二维码。</p>\n<p>（5）用户打开微信 “扫一扫” 扫描二维码，微信客户端将扫码内容发送到微信支付系统。</p>\n<p>（6）微信支付系统收到客户端请求，验证链接有效性后发起用户支付，要求用户授权。</p>\n<p>（7）用户在微信客户端输入密码，确认支付后，微信客户端提交授权。</p>\n<p>（8）微信支付系统根据用户授权完成支付交易。</p>\n<p>（9）微信支付系统完成支付交易后给微信客户端返回交易结果，并将交易结果通过短信、微信消息提示用户。微信客户端展示支付交易结果页面。</p>\n<p>（10）微信支付系统通过发送异步消息通知商户后台系统支付结果。商户后台系统需回复接收情况，通知微信后台系统不再发送该单的支付通知。</p>\n<p>（11）未收到支付通知的情况，商户后台系统调用【查询订单 API】。</p>\n<p>（12）商户确认订单已支付后给用户发货。</p>\n</div></details>\n<ul>\n<li>我们需要调用微信的统一下单接口文档</li>\n</ul>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYXkud2VpeGluLnFxLmNvbS93aWtpL2RvYy9hcGkvbmF0aXZlLnBocD9jaGFwdGVyPTlfMQ==\">https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=9_1</span></p>\n</blockquote>\n<ul>\n<li>编写逻辑</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">wx_pay</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    url <span class=\"token operator\">=</span> <span class=\"token string\">'https://api.mch.weixin.qq.com/pay/unifiedorder'</span>  <span class=\"token comment\"># 微信扫码支付接口</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    key <span class=\"token operator\">=</span> <span class=\"token string\">'945bec********a8fbf7d7'</span>  <span class=\"token comment\">#商户 api 秘钥</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    total_fee <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token comment\">#支付金额，单位分</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    body <span class=\"token operator\">=</span> <span class=\"token string\">'123123'</span>  <span class=\"token comment\"># 商品描述</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    out_trade_no <span class=\"token operator\">=</span> <span class=\"token string\">'order_%s'</span> <span class=\"token operator\">%</span> random<span class=\"token punctuation\">.</span>randrange<span class=\"token punctuation\">(</span><span class=\"token number\">100000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">999999</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 订单编号</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    params <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token string\">'appid'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'wx09*****f'</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># APPID</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token string\">'mch_id'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'16****08'</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 商户号</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token string\">'notify_url'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'http://wxpay.v3u.cn/wx_back/'</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 支付域名回调地址</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token string\">'product_id'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'goods_%s'</span> <span class=\"token operator\">%</span> random<span class=\"token punctuation\">.</span>randrange<span class=\"token punctuation\">(</span><span class=\"token number\">100000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">999999</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 商品编号</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token string\">'trade_type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'NATIVE'</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 支付类型（扫码支付）</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token string\">'spbill_create_ip'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'114.254.176.137'</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 发送请求服务器的 IP 地址</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token string\">'total_fee'</span><span class=\"token punctuation\">:</span> total_fee<span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 订单总金额</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token string\">'out_trade_no'</span><span class=\"token punctuation\">:</span> out_trade_no<span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 订单编号</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token string\">'body'</span><span class=\"token punctuation\">:</span> body<span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 商品描述</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token string\">'nonce_str'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'ibuaiVcKdpRxkhJA'</span>  <span class=\"token comment\"># 字符串</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    sign <span class=\"token operator\">=</span> get_sign<span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 获取签名</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    params<span class=\"token punctuation\">.</span>setdefault<span class=\"token punctuation\">(</span><span class=\"token string\">'sign'</span><span class=\"token punctuation\">,</span> sign<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 添加签名到参数字典</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    xml <span class=\"token operator\">=</span> trans_dict_to_xml<span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 转换字典为 XML</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    response <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">(</span><span class=\"token string\">'post'</span><span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>xml<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 以 POST 方式向微信公众平台服务器发起请求</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    data_dict <span class=\"token operator\">=</span> trans_xml_to_dict<span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 将请求返回的数据转为字典</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data_dict<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    qrcode_name <span class=\"token operator\">=</span> out_trade_no <span class=\"token operator\">+</span> <span class=\"token string\">'.png'</span>  <span class=\"token comment\"># 支付二维码图片保存路径</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">if</span> data_dict<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'return_code'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">'SUCCESS'</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 如果请求成功</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        img <span class=\"token operator\">=</span> qrcode<span class=\"token punctuation\">.</span>make<span class=\"token punctuation\">(</span>data_dict<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'code_url'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 创建支付二维码片</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        img<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span> <span class=\"token operator\">+</span> qrcode_name<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 保存支付二维码</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">return</span> HttpResponse<span class=\"token punctuation\">(</span>qrcode_name<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>访问 http://localhost:8000/wx_pay/</li>\n</ol>\n<p><img data-src=\"6.png\" alt=\"\"></p>\n<h2 id=\"vue\"><a class=\"markdownIt-Anchor\" href=\"#vue\">#</a> Vue</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>center</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>扫码支付<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>center</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-form-item</span> <span class=\"token attr-name\">v-bind</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>formItemLayout<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">label</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>金额<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-input</span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>money<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-form-item</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-form-item</span> <span class=\"token attr-name\">v-bind</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tailFormItemLayout<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>primary<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">html-type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        生成二维码</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-form-item</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-form-item</span> <span class=\"token attr-name\">v-bind</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>formItemLayout<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">label</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>二维码<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">:src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>src<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-form-item</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      money<span class=\"token operator\">:</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      src<span class=\"token operator\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      formItemLayout<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        labelCol<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>          xs<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> span<span class=\"token operator\">:</span> <span class=\"token number\">24</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>          sm<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> span<span class=\"token operator\">:</span> <span class=\"token number\">8</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        wrapperCol<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>          xs<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> span<span class=\"token operator\">:</span> <span class=\"token number\">24</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>          sm<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> span<span class=\"token operator\">:</span> <span class=\"token number\">16</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>      tailFormItemLayout<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        wrapperCol<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>          xs<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            span<span class=\"token operator\">:</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            offset<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>          sm<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            span<span class=\"token operator\">:</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            offset<span class=\"token operator\">:</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>      dataSource<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>          key<span class=\"token operator\">:</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>          name<span class=\"token operator\">:</span> <span class=\"token string\">'Edward King 0'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>          age<span class=\"token operator\">:</span> <span class=\"token string\">'32'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>          address<span class=\"token operator\">:</span> <span class=\"token string\">'London, Park Lane no. 0'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>          key<span class=\"token operator\">:</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>          name<span class=\"token operator\">:</span> <span class=\"token string\">'Edward King 1'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>          age<span class=\"token operator\">:</span> <span class=\"token string\">'32'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>          address<span class=\"token operator\">:</span> <span class=\"token string\">'London, Park Lane no. 1'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>      columns<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>          title<span class=\"token operator\">:</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>          dataIndex<span class=\"token operator\">:</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>          title<span class=\"token operator\">:</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>          dataIndex<span class=\"token operator\">:</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>          title<span class=\"token operator\">:</span> <span class=\"token string\">'address'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>          dataIndex<span class=\"token operator\">:</span> <span class=\"token string\">'address'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>          title<span class=\"token operator\">:</span> <span class=\"token string\">'operation'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>          dataIndex<span class=\"token operator\">:</span> <span class=\"token string\">'operation'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>          scopedSlots<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> customRender<span class=\"token operator\">:</span> <span class=\"token string\">'operation'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>  methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token function-variable function\">submit</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>       <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>axios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://localhost:8000/wx_pay/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"103\"></td><td><pre>            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">\"http://localhost:8000/static/upload/\"</span><span class=\"token operator\">+</span>result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>img</pre></td></tr><tr><td data-num=\"106\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"107\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    <span class=\"token function\">onDelete</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataSource<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><ul>\n<li>当用户点击按钮之后，请求后端支付接口，将接口生成的二维码返回给前端</li>\n</ul>\n<p><img data-src=\"7.png\" alt=\"\"></p>\n<ul>\n<li>微信进行扫码支付，需要注意的是，该二维码有效期只有五分钟</li>\n</ul>\n<p><img data-src=\"8.png\" alt=\"\"></p>\n<ul>\n<li>支付成功之后，我们还需要对交易进行确认，所以根据微信官方文档，调用统一查询接口</li>\n</ul>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYXkud2VpeGluLnFxLmNvbS93aWtpL2RvYy9hcGkvbmF0aXZlLnBocD9jaGFwdGVyPTlfMg==\">https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=9_2</span></p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">wx_check</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">#统一订单查询接口</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    url <span class=\"token operator\">=</span> <span class=\"token string\">\"https://api.mch.weixin.qq.com/pay/orderquery\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    out_trade_no <span class=\"token operator\">=</span> <span class=\"token string\">\"order_537236\"</span> <span class=\"token comment\">#支付后的商户订单号</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    key <span class=\"token operator\">=</span> <span class=\"token string\">'945b******d7'</span>  <span class=\"token comment\"># 商户 api 密钥</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    params <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token string\">'appid'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'wx0*****ff'</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># APPID</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token string\">'mch_id'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'16*****08'</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 商户号</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token string\">'out_trade_no'</span><span class=\"token punctuation\">:</span> out_trade_no<span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 订单编号</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token string\">'nonce_str'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'ibuaiVcKdpRxkhJA'</span>  <span class=\"token comment\"># 随机字符串</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    sign <span class=\"token operator\">=</span> get_sign<span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 获取签名</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    params<span class=\"token punctuation\">.</span>setdefault<span class=\"token punctuation\">(</span><span class=\"token string\">'sign'</span><span class=\"token punctuation\">,</span> sign<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 添加签名到参数字典</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    xml <span class=\"token operator\">=</span> trans_dict_to_xml<span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 转换字典为 XML</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    response <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">(</span><span class=\"token string\">'post'</span><span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>xml<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 以 POST 方式向微信公众平台服务器发起请求</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    data_dict <span class=\"token operator\">=</span> trans_xml_to_dict<span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 将请求返回的数据转为字典</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data_dict<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">return</span> HttpResponse<span class=\"token punctuation\">(</span><span class=\"token string\">'ok'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><div class=\"note info\">\n<p>查询的订单编号可以使商户自己的订单编号，也可以是微信订单号，二者必取其一</p>\n</div>\n<p><img data-src=\"9.png\" alt=\"\"></p>\n<ul>\n<li>\n<p>访问接口 <span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdDo4MDAwL3d4X2NoZWNrLw==\">http://localhost:8000/wx_check/</span></p>\n<p>返回结果：</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>返回结果：<span class=\"token punctuation\">&#123;</span><span class=\"token string\">'return_code'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'SUCCESS'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'return_msg'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'OK'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'appid'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'wx092344a76b9979ff'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mch_id'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'1602932608'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'nonce_str'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'BVoaDmxxADkpSFEl'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sign'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'23A86EB406B743E0C2C61C7E78DC9373'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'result_code'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'SUCCESS'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'openid'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'oy9q36f9Dpeokj9FWyN3j0znpIqE'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'is_subscribe'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'N'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'trade_type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'NATIVE'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bank_type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'OTHERS'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'total_fee'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'fee_type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'CNY'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'transaction_id'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'4200000806202012174121934231'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'out_trade_no'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'order_537236'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'attach'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'time_end'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'20201217231553'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'trade_state'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'SUCCESS'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cash_fee'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'trade_state_desc'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'支付成功'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cash_fee_type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'CNY'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "Wechat"
            ]
        },
        {
            "id": "http://example.com/Django%E6%A1%86%E6%9E%B6/PayPal-%E8%B7%A8%E5%A2%83%E6%94%AF%E4%BB%98/",
            "url": "http://example.com/Django%E6%A1%86%E6%9E%B6/PayPal-%E8%B7%A8%E5%A2%83%E6%94%AF%E4%BB%98/",
            "title": "PayPal--跨境支付",
            "date_published": "2020-12-26T06:47:25.000Z",
            "content_html": "<h1 id=\"概述\"><a class=\"markdownIt-Anchor\" href=\"#概述\">#</a> 概述</h1>\n<blockquote>\n<p>PayPal 是倍受全球亿万用户追捧的国际贸易支付工具</p>\n<p>是全球商户和消费者最受欢迎的电子支付方式之一，在跨境交易中有着超过 90% 的卖家和超过 85% 的买家认可并正在使用 PayPal 电子支付业务。当然，PayPal 国际业务体量如此惊人，肯定不是毫无原因的</p>\n<p>PayPal 支付的优势就是其业务网络遍布全球。目前 PayPal 的庞大网络覆盖了全球 200 多个国家，可提供 20 多种语言服务，并接受 100 多种货币付款和 56 种货币提现。同时，还允许在账户中持有 25 种货币余额。换句话说，只要付款人拥有一个 PayPal 账户，他就拥有了在 200 多个国家进行电子支付购物，并在需要服务的时候享受到母语支持的各种便捷服务。</p>\n</blockquote>\n<h1 id=\"python3-django22-vue集成paypal跨境支付\"><a class=\"markdownIt-Anchor\" href=\"#python3-django22-vue集成paypal跨境支付\">#</a> Python3 + Django2.2 + Vue 集成 PayPal 跨境支付</h1>\n<h2 id=\"paypal\"><a class=\"markdownIt-Anchor\" href=\"#paypal\">#</a> PayPal</h2>\n<ol>\n<li>首先注册官网账号</li>\n</ol>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucGF5cGFsLmNvbQ==\">https://www.paypal.com</span></p>\n</blockquote>\n<ol start=\"2\">\n<li>开发者平台</li>\n</ol>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIucGF5cGFsLmNvbS9kZXZlbG9wZXIvYWNjb3VudHMv\">https://developer.paypal.com/developer/accounts/</span></p>\n</blockquote>\n<ol start=\"3\">\n<li>沙盒账号控制页面</li>\n</ol>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIucGF5cGFsLmNvbS9kZXZlbG9wZXIvYWNjb3VudHMv\">https://developer.paypal.com/developer/accounts/</span></p>\n</blockquote>\n<div class=\"note info\">\n<p>会默认创建两个账号，一个是商户的，另外一个是个人的</p>\n</div>\n<ol start=\"4\">\n<li>进入应用管理页面，点<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIucGF5cGFsLmNvbS9kZXZlbG9wZXIvYWNjb3VudHMv\">这里</span></li>\n</ol>\n<ul>\n<li>记录下它的 client_id 和 client_secret，一会要用到</li>\n</ul>\n<p><img data-src=\"1.png\" alt=\"\"></p>\n<p><img data-src=\"2.png\" alt=\"\"></p>\n<h2 id=\"django\"><a class=\"markdownIt-Anchor\" href=\"#django\">#</a> Django</h2>\n<ol>\n<li>安装 paypal 在 python 端的 SDK</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip3 install paypalrestsdk</pre></td></tr></table></figure><ol start=\"2\">\n<li>生成支付链接</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> paypalrestsdk</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>http <span class=\"token keyword\">import</span> HttpResponse</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_parpal_url</span><span class=\"token punctuation\">(</span>total_money<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    paypalrestsdk<span class=\"token punctuation\">.</span>configure<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token string\">\"mode\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"sandbox\"</span><span class=\"token punctuation\">,</span>\t\t\t\t<span class=\"token comment\"># sandbox 代表沙盒</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token string\">\"client_id\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"你的client_id\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token string\">\"client_secret\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"你的client_secret\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    payment <span class=\"token operator\">=</span> paypalrestsdk<span class=\"token punctuation\">.</span>Payment<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token string\">\"intent\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"sale\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token string\">\"payer\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token string\">\"payment_method\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"paypal\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token string\">\"redirect_urls\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token string\">\"return_url\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"http://localhost:8080/paypal_back/\"</span><span class=\"token punctuation\">,</span>\t\t<span class=\"token comment\"># 支付成功跳转页面</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token string\">\"cancel_url\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"http://localhost:3000/paypal/cancel/\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 取消支付页面</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token string\">\"transactions\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token string\">\"amount\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token string\">\"total\"</span><span class=\"token punctuation\">:</span> total_money<span class=\"token punctuation\">,</span>\t\t\t\t<span class=\"token comment\"># 金额</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token string\">\"currency\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"USD\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token string\">\"description\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Paypal余额充值\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">if</span> payment<span class=\"token punctuation\">.</span>create<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Payment created successfully\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">for</span> link <span class=\"token keyword\">in</span> payment<span class=\"token punctuation\">.</span>links<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token keyword\">if</span> link<span class=\"token punctuation\">.</span>rel <span class=\"token operator\">==</span> <span class=\"token string\">\"approval_url\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                approval_url <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">.</span>href<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Redirect for approval: %s\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>approval_url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                <span class=\"token keyword\">return</span> approval_url</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token comment\"># print(payment.error)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">return</span> HttpResponse<span class=\"token punctuation\">(</span><span class=\"token string\">\"支付失败\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ol start=\"3\">\n<li><code>views.py</code></li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>Paypal <span class=\"token keyword\">import</span> get_parpal_url</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> paypalrestsdk</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 支付链接</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">PayPalView</span><span class=\"token punctuation\">(</span>APIView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">post</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        uid <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'uid'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        pay_method <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'pay_method'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        total_money <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'total_money'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        parpal_url <span class=\"token operator\">=</span> get_parpal_url<span class=\"token punctuation\">(</span>total_money<span class=\"token punctuation\">)</span>\t<span class=\"token comment\"># 调用刚刚写好的函数方法</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"code\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"msg\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"返回PayPal支付url\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"paypal_url\"</span><span class=\"token punctuation\">:</span> parpal_url<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ul>\n<li>支付完成后，会跳回刚刚传过去的回调页面</li>\n<li>paypal 会传过来三个参数，支付 id,token 和支付者 id</li>\n<li>此时，在回调方法里，我们需要通过支付者 id 进行确认验证支付</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 回调</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">PayPal_back</span><span class=\"token punctuation\">(</span>APIView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">post</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        uid <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'uid'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        paymentid <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"paymentId\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 订单 id</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        payerid <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"PayerID\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 支付者 id</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        payment <span class=\"token operator\">=</span> paypalrestsdk<span class=\"token punctuation\">.</span>Payment<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>paymentid<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>payment<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">if</span> payment<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"payer_id\"</span><span class=\"token punctuation\">:</span> payerid<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Payment execute successfully\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token string\">\"支付成功\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>payment<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Error Hash</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token string\">\"支付失败\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"vue\"><a class=\"markdownIt-Anchor\" href=\"#vue\">#</a> vue</h2>\n<ol>\n<li>支付页面</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-input</span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>输入充值金额(美元)<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>number<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>money<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span>500px</span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>primary<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span>20px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sub<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            确定</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>'</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    post_paypal_url<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@/http/apis'</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            money<span class=\"token operator\">:</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            pay_method<span class=\"token operator\">:</span><span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pay_method <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>pay_method</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    methods<span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token function\">sub</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token keyword\">let</span> params <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                <span class=\"token string\">\"uid\"</span><span class=\"token operator\">:</span>localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'uid'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                <span class=\"token string\">\"total_money\"</span><span class=\"token operator\">:</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>money<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                <span class=\"token string\">\"pay_method\"</span><span class=\"token operator\">:</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pay_method<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token function\">post_paypal_url</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                <span class=\"token comment\">// 获取支付链接并跳转</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>paypal_url</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><ol start=\"2\">\n<li>回调页面</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>PayPal回调<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    post_paypal_back<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@/http/apis'</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            query<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\">// 支付完成后获取，PayPal 传来的参数，发送给后端</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>query <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>query</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">let</span> params <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token string\">\"uid\"</span><span class=\"token operator\">:</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'uid'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token string\">'paymentId'</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>paymentId<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token string\">'PayerID'</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>PayerID<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token function\">post_paypal_back</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"演示\"><a class=\"markdownIt-Anchor\" href=\"#演示\">#</a> 演示</h2>\n<p><img data-src=\"PayPal.gif\" alt=\"\"></p>\n",
            "tags": [
                "PayPal"
            ]
        },
        {
            "id": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/WebSocket-%E5%85%A8%E5%8F%8C%E5%B7%A5%E9%80%9A%E4%BF%A1%E7%9A%84%E5%8D%8F%E8%AE%AE/",
            "url": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/WebSocket-%E5%85%A8%E5%8F%8C%E5%B7%A5%E9%80%9A%E4%BF%A1%E7%9A%84%E5%8D%8F%E8%AE%AE/",
            "title": "WebSocket--全双工通信协议",
            "date_published": "2020-12-24T02:48:55.000Z",
            "content_html": "<h1 id=\"概述\"><a class=\"markdownIt-Anchor\" href=\"#概述\">#</a> 概述</h1>\n<blockquote>\n<p><code>WebSocket</code>  是一种在单个 <code>TCP</code>  连接上进行全双工通信的协议.</p>\n<p><code>WebSocket</code>  使得客户端和服务器之间的数据交换变得更加简单，允许 <code>服务端主动</code> 向 <code>客户端推送数据</code> 。在 <code>WebSocket API</code>  中，浏览器和服务器只需要完成一次握手，两者之间就直接可以创建持久性的连接，并进行双向数据传输。</p>\n</blockquote>\n<h2 id=\"特点\"><a class=\"markdownIt-Anchor\" href=\"#特点\">#</a> 特点</h2>\n<ul>\n<li>\n<p>建立在 TCP 协议之上，服务器端的实现比较容易。</p>\n</li>\n<li>\n<p>与 HTTP 协议有着良好的兼容性。默认端口也是 80 和 443，并且握手阶段采用 HTTP 协议，因此握手时不容易屏蔽，能通过各种 HTTP 代理服务器。</p>\n</li>\n<li>\n<p>数据格式轻量，性能开销小。</p>\n</li>\n<li>\n<p>没有同源限制，客户端可以与任意服务器通信</p>\n</li>\n<li>\n<p>协议标识符是 ws（如果加密，则是 wss），请求的地址就是后端支持 websocket 的 API。</p>\n</li>\n</ul>\n<blockquote>\n<pre><code>ws://localhost:8000/websocketlink/\n</code></pre>\n</blockquote>\n<h2 id=\"几种与服务端实时通信的方法\"><a class=\"markdownIt-Anchor\" href=\"#几种与服务端实时通信的方法\">#</a> 几种与服务端实时通信的方法</h2>\n<ol>\n<li><strong>AJAX 轮询</strong></li>\n</ol>\n<blockquote>\n<p>AJAX 轮询也就是定时发送请求，也就是普通的客户端与服务端通信过程，只不过是无限循环发送，这样，可以保证服务端一旦有最新消息，就可以被客户端获取。</p>\n</blockquote>\n<ol start=\"2\">\n<li><strong>Long Polling 长轮询</strong></li>\n</ol>\n<blockquote>\n<p>Long Polling 长轮询是客户端和浏览器保持一个长连接，等服务端有消息返回，断开。<br>\n然后再重新连接，也是个循环的过程，无穷尽也。。。</p>\n<p>客户端发起一个 Long Polling，服务端如果没有数据要返回的话，会 hold 住请求，等到有数据，就会返回给客户端。客户端又会再次发起一次 Long Polling，再重复一次上面的过程。</p>\n</blockquote>\n<ol start=\"3\">\n<li><strong>缺点</strong></li>\n</ol>\n<blockquote>\n<p>这两种方式都有个致命的弱点，开销太大，被动性。假设并发很高的话，这对服务端是个考验。</p>\n<p>而 WebSocket 一次握手，持久连接，以及主动推送的特点可以解决上边的问题，又不至于损耗性能。</p>\n</blockquote>\n<h1 id=\"websocket连接过程\"><a class=\"markdownIt-Anchor\" href=\"#websocket连接过程\">#</a> WebSocket 连接过程</h1>\n<blockquote>\n<p>客户端发起 HTTP 握手，告诉服务端进行 WebSocket 协议通讯，并告知 WebSocket 协议版本。服务端确认协议版本，升级为 WebSocket 协议。之后如果有数据需要推送，会主动推送给客户端。</p>\n<p>连接开始时，客户端使用 HTTP 协议和服务端升级协议，升级完成后，后续数据交换遵循 WebSocket 协议</p>\n</blockquote>\n<ol>\n<li>先搂一眼 Request Headers</li>\n</ol>\n<details class=\"danger\"><summary>Request Headers</summary><div>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Accept-Encoding: gzip, deflate, br\t\t支持的数据压缩格式</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Accept-Language: zh-CN,zh;q=0.9\t\t浏览器所希望的语言种类</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Cache-Control: no-cache\t\t\t缓存控制，服务器通过控制浏览器要不要缓存数据</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Connection: Upgrade\t\t\t\t表示要升级协议</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Host: localhost:8000\t\t\t\t访问的主机名和端口</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Origin: http://localhost:8080\t\t\t发送请求的主机名和端口</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Pragma: no-cache\t\t\t\t指定“no-cache”值表示服务器必须返回一个刷新后的文档，即使它是代理服务器而且已经有了页面的本地拷贝</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Sec-WebSocket-Key: xdT5lKSuUI5vXFucwiG9Ig==\t对应服务端响应头的Sec-WebSocket-Accept，由于没有同源限制，websocket客户端可任意连接支持websocket的服务。这个就相当于一个钥匙一把锁，避免多余的，无意义的连接。</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Sec-WebSocket-Version: 13\t\t\t表示websocket的版本。如果服务端不支持该版本，需要返回一个Sec-WebSocket-Versionheader，里面包含服务端支持的版本号。</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Upgrade: websocket\t\t\t\t升级协议到websocket协议</pre></td></tr></table></figure></div></details>\n<ol start=\"2\">\n<li>Response Headers</li>\n</ol>\n<details class=\"danger\"><summary>Response Headers</summary><div>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Connection: Upgrade\t\t\t\t</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Sec-WebSocket-Accept: LKbtQ+1FimQ7NVxE5GJkpRMtFXo=\t\t 用来告知服务器愿意发起一个websocket连接， 值根据客户端请求头的Sec-WebSocket-Key计算出来</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Upgrade: websocket</pre></td></tr></table></figure></div></details>\n<h1 id=\"websocket-api\"><a class=\"markdownIt-Anchor\" href=\"#websocket-api\">#</a> WebSocket API</h1>\n<ol>\n<li>客户端与服务端建立连接。</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> ws <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebSocket</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ws://localhost:8000/websocketlink/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>返回的实例对象的属性</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>WebSocket<span class=\"token punctuation\">.</span>onopen\t\t<span class=\"token comment\">// 连接成功后的回调</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>WebSocket<span class=\"token punctuation\">.</span>onclose\t\t<span class=\"token comment\">// 连接关闭后的回调</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>WebSocket<span class=\"token punctuation\">.</span>onerror\t\t<span class=\"token comment\">// 连接失败后的回调</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>WebSocket<span class=\"token punctuation\">.</span>onmessage\t\t<span class=\"token comment\">// 客户端接收到服务端数据的回调</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>webSocket<span class=\"token punctuation\">.</span>bufferedAmount\t<span class=\"token comment\">// 未发送至服务器的二进制字节数</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>WebSocket<span class=\"token punctuation\">.</span>binaryType\t\t<span class=\"token comment\">// 使用二进制的数据类型连接</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>WebSocket<span class=\"token punctuation\">.</span>protocol\t\t<span class=\"token comment\">// 服务器选择的下属协议</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>WebSocket<span class=\"token punctuation\">.</span>url\t\t\t<span class=\"token comment\">// WebSocket 的绝对路径</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>方法</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>WebSocket<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\t\t<span class=\"token comment\">// 关闭当前连接</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>WebSocket<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\t\t<span class=\"token comment\">// 向服务器发送数据</span></pre></td></tr></table></figure><h1 id=\"django-vue-websocket实现聊天室\"><a class=\"markdownIt-Anchor\" href=\"#django-vue-websocket实现聊天室\">#</a> Django + Vue +WebSocket 实现聊天室</h1>\n<h2 id=\"django\"><a class=\"markdownIt-Anchor\" href=\"#django\">#</a> Django</h2>\n<ol>\n<li>安装，注册 WebSocket</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip install dwebscoket</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>INSTALLED_APPS <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token string\">'dwebsocket'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><ol start=\"2\">\n<li><code>views.py</code></li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> dwebsocket<span class=\"token punctuation\">.</span>decorators <span class=\"token keyword\">import</span> accept_websocket</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 接收前端信息</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token decorator annotation punctuation\">@accept_websocket</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">test_socket</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span> request<span class=\"token punctuation\">.</span>is_websocket<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">for</span> message <span class=\"token keyword\">in</span> request<span class=\"token punctuation\">.</span>websocket<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            c <span class=\"token operator\">=</span> <span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            message <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            uid <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'uid'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            username <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'username'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            chat <span class=\"token operator\">=</span> Chat<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>create<span class=\"token punctuation\">(</span>user_a<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>uid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> user_b<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            messageobj <span class=\"token operator\">=</span> Message<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>create<span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span>username<span class=\"token punctuation\">,</span> message<span class=\"token operator\">=</span>message<span class=\"token punctuation\">,</span> chat_id<span class=\"token operator\">=</span>chat<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            request<span class=\"token punctuation\">.</span>websocket<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># 主动推送消息</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token decorator annotation punctuation\">@accept_websocket</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">test_websocket2</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    uid <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>GET<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'uid'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token comment\"># print(uid)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">if</span> request<span class=\"token punctuation\">.</span>is_websocket<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            chatobj <span class=\"token operator\">=</span> Chat<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>user_a<span class=\"token operator\">=</span>uid<span class=\"token punctuation\">,</span> user_b<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>order_by<span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> chatobj<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                    message <span class=\"token operator\">=</span> Message<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>chat_id<span class=\"token operator\">=</span>i<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                    data <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> message<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> <span class=\"token string\">\"message\"</span><span class=\"token punctuation\">:</span> message<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                    a<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                request<span class=\"token punctuation\">.</span>websocket<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"vue\"><a class=\"markdownIt-Anchor\" href=\"#vue\">#</a> Vue</h2>\n<ol>\n<li>用户界面</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>primary<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>showDrawer<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        客服</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-drawer</span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>聊天室<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>600<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placement</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>right<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:closable</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:visible</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>visible<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@close</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>onClose<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-row</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-col</span> <span class=\"token attr-name\">:span</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>22 <span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>i in message<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>&#123; &#123; i.name:&#125; &#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>&#123; &#123; i.message &#125; &#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>table</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-col</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-row</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-row</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-col</span> <span class=\"token attr-name\">:span</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>22 <span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-input</span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>value<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>请输入内容<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-col</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-col</span> <span class=\"token attr-name\">:span</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>sendmessage()<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>primary<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>发送<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-col</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-row</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-drawer</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            visible<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            value<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            message<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token comment\">// 获取聊天记录</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token keyword\">var</span> _this <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token comment\">// 判断浏览器是否支持 websocket</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"WebSocket\"</span> <span class=\"token keyword\">in</span> window<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"支持\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            <span class=\"token comment\">// 连接服务器</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token keyword\">var</span> ws <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebSocket</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ws://localhost:8000/user/websocket/?uid=\"</span> <span class=\"token operator\">+</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'uid'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token comment\">// 向服务器发送数据</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            ws<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onopen</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                ws<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'xxx'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            <span class=\"token comment\">// 获取服务器返回数据</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            ws<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                <span class=\"token keyword\">var</span> received_msg <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                <span class=\"token keyword\">let</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>received_msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>                _this<span class=\"token punctuation\">.</span>message <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            <span class=\"token comment\">// 捕获断开链接</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            ws<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclose</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"链接已经关闭\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token function\">showDrawer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>visible <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token function\">onClose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>visible <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t\t<span class=\"token comment\">// 向服务器发送数据</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>        <span class=\"token function\">sendmessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>            <span class=\"token keyword\">var</span> _this <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>            <span class=\"token comment\">// 判断浏览器是否支持 websocket</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"WebSocket\"</span> <span class=\"token keyword\">in</span> window<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"支持\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>                </pre></td></tr><tr><td data-num=\"89\"></td><td><pre>                <span class=\"token comment\">// 连接服务器</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>                <span class=\"token keyword\">var</span> ws <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebSocket</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ws://localhost:8000/user/socket/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>                </pre></td></tr><tr><td data-num=\"92\"></td><td><pre>                <span class=\"token comment\">// 向服务器发送数据</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>                ws<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onopen</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>                    <span class=\"token keyword\">var</span> data <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>                        username<span class=\"token operator\">:</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'username'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>                        message<span class=\"token operator\">:</span> _this<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>                        uid<span class=\"token operator\">:</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'uid'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>                    ws<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>                </pre></td></tr><tr><td data-num=\"102\"></td><td><pre>                <span class=\"token comment\">// 获取服务器返回数据</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>                ws<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>                    <span class=\"token comment\">// console.log(evt.data)</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>                </pre></td></tr><tr><td data-num=\"107\"></td><td><pre>                <span class=\"token comment\">// 捕获断开链接</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>                ws<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclose</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>                    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"链接已经关闭\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><ol start=\"2\">\n<li>客服界面</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>primary<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>showDrawer<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        客服</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-drawer</span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>聊天室<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>600<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placement</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>right<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:closable</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:visible</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>visible<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@close</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>onClose<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-row</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-col</span> <span class=\"token attr-name\">:span</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>22 <span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>i in a<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>&#123; &#123; i.name &#125; &#125;:<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>&#123; &#123; i.message &#125; &#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>table</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-col</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-row</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-row</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-col</span> <span class=\"token attr-name\">:span</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>22 <span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-input</span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>value<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>请输入内容<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-col</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-col</span> <span class=\"token attr-name\">:span</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>sendmessage()<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>primary<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>发送<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-col</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-row</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-drawer</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            visible<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            value<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            message<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">var</span> _this <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token comment\">// 判断浏览器是否支持 websocket</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"WebSocket\"</span> <span class=\"token keyword\">in</span> window<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"支持\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token comment\">// 连接服务器</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token keyword\">var</span> ws <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebSocket</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ws://localhost:8000/user/websocket/?uid=\"</span> <span class=\"token operator\">+</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'uid'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            <span class=\"token comment\">// 向服务器发送数据</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            ws<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onopen</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                ws<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xxx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            <span class=\"token comment\">// 获取服务器返回数据</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            ws<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                <span class=\"token keyword\">var</span> received_msg <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                <span class=\"token keyword\">let</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>received_msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                _this<span class=\"token punctuation\">.</span>message <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            <span class=\"token comment\">// 捕获断开链接</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            ws<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclose</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"链接已经关闭\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token function\">showDrawer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>visible <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token function\">onClose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>visible <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token function\">sendmessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>            <span class=\"token keyword\">var</span> _this <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>            <span class=\"token comment\">// 判断浏览器是否支持 websocket</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"WebSocket\"</span> <span class=\"token keyword\">in</span> window<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"支持\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>                </pre></td></tr><tr><td data-num=\"85\"></td><td><pre>                <span class=\"token comment\">// 连接服务器</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>                <span class=\"token keyword\">var</span> ws <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebSocket</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ws://localhost:8000/user/socket/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"88\"></td><td><pre>                <span class=\"token comment\">// 向服务器发送数据</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>                ws<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onopen</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>                    <span class=\"token keyword\">var</span> data <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>                        username<span class=\"token operator\">:</span> <span class=\"token string\">'客服'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>                        message<span class=\"token operator\">:</span> _this<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>                        uid<span class=\"token operator\">:</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'uid'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>                    ws<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"98\"></td><td><pre>                <span class=\"token comment\">// 获取服务器返回数据</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>                ws<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>                    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>                </pre></td></tr><tr><td data-num=\"103\"></td><td><pre>                <span class=\"token comment\">// 捕获断开链接</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>                ws<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclose</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>                    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"链接已经关闭\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><ol start=\"3\">\n<li>效果</li>\n</ol>\n<p><img data-src=\"%E8%81%8A%E5%A4%A9%E5%AE%A4.gif\" alt=\"\"></p>\n",
            "tags": [
                "WebSocket"
            ]
        },
        {
            "id": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/ECharts-%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E5%BA%93/",
            "url": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/ECharts-%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E5%BA%93/",
            "title": "ECharts--数据可视化库",
            "date_published": "2020-12-22T15:26:23.000Z",
            "content_html": "<h1 id=\"概述\"><a class=\"markdownIt-Anchor\" href=\"#概述\">#</a> 概述</h1>\n<blockquote>\n<p><code>ECharts</code> ，一个使用  <code>JavaScript</code>  实现的 <code>开源可视化库</code> ，可以流畅的运行在 PC 和移动设备上，兼容当前绝大部分浏览器（IE8/9/10/11，Chrome，Firefox，Safari 等），底层依赖矢量图形库 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2Vjb21mZS96cmVuZGVy\">ZRender</span>，提供直观，交互丰富，可高度个性化定制的数据可视化图表。</p>\n</blockquote>\n<h1 id=\"在vue中使用echarts\"><a class=\"markdownIt-Anchor\" href=\"#在vue中使用echarts\">#</a> 在 Vue 中使用 ECharts</h1>\n<ol>\n<li>安装</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>npm install echarts <span class=\"token operator\">--</span>save</pre></td></tr></table></figure><ol start=\"2\">\n<li><code>main.js</code></li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> echarts <span class=\"token keyword\">from</span> <span class=\"token string\">\"echarts\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">Vue</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>$echarts <span class=\"token operator\">=</span> echarts<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><div class=\"note info\">\n<p><code>注意</code> ：如果引入报错： <code>“export ‘default‘ (imported as ‘echarts‘) was not found in ‘echarts‘...</code>  切换版本</p>\n</div>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>npm install echarts@<span class=\"token number\">4.9</span><span class=\"token number\">.0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>npm fund</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>npm run dev</pre></td></tr></table></figure><ol start=\"3\">\n<li>Demo</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">&lt;!-- 为 ECharts 准备一个具备大小（宽高）的 Dom --></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>main<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 1500px<span class=\"token punctuation\">;</span><span class=\"token property\">height</span><span class=\"token punctuation\">:</span>600px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawChart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token function\">drawChart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token comment\">// 基于准备好的 dom，初始化 echarts 实例</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">let</span> myChart <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$echarts<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"main\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token comment\">// 指定图表的配置项和数据</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token keyword\">var</span> option <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                title<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                    text<span class=\"token operator\">:</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                tooltip<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                legend<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'销量'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                xAxis<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"衬衫\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"羊毛衫\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"雪纺衫\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"裤子\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"高跟鞋\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"袜子\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                yAxis<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                series<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                    name<span class=\"token operator\">:</span> <span class=\"token string\">'销量'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                    type<span class=\"token operator\">:</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token comment\">// 使用刚指定的配置项和数据显示图表。</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            myChart<span class=\"token punctuation\">.</span><span class=\"token function\">setOption</span><span class=\"token punctuation\">(</span>option<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><ol start=\"4\">\n<li>效果</li>\n</ol>\n<p><img data-src=\"demo.gif\" alt=\"\"></p>\n<h1 id=\"django-and-vue-实现股票简易柱状图\"><a class=\"markdownIt-Anchor\" href=\"#django-and-vue-实现股票简易柱状图\">#</a> Django and Vue 实现股票简易柱状图</h1>\n<h2 id=\"django\"><a class=\"markdownIt-Anchor\" href=\"#django\">#</a> Django</h2>\n<ol>\n<li>爬取数据</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> pymongo</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>conn <span class=\"token operator\">=</span> pymongo<span class=\"token punctuation\">.</span>MongoClient<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\t\t\t<span class=\"token comment\"># 连接 Mongodb 数据库</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>db <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span>gupiao</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>table <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>gp</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>url <span class=\"token operator\">=</span> <span class=\"token string\">'https://data.gtimg.cn/flashdata/hushen/latest/daily/sz000002.js?maxage=43201&amp;visitDstTime=1'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>res <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>res<span class=\"token punctuation\">.</span>encoding <span class=\"token operator\">=</span> <span class=\"token string\">'utf-8'</span>\t\t\t\t<span class=\"token comment\"># 出现乱码使用，对获取到的网页源码进行一个 utf-8 解码</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>res<span class=\"token operator\">=</span>res<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">34</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>res<span class=\"token operator\">=</span>res<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>riqi <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>s1 <span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>s2 <span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>s3 <span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>s4 <span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    ss<span class=\"token operator\">=</span>i<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    riqi<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>ss<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    s1<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>ss<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    s2<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>ss<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    s3<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>ss<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    s4<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>ss<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># 将数据以列表形式存储</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>a <span class=\"token operator\">=</span> table<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'date'</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>riqi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'s1'</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'s2'</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>s2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'s3'</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>s3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'s4'</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>s4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>向前端发送数据</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> pymongo</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>conn <span class=\"token operator\">=</span> pymongo<span class=\"token punctuation\">.</span>MongoClient<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 链接 Mongodb 数据库</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>db <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span>gupiao</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>table <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>gp</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Gupiao_data</span><span class=\"token punctuation\">(</span>APIView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>reqeust<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        list_data<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        data<span class=\"token operator\">=</span>table<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            i<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token string\">'_id'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            list_data<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'data'</span><span class=\"token punctuation\">:</span>list_data<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"vue\"><a class=\"markdownIt-Anchor\" href=\"#vue\">#</a> Vue</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">&lt;!-- 为 ECharts 准备一个具备大小（宽高）的 Dom --></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>main<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 1500px<span class=\"token punctuation\">;</span><span class=\"token property\">height</span><span class=\"token punctuation\">:</span>600px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> get_gupiao <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@/http/apis'</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawChart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token function\">drawChart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token comment\">// 基于准备好的 dom，初始化 echarts 实例</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">let</span> myChart <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$echarts<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"main\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token keyword\">let</span> riqi <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">let</span> s1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token keyword\">let</span> s2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token keyword\">let</span> s3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token keyword\">let</span> s4 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token function\">get_gupiao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token keyword\">in</span> res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                    <span class=\"token comment\">// 指定图表的配置项和数据</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                    <span class=\"token keyword\">let</span> option <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                        tooltip<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                            trigger<span class=\"token operator\">:</span> <span class=\"token string\">'axis'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                            axisPointer<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 坐标轴指示器，坐标轴触发有效</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                                type<span class=\"token operator\">:</span> <span class=\"token string\">'shadow'</span> <span class=\"token comment\">// 默认为直线，可选为：'line' | 'shadow'</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                        legend<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                            data<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"上午开盘\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"上午收盘\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"下午开盘\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"下午收盘\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                        grid<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                            left<span class=\"token operator\">:</span> <span class=\"token string\">'3%'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                            right<span class=\"token operator\">:</span> <span class=\"token string\">'4%'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                            bottom<span class=\"token operator\">:</span> <span class=\"token string\">'3%'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                            containLabel<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                        xAxis<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                            type<span class=\"token operator\">:</span> <span class=\"token string\">'category'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                            data<span class=\"token operator\">:</span> riqi</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                        yAxis<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                            type<span class=\"token operator\">:</span> <span class=\"token string\">'value'</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                        series<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                                name<span class=\"token operator\">:</span> <span class=\"token string\">'上午开盘'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                                type<span class=\"token operator\">:</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                                data<span class=\"token operator\">:</span> s1</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                                name<span class=\"token operator\">:</span> <span class=\"token string\">'上午收盘'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                                type<span class=\"token operator\">:</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                                stack<span class=\"token operator\">:</span> <span class=\"token string\">'广告'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                                data<span class=\"token operator\">:</span> s2</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>                            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>                                name<span class=\"token operator\">:</span> <span class=\"token string\">'下午开盘'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                                type<span class=\"token operator\">:</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                                stack<span class=\"token operator\">:</span> <span class=\"token string\">'广告'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>                                data<span class=\"token operator\">:</span> s3</pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>                            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                                name<span class=\"token operator\">:</span> <span class=\"token string\">'下午收盘'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>                                type<span class=\"token operator\">:</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>                                stack<span class=\"token operator\">:</span> <span class=\"token string\">'广告'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>                                data<span class=\"token operator\">:</span> s4</pre></td></tr><tr><td data-num=\"74\"></td><td><pre>                            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>                        <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>                    riqi<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>                    s1<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>s1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>                    s2<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>s2<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                    s3<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>s3<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>                    s4<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>s4<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>                    <span class=\"token comment\">// 使用刚指定的配置项和数据显示图表。</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>                    myChart<span class=\"token punctuation\">.</span><span class=\"token function\">setOption</span><span class=\"token punctuation\">(</span>option<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"效果\"><a class=\"markdownIt-Anchor\" href=\"#效果\">#</a> 效果</h2>\n<p><img data-src=\"%E6%9F%B1%E7%8A%B6%E5%9B%BE.gif\" alt=\"\"></p>\n",
            "tags": [
                "数据可视化库"
            ]
        },
        {
            "id": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/RBAC-%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6/",
            "url": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/RBAC-%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6/",
            "title": "RBAC--权限控制",
            "date_published": "2020-12-21T12:41:10.000Z",
            "content_html": "<h1 id=\"概述\"><a class=\"markdownIt-Anchor\" href=\"#概述\">#</a> 概述</h1>\n<blockquote>\n<p><code>RBAC 是基于角色的访问控制（Role-Based Access Control ）</code> 在 RBAC 中，权限与角色相关联，用户通过成为适当角色的成员而得到这些角色的权限。这就极大地简化了权限的管理。这样管理都是层级相互依赖的，权限赋予给角色，而把角色又赋予用户，这样的权限设计很清楚，管理起来很方便。</p>\n</blockquote>\n<h1 id=\"简易表设计\"><a class=\"markdownIt-Anchor\" href=\"#简易表设计\">#</a> 简易表设计</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>contrib<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> AbstractUser</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>db <span class=\"token keyword\">import</span> models</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span>AbstractUser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    username <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span><span class=\"token string\">'用户名'</span><span class=\"token punctuation\">,</span> max_length<span class=\"token operator\">=</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> unique<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    password <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span><span class=\"token string\">'密码'</span><span class=\"token punctuation\">,</span> max_length<span class=\"token operator\">=</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    email <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>EmailField<span class=\"token punctuation\">(</span><span class=\"token string\">'邮箱'</span><span class=\"token punctuation\">,</span> max_length<span class=\"token operator\">=</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> blank<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    phone <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span><span class=\"token string\">'电话'</span><span class=\"token punctuation\">,</span> max_length<span class=\"token operator\">=</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span> null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> blank<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    role <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>ForeignKey<span class=\"token punctuation\">(</span><span class=\"token string\">'Role'</span><span class=\"token punctuation\">,</span>on_delete<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>CASCADE<span class=\"token punctuation\">,</span>null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>blank<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Role</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    rolename <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span><span class=\"token string\">'角色名'</span><span class=\"token punctuation\">,</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Permission</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    role <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>ForeignKey<span class=\"token punctuation\">(</span><span class=\"token string\">'Role'</span><span class=\"token punctuation\">,</span>on_delete<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>CASCADE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    node <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>ForeignKey<span class=\"token punctuation\">(</span><span class=\"token string\">'Node'</span><span class=\"token punctuation\">,</span>on_delete<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>CASCADE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        db_table <span class=\"token operator\">=</span> <span class=\"token string\">'tb_permission'</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Node</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    nodename <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span><span class=\"token string\">'节点'</span><span class=\"token punctuation\">,</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"位运算\"><a class=\"markdownIt-Anchor\" href=\"#位运算\">#</a> 位运算</h1>\n<blockquote>\n<p>在计算机内存中都是以二进制的形式储存的。位运算就是直接对整数在内存中的二进制位进行操作。</p>\n<p>举个例子，6 的二进制是 110，11 的二进制是 1011，那么 6 &amp;11 的结果就是 2，它是二进制对应位进行逻辑运算的结果（0 表示 False，1 表示 True，空位都当 0 处理）</p>\n</blockquote>\n<ul>\n<li>在 <code>python</code>  中 <code>0b</code>  代表二进制</li>\n</ul>\n<p><img data-src=\"1.png\" alt=\"\"></p>\n<h2 id=\"使用位运算实现简单权限demo\"><a class=\"markdownIt-Anchor\" href=\"#使用位运算实现简单权限demo\">#</a> 使用位运算实现简单权限 demo</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>user <span class=\"token operator\">=</span> <span class=\"token number\">0b110</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>permission <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">0b100</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"blacklist\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">0b010</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"login\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">0b001</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">my_decorator</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">wrapper</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\"># 进行拦截</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> user <span class=\"token operator\">&amp;</span>  permission<span class=\"token punctuation\">[</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"没权限\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            func<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">return</span> wrapper</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token decorator annotation punctuation\">@my_decorator</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">view</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'进入了视图'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>view<span class=\"token punctuation\">(</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>运算方式：</p>\n<p><img data-src=\"2.png\" alt=\"\"></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 运行后结果为</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 1. view('user')：</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>进入了视图</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 2. view('blacklist')：</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token string\">'blacklist'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>进入了视图</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#3.view('login')</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token string\">'login'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>没权限</pre></td></tr></table></figure><blockquote>\n<p>从结果中可以看出，当访问该视图的用户权限为 <code>0b110</code>  时，只可访问 <code>user</code> , <code>blacklist</code> ，不可访问 <code>login</code></p>\n</blockquote>\n",
            "tags": []
        },
        {
            "id": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/Git%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/",
            "url": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/Git%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/",
            "title": "Git基本命令",
            "date_published": "2020-12-19T12:30:36.000Z",
            "content_html": "<h1 id=\"仓库\"><a class=\"markdownIt-Anchor\" href=\"#仓库\">#</a> 仓库</h1>\n<figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git init\t\t\t# 初始化</pre></td></tr></table></figure><figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git clone url\t\t\t# 下载一个项目</pre></td></tr></table></figure><h1 id=\"查看信息\"><a class=\"markdownIt-Anchor\" href=\"#查看信息\">#</a> 查看信息</h1>\n<figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git status\t\t\t# 查看文件状态</pre></td></tr></table></figure><h1 id=\"增加删除文件\"><a class=\"markdownIt-Anchor\" href=\"#增加删除文件\">#</a> 增加 / 删除文件</h1>\n<figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git add 文件名\t\t\t# 添加指定文件到暂存区</pre></td></tr></table></figure><figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git add 文件名\t\t\t# 添加指定目录到暂存区</pre></td></tr></table></figure><figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git add .\t\t\t# 添加当前目录的所有文件到暂存区</pre></td></tr></table></figure><h1 id=\"代码提交\"><a class=\"markdownIt-Anchor\" href=\"#代码提交\">#</a> 代码提交</h1>\n<figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git commit -m <span class=\"token string\">'备注'</span>\t\t\t# 提交暂存区到仓库区</pre></td></tr></table></figure><figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git commit 文件名 ... -m <span class=\"token string\">'备注'</span>\t\t# 提交暂存区的指定文件到仓库区</pre></td></tr></table></figure><figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git push origin 分支名\t\t\t# 将仓库区的文件推送到线上分支</pre></td></tr></table></figure><h1 id=\"分支\"><a class=\"markdownIt-Anchor\" href=\"#分支\">#</a> 分支</h1>\n<figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git branch\t\t\t# 列出所有本地分支</pre></td></tr></table></figure><figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git branch -r\t\t\t# 列出所有远程分支</pre></td></tr></table></figure><figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git branch -a\t\t\t# 列出所有本地分支和远程分支</pre></td></tr></table></figure><figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git branch 分支名\t\t\t# 新建一个分支，停留在当前分支</pre></td></tr></table></figure><figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git checkout -b 分支名\t\t\t# 新建一个分支，并切换到该分支</pre></td></tr></table></figure><figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git checkout 分支名\t\t\t# 切换到指定分支，并更新工作区</pre></td></tr></table></figure><figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git checkout -\t\t\t\t# 切换到上一个分支</pre></td></tr></table></figure><figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git merge 分支名\t\t\t# 合并指定分支到当前分支</pre></td></tr></table></figure><figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git branch -d 分支名\t\t\t# 删除分支</pre></td></tr></table></figure>",
            "tags": [
                "Git"
            ]
        },
        {
            "id": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/Docker-Desktop%E4%BD%BF%E7%94%A8Mysql%E3%80%81Redis/",
            "url": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/Docker-Desktop%E4%BD%BF%E7%94%A8Mysql%E3%80%81Redis/",
            "title": "Docker_Desktop使用Mysql、Redis",
            "date_published": "2020-12-05T01:29:08.000Z",
            "content_html": "<h1 id=\"docker-desktop使用mysql\"><a class=\"markdownIt-Anchor\" href=\"#docker-desktop使用mysql\">#</a> Docker Desktop 使用 Mysql</h1>\n<ol>\n<li>拉取镜像</li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker pull mysql</pre></td></tr></table></figure><ol start=\"2\">\n<li>启动镜像，第一次启动最少需要指定 <code>MYSQL_ROOT_PASSWORD</code></li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker run --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=000 -d mysql</pre></td></tr></table></figure><p><img data-src=\"1.png\" alt=\"\"></p>\n<ol start=\"3\">\n<li>运行 Mysql</li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker exec -it mysql mysql -uroot -p000</pre></td></tr></table></figure><p><img data-src=\"2.png\" alt=\"\"></p>\n<h1 id=\"docker-desktop使用redis\"><a class=\"markdownIt-Anchor\" href=\"#docker-desktop使用redis\">#</a> Docker Desktop 使用 Redis</h1>\n<ol>\n<li>拉取镜像</li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker pull redis</pre></td></tr></table></figure><p>2. 启动镜像</p>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker run -it -p 6380:6379 redis</pre></td></tr></table></figure><p><img data-src=\"3.png\" alt=\"\"></p>\n<ol start=\"3\">\n<li>运行 Redis</li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>redis-cli -p 6380\t\t\t# 指定端口，可开启多个redis服务，互不影响，本地服务均可开启</pre></td></tr></table></figure><p><img data-src=\"4.png\" alt=\"\"></p>\n",
            "tags": [
                "Docker_Desktop"
            ]
        },
        {
            "id": "http://example.com/Django%E6%A1%86%E6%9E%B6/Django-%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2/",
            "url": "http://example.com/Django%E6%A1%86%E6%9E%B6/Django-%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2/",
            "title": "Django + Uwsgi + Nginx 的生产环境部署",
            "date_published": "2020-12-04T14:01:03.000Z",
            "content_html": "<h2 id=\"django\"><a class=\"markdownIt-Anchor\" href=\"#django\">#</a> Django</h2>\n<blockquote>\n<p><code>Django</code>  是一个 <code>Web框架</code> ，框架的作用在于处理 <code>request</code>  和 <code>reponse</code> ，其他的不是框架所关心的内容。</p>\n<p>所以如何部署 <code>Django</code>  不是 <code>Django</code>  所需要关心的。</p>\n</blockquote>\n<h2 id=\"什么是wsgi\"><a class=\"markdownIt-Anchor\" href=\"#什么是wsgi\">#</a> 什么是 WSGI</h2>\n<blockquote>\n<p><code>WSGI</code>  是一种  <code>python</code>  专用 的 <code>web</code>  协议 和 <code>http</code>  类似</p>\n<p>WSGI 实质： <code>WSGI</code>  是一种描述 web 服务器（如  <code>nginx</code> ， <code>uWSGI web服务器</code>  ）如何与 <code>web框架</code>  （如用  <code>Django</code> 、 <code>Flask框架</code> 写的程序）通信的规范、协议</p>\n<p><code>WSGI</code>  定义了使用  <code>python</code>  编写的 <code>web app(django)</code>  与 <code>web server（uWSGI）</code> 之间接口格式</p>\n</blockquote>\n<h2 id=\"为什么需要web协议\"><a class=\"markdownIt-Anchor\" href=\"#为什么需要web协议\">#</a> 为什么需要 web 协议</h2>\n<blockquote>\n<p>不同的框架有不同的开发方式，但是无论如何，开发出的 应用程序 ( <code>django</code> ) 都要和服务器 ( <code>nginx</code> ) 程序配合 ，才能为用户提供服务</p>\n<p>这样， 服务器程序 ( <code>nginx</code> ) 就需要为不同的框架提供不同的支持，只有支持它的服务器才 能被开发出的应用使用，显然这是不可行的。</p>\n<p><code>web协议本质</code> ：就是定义了 <code> Web服务器</code> 和 <code>Web应用程序</code> 或 <code>框架</code> 之间的一种简单而通用的接口规范</p>\n</blockquote>\n<h2 id=\"什么是uwsgi\"><a class=\"markdownIt-Anchor\" href=\"#什么是uwsgi\">#</a> 什么是 uWSGI</h2>\n<blockquote>\n<p><code>uWSGI</code>  是一个全功能的 HTTP 服务器，实现了 <code>WSGI协议</code> 、 <code>uwsgi协议</code> 、 <code>http协议</code> 等。</p>\n</blockquote>\n<h2 id=\"uwsgi作用\"><a class=\"markdownIt-Anchor\" href=\"#uwsgi作用\">#</a> uWSGI 作用</h2>\n<blockquote>\n<p>它要做的就是把 <code>HTTP协议</code> 转化成语言支持的网络协议，比如把 <code>HTTP协议</code> 转化成 <code>WSGI协议</code> ，让 <code>Python</code>  可以直接使用。</p>\n</blockquote>\n<h2 id=\"uwsgi特点\"><a class=\"markdownIt-Anchor\" href=\"#uwsgi特点\">#</a> uWSGI 特点</h2>\n<blockquote>\n<p>轻量级，易部署，性能比 <code>nginx</code>  差很多</p>\n</blockquote>\n<p><code>注意</code> ：</p>\n<ul>\n<li>如果架构是 <code>Nginx</code> + <code>uWSGI</code> + <code>APP</code> ， <code>uWSGI</code>  是一个中间件</li>\n<li>如果架构是 <code>uWSGI</code> + <code>APP</code> ， <code>uWSGI</code>  是一个服务器</li>\n</ul>\n<h2 id=\"nginx\"><a class=\"markdownIt-Anchor\" href=\"#nginx\">#</a> Nginx</h2>\n<blockquote>\n<p><code>Nginx</code>  是一个 Web 服务器，其中的 HTTP 服务器功能和 <code>uWSGI</code>  功能很类似</p>\n<p>但是 <code>Nginx</code>  还可以用作更多用途，比如最常用的反向代理、负载均衡、拦截攻击等，而且性能极高</p>\n</blockquote>\n<h2 id=\"django-uwsgi-nginx-部署的作用\"><a class=\"markdownIt-Anchor\" href=\"#django-uwsgi-nginx-部署的作用\">#</a> Django + Uwsgi + Nginx 部署的作用</h2>\n<h3 id=\"django-uwsgi-nginx方案\"><a class=\"markdownIt-Anchor\" href=\"#django-uwsgi-nginx方案\">#</a> Django + Uwsgi + Nginx 方案</h3>\n<p><img data-src=\"1.png\" alt=\"\"></p>\n<h4 id=\"请求处理整体流程\"><a class=\"markdownIt-Anchor\" href=\"#请求处理整体流程\">#</a> 请求处理整体流程</h4>\n<ul>\n<li><code>nginx</code>  接收到浏览器发送过来的 <code>http请求</code> ，将包进行解析，分析 url</li>\n<li>静态文件请求：就直接访问用户给 <code>nginx</code>  配置的静态文件目录，直接返回用户请求的静态文件  <code>(html/css/js/图片) </code></li>\n<li>动态接口请求：那么 <code>nginx</code>  就将请求转发给 <code>uWSGI</code> ，最后到达 <code>django</code>  处理</li>\n</ul>\n<h4 id=\"各模块作用\"><a class=\"markdownIt-Anchor\" href=\"#各模块作用\">#</a> 各模块作用</h4>\n<ul>\n<li>\n<p><code>nginx</code> ：是对外的服务器，外部浏览器通过 <code>url</code>  访问 <code>nginx</code> ， <code>nginx</code>  主要处理静态请求</p>\n</li>\n<li>\n<p><code>uWSGI</code> ：是对内的服务器，主要用来处理动态请求</p>\n</li>\n<li>\n<p><code>uwsgi</code> ：是一种 <code>web协议</code> ，接收到请求之后将包进行处理，处理成 <code>wsgi</code>  可以接受的格式，并发给 <code>wsgi</code></p>\n</li>\n<li>\n<p><code>wsgi</code> ：是 <code>python</code>  专用的 <code>web协议</code> ，根据请求调用应用程序 <code>（Django）</code> 的某个文件，某个文件的某个函数</p>\n</li>\n<li>\n<p><code>Django</code> ：是真正干活的，查询数据等资源，把处理的结果再次返回给 <code>WSGI</code> ，  <code>WSGI</code>  将返回值进行打包，打包成 <code>uwsgi</code>  能够接收的格式</p>\n</li>\n<li>\n<p><code>uwsgi</code>  接收 <code>wsgi</code>  发送的请求，并转发给 <code>nginx</code> , <code>nginx</code>  最终将返回值返回给浏览器</p>\n</li>\n</ul>\n<h3 id=\"django-uwsgi方案\"><a class=\"markdownIt-Anchor\" href=\"#django-uwsgi方案\">#</a> Django + uwsgi 方案</h3>\n<ul>\n<li>\n<p>没有 <code>nginx</code>  而只有 <code>uwsgi</code>  的服务器，则是 <code>Internet请求</code> 直接由 <code>uwsgi</code>  处理，并反馈到 <code>web项目</code> 中。</p>\n</li>\n<li>\n<p><code>nginx</code>  可以实现安全过滤，防 <code>DDOS</code>  等保护安全的操作，并且如果配置了多台服务器， <code>nginx</code>  可以保证服务器的负载相对均衡。</p>\n</li>\n<li>\n<p>而 <code>uwsgi</code>  则是一个 <code>web服务器</code> ，实现了 <code>WSGI协议(Web Server Gateway Interface)</code> ， <code>http协议</code> 等，它可以接收和处理请求，发出响应等。<br>\n只用 <code>uwsgi</code>  也是可以的。</p>\n</li>\n</ul>\n<h3 id=\"nginx和uwsgi特点\"><a class=\"markdownIt-Anchor\" href=\"#nginx和uwsgi特点\">#</a> nginx 和 uWSGI 特点</h3>\n<h4 id=\"nginx的作用\"><a class=\"markdownIt-Anchor\" href=\"#nginx的作用\">#</a> nginx 的作用</h4>\n<ul>\n<li>\n<p>反向代理，可以拦截一些 <code>web攻击</code> ，保护后端的 <code>web服务器</code></p>\n</li>\n<li>\n<p>负载均衡，根据轮询算法，分配请求到多节点 <code>web服务器</code></p>\n</li>\n<li>\n<p>缓存静态资源，加快访问速度，释放 <code>web服务器</code> 的内存占用，专项专用</p>\n</li>\n</ul>\n<h4 id=\"uwsgi的适用\"><a class=\"markdownIt-Anchor\" href=\"#uwsgi的适用\">#</a> uWSGI 的适用</h4>\n<ul>\n<li>\n<p>单节点服务器的简易部署</p>\n</li>\n<li>\n<p>轻量级，好部署</p>\n</li>\n</ul>\n<h2 id=\"django-uwsgi-nginx-的生产环境部署\"><a class=\"markdownIt-Anchor\" href=\"#django-uwsgi-nginx-的生产环境部署\">#</a> Django + Uwsgi + Nginx 的生产环境部署</h2>\n<h3 id=\"django的settingspy配置\"><a class=\"markdownIt-Anchor\" href=\"#django的settingspy配置\">#</a> Django 的 <code>settings.py</code>  配置</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 1. 修改配置 </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 正式上线关闭调试模式，不会暴露服务器信息 </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>DEBUG <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 2. 允许的主机 </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>ALLOWED_HOSTS <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'xxx.com'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'127.0.0.1'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 3. 前端修改接口地址（vue）</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>http<span class=\"token punctuation\">:</span><span class=\"token operator\">//</span><span class=\"token number\">192.168</span><span class=\"token number\">.56</span><span class=\"token number\">.100</span><span class=\"token punctuation\">:</span><span class=\"token number\">8888</span><span class=\"token operator\">/</span>   <span class=\"token operator\">=</span><span class=\"token operator\">></span>  http<span class=\"token punctuation\">:</span><span class=\"token operator\">//</span>xxx<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 4.MySQL 数据库根据实际情况配置（注意地址）</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>DATABASES <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token string\">'default'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token string\">'ENGINE'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'django.db.backends.mysql'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token string\">'NAME'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'loonflow'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token string\">'USER'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'root'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token string\">'PASSWORD'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token string\">'HOST'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'127.0.0.1'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token string\">'PORT'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'3306'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># 5. 缓存配置，改为默认，最简单形式（配置 redis）</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>CACHES <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token string\">\"default\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token string\">\"BACKEND\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"django_redis.cache.RedisCache\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token string\">\"LOCATION\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"redis://127.0.0.1:6379/0\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token string\">\"OPTIONS\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token string\">\"CLIENT_CLASS\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"django_redis.client.DefaultClient\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\"># 6. 收集静态文件 </span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\"># 静态资源收集位置 </span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>STATIC_ROOT <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>BASE_DIR<span class=\"token punctuation\">,</span> <span class=\"token string\">'static'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\"># 7. 命令行执行 </span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>python manage<span class=\"token punctuation\">.</span>py collectstatic</pre></td></tr></table></figure><h3 id=\"安装uwsgi-配置uwsgi\"><a class=\"markdownIt-Anchor\" href=\"#安装uwsgi-配置uwsgi\">#</a> 安装 uwsgi 配置 uWSGI</h3>\n<h4 id=\"安装uwsgi\"><a class=\"markdownIt-Anchor\" href=\"#安装uwsgi\">#</a> 安装 uwsgi</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>workon syl\t\t\t\t\t<span class=\"token comment\"># 进入虚拟环境 </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>pip3 install uwsgi\t\t\t\t<span class=\"token comment\"># 安装</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>whereis uwsgi          \t\t\t<span class=\"token comment\"># 查看 uwsgi 安装路径 uwsgi: </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">/</span>root<span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>virtualenvs<span class=\"token operator\">/</span>syl<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>uwsgi</pre></td></tr></table></figure><h4 id=\"配置uwgsiini启动文件\"><a class=\"markdownIt-Anchor\" href=\"#配置uwgsiini启动文件\">#</a> 配置 uwgsi.ini 启动文件</h4>\n<ul>\n<li>在 <code> uwsgi_conf</code>  下新建 <code>uwsgi.ini</code></li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>uwsgi<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 使用 Nginx 连接时使用，Django 程序所在服务器地址和端口号</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>socket<span class=\"token operator\">=</span><span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span><span class=\"token punctuation\">:</span><span class=\"token number\">8000</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 项目目录绝对路径</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>chdir<span class=\"token operator\">=</span><span class=\"token operator\">/</span>root<span class=\"token operator\">/</span>loonflow_project<span class=\"token operator\">/</span>loonflow</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 项目中 wsgi.py 文件的目录，相对于项目目录</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>wsgi<span class=\"token operator\">-</span><span class=\"token builtin\">file</span><span class=\"token operator\">=</span>loonflow<span class=\"token operator\">/</span>wsgi<span class=\"token punctuation\">.</span>py</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 进程数（机器核数的 1 倍）</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>processes<span class=\"token operator\">=</span><span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 线程数</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>threads<span class=\"token operator\">=</span><span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># uwsgi 服务器的角色</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>master<span class=\"token operator\">=</span><span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 存放进程编号的文件</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>pidfile<span class=\"token operator\">=</span>uwsgi<span class=\"token punctuation\">.</span>pid</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 日志文件</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>daemonize<span class=\"token operator\">=</span>uwsgi<span class=\"token punctuation\">.</span>log</pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># 指定依赖的虚拟环境</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>virtualenv<span class=\"token operator\">=</span><span class=\"token operator\">/</span>root<span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>virtualenvs<span class=\"token operator\">/</span>syl</pre></td></tr></table></figure><h3 id=\"安装与配置nginx\"><a class=\"markdownIt-Anchor\" href=\"#安装与配置nginx\">#</a> 安装与配置 nginx</h3>\n<h4 id=\"安装nginx\"><a class=\"markdownIt-Anchor\" href=\"#安装nginx\">#</a> 安装 nginx</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>workon syl\t\t\t\t\t<span class=\"token comment\"># 进入虚拟环境 </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>sudo apt update\t\t\t\t<span class=\"token comment\"># 更新 apt </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>sudo apt install nginx           \t\t<span class=\"token comment\"># 安装 nginx</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>sudo systemctl status nginx      \t\t<span class=\"token comment\"># 查看 nginx 状态</span></pre></td></tr></table></figure><h4 id=\"配置nginx\"><a class=\"markdownIt-Anchor\" href=\"#配置nginx\">#</a> 配置 nginx</h4>\n<ul>\n<li>在 <code>/etc/nginx/conf.d/</code>  文件夹下新建任意名字  <code>xxx.conf</code>  即可，写入的内容是官方给的</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>server <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    listen          <span class=\"token number\">8888</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    server_name     <span class=\"token number\">192.168</span><span class=\"token number\">.56</span><span class=\"token number\">.100</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    location <span class=\"token operator\">/</span>static <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        alias <span class=\"token operator\">/</span>root<span class=\"token operator\">/</span>loonflow_project<span class=\"token operator\">/</span>loonflow<span class=\"token operator\">/</span>static<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    location <span class=\"token operator\">/</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        include uwsgi_params<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        uwsgi_pass <span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span><span class=\"token punctuation\">:</span><span class=\"token number\">8000</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        uwsgi_ignore_client_abort on<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"etcnginxnginxconfnginx主配置文件解读-不用变\"><a class=\"markdownIt-Anchor\" href=\"#etcnginxnginxconfnginx主配置文件解读-不用变\">#</a>  <code>/etc/nginx/nginx.conf</code> nginx 主配置文件解读 (不用变)</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>user www<span class=\"token operator\">-</span>data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>worker_processes auto<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>pid <span class=\"token operator\">/</span>run<span class=\"token operator\">/</span>nginx<span class=\"token punctuation\">.</span>pid<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>include <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>modules<span class=\"token operator\">-</span>enabled<span class=\"token operator\">/</span><span class=\"token operator\">*</span><span class=\"token punctuation\">.</span>conf<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>events <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tworker_connections <span class=\"token number\">768</span><span class=\"token punctuation\">;</span>\t\t\t <span class=\"token comment\"># 链接数量 </span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>http <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tsendfile on<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\ttcp_nopush on<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\ttcp_nodelay on<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tkeepalive_timeout <span class=\"token number\">65</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\ttypes_hash_max_size <span class=\"token number\">2048</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tinclude <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>mime<span class=\"token punctuation\">.</span>types<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tdefault_type application<span class=\"token operator\">/</span>octet<span class=\"token operator\">-</span>stream<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tssl_protocols TLSv1 TLSv1<span class=\"token punctuation\">.</span><span class=\"token number\">1</span> TLSv1<span class=\"token punctuation\">.</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> <span class=\"token comment\"># Dropping SSLv3, ref: POODLE</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tssl_prefer_server_ciphers on<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\taccess_log <span class=\"token operator\">/</span>var<span class=\"token operator\">/</span>log<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>access<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">;</span>\t\t <span class=\"token comment\"># 客户浏览器访问 nginx 服务记录（客 户户端访问异常时可以查看）</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\terror_log <span class=\"token operator\">/</span>var<span class=\"token operator\">/</span>log<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>error<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">;</span>\t\t\t <span class=\"token comment\"># nginx 错误日志（nginx 启动时报错 的日志）</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\tgzip on<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\tinclude <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>conf<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span><span class=\"token operator\">*</span><span class=\"token punctuation\">.</span>conf<span class=\"token punctuation\">;</span>\t\t\t <span class=\"token comment\"># nginx 扩展配置文件 </span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\tinclude <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>sites<span class=\"token operator\">-</span>enabled<span class=\"token operator\">/</span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"nginx和uwsgi启动-关闭-查看日志命令\"><a class=\"markdownIt-Anchor\" href=\"#nginx和uwsgi启动-关闭-查看日志命令\">#</a> nginx 和 uwsgi 启动、关闭、查看日志命令</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">'''1.启动并查看nginx日志'''</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>systemctl restart nginx         \t <span class=\"token comment\"># 开启 nginx </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>tail <span class=\"token operator\">-</span>f <span class=\"token operator\">/</span>var<span class=\"token operator\">/</span>log<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>access<span class=\"token punctuation\">.</span>log    <span class=\"token comment\"># 查看 nginx 接入日志 </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>tail <span class=\"token operator\">-</span>f <span class=\"token operator\">/</span>var<span class=\"token operator\">/</span>log<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>error<span class=\"token punctuation\">.</span>log     <span class=\"token comment\"># 查看 nginx 错误日志</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token triple-quoted-string string\">'''2.启动并查看uwsgi日志'''</span>     </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">:</span>uwsgi_conf<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>cd <span class=\"token operator\">/</span>teach<span class=\"token operator\">/</span>shiyanlou_project<span class=\"token operator\">/</span>uwsgi_conf   <span class=\"token comment\"># 进入项目目录 </span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">:</span>uwsgi_conf<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>uwsgi <span class=\"token operator\">-</span><span class=\"token operator\">-</span>ini uwsgi<span class=\"token punctuation\">.</span>ini                    <span class=\"token comment\"># 启动 uwsgi 的 django 项目    </span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">:</span>uwsgi_conf<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>uwsgi <span class=\"token operator\">-</span><span class=\"token operator\">-</span>stop uwsgi<span class=\"token punctuation\">.</span>pid\t\t\t<span class=\"token comment\"># 关闭 uwsgi     </span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">:</span>uwsgi_conf<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>tail <span class=\"token operator\">-</span>f uwsgi<span class=\"token punctuation\">.</span>log                        <span class=\"token comment\"># 查看 uwsgi 日志    </span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">:</span>uwsgi_conf<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>tail <span class=\"token operator\">-</span>f <span class=\"token operator\">*</span>    </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">:</span>uwsgi_conf<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>ps <span class=\"token operator\">-</span>ef<span class=\"token operator\">|</span>grep uwsgi       \t\t\t\t<span class=\"token comment\"># 查看 uwsgi 服务是否启动</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    root      <span class=\"token number\">92328</span>  <span class=\"token number\">89266</span>  <span class=\"token number\">0</span> <span class=\"token number\">14</span><span class=\"token punctuation\">:</span><span class=\"token number\">37</span> pts<span class=\"token operator\">/</span><span class=\"token number\">1</span>    <span class=\"token number\">00</span><span class=\"token punctuation\">:</span><span class=\"token number\">00</span><span class=\"token punctuation\">:</span><span class=\"token number\">00</span> grep <span class=\"token operator\">-</span><span class=\"token operator\">-</span>color<span class=\"token operator\">=</span>auto uwsgi</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">:</span>uwsgi_conf<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>netstat <span class=\"token operator\">-</span>anptu <span class=\"token operator\">|</span> grep <span class=\"token number\">8888</span>\t\t\t<span class=\"token comment\"># 查看 8888 端口被哪一个程序 占用</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>tail <span class=\"token operator\">-</span>f access_log <span class=\"token operator\">/</span>var<span class=\"token operator\">/</span>log<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>access<span class=\"token punctuation\">.</span>log\t\t<span class=\"token comment\"># 接入日志 </span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>tail <span class=\"token operator\">-</span>f <span class=\"token operator\">/</span>var<span class=\"token operator\">/</span>log<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>error<span class=\"token punctuation\">.</span>log\t\t\t\t<span class=\"token comment\"># 当你启动、关闭 nginx 时报错</span></pre></td></tr></table></figure>",
            "tags": [
                "生产环境部署"
            ]
        },
        {
            "id": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/%E5%9C%A8Ubuntu%E4%B8%AD%E5%AE%89%E8%A3%85Docker%E5%92%8Cdocker%E7%9A%84%E4%BD%BF%E7%94%A8/",
            "url": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/%E5%9C%A8Ubuntu%E4%B8%AD%E5%AE%89%E8%A3%85Docker%E5%92%8Cdocker%E7%9A%84%E4%BD%BF%E7%94%A8/",
            "title": "Ubuntu安装Docker和docker的使用",
            "date_published": "2020-12-01T02:58:04.000Z",
            "content_html": "<h1 id=\"docker-概述\"><a class=\"markdownIt-Anchor\" href=\"#docker-概述\">#</a> Docker 概述</h1>\n<blockquote>\n<p><code>Docker </code> 是一个开源的应用容器引擎，基于 <code>Go语言</code> 并遵从 Apache2.0 协议开源。</p>\n<p><code>Docker </code> 可以让开发者打包他们的应用以及依赖包到一个 <code>轻量级</code> 、 <code>可移植</code> 的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。</p>\n<p>容器是完全使用 <code>沙箱机制</code> ，相互之间不会有任何接口（类似 iPhone 的 app）, 更重要的是容器性能开销极低。</p>\n</blockquote>\n<h1 id=\"docker应用场景\"><a class=\"markdownIt-Anchor\" href=\"#docker应用场景\">#</a> Docker 应用场景</h1>\n<blockquote>\n<p><code>Web </code> 应用的自动化打包和发布。</p>\n<p>自动化测试和持续集成、发布。</p>\n<p>在服务型环境中部署和调整数据库或其他的后台应用。</p>\n<p>从头编译或者扩展现有的  <code>OpenShift</code>  或  <code>Cloud Foundry</code>  平台来搭建自己的  <code>PaaS</code>  环境</p>\n</blockquote>\n<h1 id=\"docker-的优点\"><a class=\"markdownIt-Anchor\" href=\"#docker-的优点\">#</a> Docker 的优点</h1>\n<blockquote>\n<p><code>Docker</code>  是一个用于开发，交付和运行应用程序的开放平台。Docker 使您能够将应用程序与基础架构分开，从而可以快速交付软件。借助 Docker，您可以与管理应用程序相同的方式来管理基础架构。通过利用 Docker 的方法来 <code>快速交付</code> ， <code>测试</code> 和 <code>部署代码</code> ，您可以大大减少编写代码和在生产环境中运行代码之间的延迟。</p>\n</blockquote>\n<h1 id=\"在ubuntu中安装docker\"><a class=\"markdownIt-Anchor\" href=\"#在ubuntu中安装docker\">#</a> 在 Ubuntu 中安装 Docker</h1>\n<ol>\n<li>更新 ubuntu 的 apt 源索引</li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>sudo apt-get update</pre></td></tr></table></figure><ol start=\"2\">\n<li>安装包允许 apt 通过 HTTPS 使用仓库</li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>sudo apt-get install \\</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    apt-transport-https \\</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    ca-certificates \\</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    curl \\</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    software-properties-common</pre></td></tr></table></figure><ol start=\"3\">\n<li>添加 Docker 官方 GPG key</li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</pre></td></tr></table></figure><ol start=\"4\">\n<li>设置 Docker 稳定版仓库</li>\n</ol>\n<pre><code class=\"language-dock\">sudo add-apt-repository \\\n   &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n   $(lsb_release -cs) \\\n   stable&quot;\n</code></pre>\n<ol start=\"5\">\n<li>添加仓库后，更新 apt 源索引</li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>sudo apt-get update</pre></td></tr></table></figure><ol start=\"6\">\n<li>安装最新版 Docker CE（社区版）</li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>sudo apt-get install docker-ce</pre></td></tr></table></figure><ol start=\"7\">\n<li>检查 Docker CE 是否安装正确</li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>sudo docker run hello-world</pre></td></tr></table></figure><ol start=\"8\">\n<li>出现如下信息，表示安装成功</li>\n</ol>\n<p><img data-src=\"1.png\" alt=\"\"></p>\n<h1 id=\"docker使用\"><a class=\"markdownIt-Anchor\" href=\"#docker使用\">#</a> Docker 使用</h1>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 启动 docker</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>sudo service docker start</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 停止 docker</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>sudo service docker stop</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 重启 docker</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>sudo service docker restart</pre></td></tr></table></figure><h2 id=\"容器使用\"><a class=\"markdownIt-Anchor\" href=\"#容器使用\">#</a> 容器使用</h2>\n<ol>\n<li>启动容器</li>\n</ol>\n<details class=\"info\"><summary>参数说明</summary><div>\n<p>-i: 交互式操作</p>\n<p>-t: 终端</p>\n<p>redis:redis 镜像</p>\n</div></details>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker run -it redis</pre></td></tr></table></figure><ol start=\"2\">\n<li>停止一个容器</li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker stop &lt;容器 ID></pre></td></tr></table></figure><ol start=\"3\">\n<li>重启，停止的容器</li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker restart &lt;容器 ID></pre></td></tr></table></figure><ol start=\"4\">\n<li>进入容器</li>\n</ol>\n<ul>\n<li>在使用  <code>-d</code>  参数时，容器启动后会进入后台。此时想要进入容器，可以通过以下指令进入</li>\n</ul>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker attach &lt;容器 ID></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>docker exec -it &lt;容器 ID>           # 推荐大家使用 docker exec 命令，因为此退出容器终端，不会导致容器的停止。</pre></td></tr></table></figure><ol start=\"5\">\n<li>kill 掉一个已经在运行的容器</li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker kill &lt;容器 ID></pre></td></tr></table></figure><ol start=\"6\">\n<li>清理掉所有处于终止状态的容器</li>\n</ol>\n<pre><code>docker container prune\n</code></pre>\n<ol start=\"7\">\n<li>删除容器</li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker rm -f &lt;容器 ID></pre></td></tr></table></figure><h2 id=\"镜像使用\"><a class=\"markdownIt-Anchor\" href=\"#镜像使用\">#</a> 镜像使用</h2>\n<ol>\n<li>列出镜像</li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker images</pre></td></tr></table></figure><details class=\"info\"><summary>各个选项说明</summary><div>\n<p>REPOSITORY：镜像所在的仓库名称</p>\n<p>TAG：镜像标签</p>\n<p>IMAGEID：镜像 ID</p>\n<p>CREATED：镜像的创建日期 (不是获取该镜像的日期)</p>\n<p>SIZE：镜像大小</p>\n</div></details>\n<p><img data-src=\"2.png\" alt=\"\"></p>\n<ol start=\"2\">\n<li>搜索镜像</li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker search redis</pre></td></tr></table></figure><details class=\"info\"><summary>各项说明</summary><div>\n<p>NAME: 镜像仓库源的名称</p>\n<p>DESCRIPTION: 镜像的描述</p>\n<p>OFFICIAL: 是否 docker 官方发布</p>\n<p>START: 类似 Github 里面的 star，表示点赞、喜欢的意思。</p>\n<p>AUTOMATED: 自动构建。</p>\n</div></details>\n<p><img data-src=\"3.png\" alt=\"\"></p>\n<ol start=\"3\">\n<li>拉取镜像</li>\n</ol>\n<blockquote>\n<p>Docker 维护了镜像仓库，分为共有和私有两种，共有的官方仓库<span class=\"exturl\" data-url=\"aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS8=\"> Docker Hub (https://hub.docker.com/)</span> 是最重要最常用的镜像仓库。私有仓库（Private Registry）是开发者或者企业自建的镜像存储库，通常用来保存企业 内部的 Docker 镜像，用于内部开发流程和产品的发布、版本控制。</p>\n</blockquote>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker pull django</pre></td></tr></table></figure><ol start=\"4\">\n<li>删除镜像</li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker image rm 镜像名或镜像id</pre></td></tr></table></figure><ol start=\"5\">\n<li>镜像备份与迁移</li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker save -o ./ubuntu.tar ubuntu\t\t# 镜像打包成文件</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>docker load -i ./ubuntu.tar\t\t\t# 将镜像加载到本地</pre></td></tr></table></figure><h2 id=\"仓库管理\"><a class=\"markdownIt-Anchor\" href=\"#仓库管理\">#</a> 仓库管理</h2>\n<blockquote>\n<p><code>仓库（Repository）</code> 是集中存放镜像的地方。以下介绍一下 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS8=\">Docker Hub</span>。当然不止 Docker hub，只是远程的服务商不一样，操作都是一样的。</p>\n</blockquote>\n<h3 id=\"docker-hub\"><a class=\"markdownIt-Anchor\" href=\"#docker-hub\">#</a> Docker Hub</h3>\n<blockquote>\n<p>目前 Docker 官方维护了一个公共仓库 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS8=\">Docker Hub</span>。</p>\n<p>大部分需求都可以通过在 Docker Hub 中直接下载镜像来实现。</p>\n</blockquote>\n<h3 id=\"注册\"><a class=\"markdownIt-Anchor\" href=\"#注册\">#</a> 注册</h3>\n<blockquote>\n<p>在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS8=\">https://hub.docker.com</span> 免费注册一个 Docker 账号。</p>\n</blockquote>\n<ul>\n<li>登录</li>\n</ul>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker login</pre></td></tr></table></figure><ul>\n<li>退出</li>\n</ul>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker logout</pre></td></tr></table></figure><ul>\n<li>可以通过 docker search 命令来查找官方仓库中的镜像，并利用 docker pull 命令来将它下载到本地。</li>\n<li>以 Mysql 为关键词进行搜索</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker search mysql</pre></td></tr></table></figure><ul>\n<li>使用 docker pull 将官方 ubuntu 镜像下载到本地：</li>\n</ul>\n<pre><code class=\"language-dock\">docker pull mysql\n</code></pre>\n<ul>\n<li>推送对象\n<ul>\n<li>用户登录后，可以通过 docker push 命令将自己的镜像推送到 Docker Hub。</li>\n<li>以下命令中的 username 请替换为你的 Docker 账号用户名。</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker tag mysql username/mysql</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>docker image ls</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>docker push username/mysql</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>docker search username/mysql</pre></td></tr></table></figure>",
            "tags": [
                "Docker"
            ]
        },
        {
            "id": "http://example.com/Django%E6%A1%86%E6%9E%B6/Django-Celery%E5%BC%82%E6%AD%A5%E6%A1%86%E6%9E%B6/",
            "url": "http://example.com/Django%E6%A1%86%E6%9E%B6/Django-Celery%E5%BC%82%E6%AD%A5%E6%A1%86%E6%9E%B6/",
            "title": "Celery异步框架",
            "date_published": "2020-11-20T08:18:25.000Z",
            "content_html": "<h2 id=\"celery异步框架\"><a class=\"markdownIt-Anchor\" href=\"#celery异步框架\">#</a> Celery 异步框架</h2>\n<h3 id=\"介绍\"><a class=\"markdownIt-Anchor\" href=\"#介绍\">#</a> 介绍</h3>\n<blockquote>\n<p><code>Celery </code> 是一个 基于 <code>python</code>  开发的分布式异步消息任务队列，通过它可以轻松的实现任务的异步处理， 如果你的业务场景中需要用到异步任务，就可以考虑使用 <code>celery</code></p>\n<p>你想对 100 台机器执行一条批量命令，可能会花很长时间 ，但你不想让你的程序等着结果返回，而是给你返回 一个任务 ID, 你过一段时间只需要拿着这个任务 id 就可以拿到任务执行结果， 在任务执行 ing 进行时，你可以继续做其它的事情</p>\n<p><code>Celery </code> 在执行任务时需要通过一个消息中间件来接收和发送任务消息，以及存储任务结果， 一般使用 <code>rabbitMQ </code> or  <code>Redis</code></p>\n</blockquote>\n<h3 id=\"优点\"><a class=\"markdownIt-Anchor\" href=\"#优点\">#</a> 优点</h3>\n<ul>\n<li>简单：一但熟悉了 <code>celery</code>  的工作流程后，配置和使用还是比较简单的</li>\n<li>高可用：当任务执行失败或执行过程中发生连接中断， <code>celery </code> 会自动尝试重新执行任务</li>\n<li>快速：一个单进程的 <code>celery</code>  每分钟可处理上百万个任务</li>\n<li>灵活： 几乎 <code>celery</code>  的各个组件都可以被扩展及自定制</li>\n</ul>\n<h3 id=\"celery架构图\"><a class=\"markdownIt-Anchor\" href=\"#celery架构图\">#</a> celery 架构图</h3>\n<p><img data-src=\"1.png\" alt=\"\"></p>\n<h3 id=\"celery-扮演生产者和消费者的角色\"><a class=\"markdownIt-Anchor\" href=\"#celery-扮演生产者和消费者的角色\">#</a> Celery 扮演生产者和消费者的角色</h3>\n<ul>\n<li><code>Celery Beat</code>  : 任务调度器. Beat 进程会读取配置文件的内容，周期性的将配置中到期需要执行的任务发送给任务队列.</li>\n<li><code>Celery Worker</code>  : 执行任务的消费者，通常会在多台服务器运行多个消费者，提高运行效率.</li>\n<li><code>Broker</code>  : 消息代理，队列本身。也称为消息中间件。接受任务生产者发送过来的任务消息，存进队列再按序分发给任务消费方 (通常是消息队列或者数据库).</li>\n<li><code>Producer </code> : 任务生产者。调用 Celery API , 函数或者装饰器，而产生任务并交给任务队列处理的都是任务生产者.</li>\n<li><code>Result Backend</code>  : 任务处理完成之后保存状态信息和结果，以供查询.</li>\n</ul>\n<h3 id=\"django实现异步任务与定时任务\"><a class=\"markdownIt-Anchor\" href=\"#django实现异步任务与定时任务\">#</a> Django 实现异步任务与定时任务</h3>\n<h4 id=\"相关依赖包\"><a class=\"markdownIt-Anchor\" href=\"#相关依赖包\">#</a> 相关依赖包</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip install Django<span class=\"token operator\">==</span><span class=\"token number\">2.2</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>pip install celery<span class=\"token operator\">==</span><span class=\"token number\">4.4</span><span class=\"token number\">.7</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>pip install django<span class=\"token operator\">-</span>celery<span class=\"token operator\">-</span>beat<span class=\"token operator\">==</span><span class=\"token number\">2.1</span><span class=\"token number\">.0</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>pip install redis<span class=\"token operator\">==</span><span class=\"token number\">3.5</span><span class=\"token number\">.3</span></pre></td></tr></table></figure><h4 id=\"目录结构\"><a class=\"markdownIt-Anchor\" href=\"#目录结构\">#</a> 目录结构</h4>\n<p><img data-src=\"2.png\" alt=\"\"></p>\n<h4 id=\"celerypy\"><a class=\"markdownIt-Anchor\" href=\"#celerypy\">#</a>  <code>celery.py</code></h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> celery <span class=\"token keyword\">import</span> Celery</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> os<span class=\"token punctuation\">,</span>sys</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> django</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 1. 添加 django 项目根路径</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>CELERY_BASE_DIR <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>dirname<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>abspath<span class=\"token punctuation\">(</span>__file__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>sys<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>CELERY_BASE_DIR<span class=\"token punctuation\">,</span> <span class=\"token string\">'../loonflow'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 2. 添加 django 环境</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>os<span class=\"token punctuation\">.</span>environ<span class=\"token punctuation\">.</span>setdefault<span class=\"token punctuation\">(</span><span class=\"token string\">\"DJANGO_SETTINGS_MODULE\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"loonflow.settings\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>django<span class=\"token punctuation\">.</span>setup<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 读取配置</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 3.celery 基本配置</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>app <span class=\"token operator\">=</span> Celery<span class=\"token punctuation\">(</span><span class=\"token string\">'task'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    broker <span class=\"token operator\">=</span> <span class=\"token string\">'redis://127.0.0.1:6379/14'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    backend <span class=\"token operator\">=</span> <span class=\"token string\">'redis://127.0.0.1:6379/15'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    include<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'celery_task.tasks'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># 4. 实例化时可以添加下面这个属性</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>app<span class=\"token punctuation\">.</span>conf<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   result_expires<span class=\"token operator\">=</span><span class=\"token number\">3600</span><span class=\"token punctuation\">,</span>        <span class=\"token comment\">#执行结果放到 redis 里，一个小时没人取就丢弃</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># 5. 配置定时任务：每 5 秒钟执行 调用一次 celery_task 下 tasks.py 文件中的 add 函数</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>app<span class=\"token punctuation\">.</span>conf<span class=\"token punctuation\">.</span>beat_schedule <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token string\">'add-every-5-seconds'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token string\">'task'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'celery_task.tasks.test_task_crontab'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token string\">'schedule'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5.0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token string\">'args'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\"># 时区</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>app<span class=\"token punctuation\">.</span>conf<span class=\"token punctuation\">.</span>timezone <span class=\"token operator\">=</span> <span class=\"token string\">'Asia/Shanghai'</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>   app<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"taskspy\"><a class=\"markdownIt-Anchor\" href=\"#taskspy\">#</a>  <code>tasks.py</code></h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>celery <span class=\"token keyword\">import</span> app</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> os<span class=\"token punctuation\">,</span>sys</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>celery <span class=\"token keyword\">import</span> CELERY_BASE_DIR</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token triple-quoted-string string\">'''测试定时任务'''</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>task</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">test_task_crontab</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token triple-quoted-string string\">'''添加django项目路径'''</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    sys<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>CELERY_BASE_DIR<span class=\"token punctuation\">,</span> <span class=\"token string\">'../loonflow'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">from</span> libs<span class=\"token punctuation\">.</span>aliyun_sms <span class=\"token keyword\">import</span> test_crontab</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    res <span class=\"token operator\">=</span> test_crontab<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 执行异步任务</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>task</span><span class=\"token punctuation\">(</span>bind<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">send_sms_code</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> mobile<span class=\"token punctuation\">,</span> datas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    sys<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>CELERY_BASE_DIR<span class=\"token punctuation\">,</span> <span class=\"token string\">'../loonflow'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\"># 在方法中导包</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">from</span> libs<span class=\"token punctuation\">.</span>aliyun_sms <span class=\"token keyword\">import</span> send_sms</pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token comment\"># time.sleep(5)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token comment\"># 用 res 接收发送结果，成功是:０，　失败是：－１</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        res <span class=\"token operator\">=</span> send_sms<span class=\"token punctuation\">(</span>mobile<span class=\"token punctuation\">,</span> datas<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        res <span class=\"token operator\">=</span> <span class=\"token string\">'-1'</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">if</span> res <span class=\"token operator\">==</span> <span class=\"token string\">'-1'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token comment\"># 如果发送结果是 -1  就重试.</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        self<span class=\"token punctuation\">.</span>retry<span class=\"token punctuation\">(</span>countdown<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> max_retries<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> exc<span class=\"token operator\">=</span>Exception<span class=\"token punctuation\">(</span><span class=\"token string\">'短信发送失败'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"aliyun_smspy\"><a class=\"markdownIt-Anchor\" href=\"#aliyun_smspy\">#</a>  <code>aliyun_sms.py</code></h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">send_sms</span><span class=\"token punctuation\">(</span>phone<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    client <span class=\"token operator\">=</span> AcsClient<span class=\"token punctuation\">(</span>ALY_ACCESSKEY_ID<span class=\"token punctuation\">,</span> ALY_ACCESSKEY_SECRET<span class=\"token punctuation\">,</span> <span class=\"token string\">'cn-hangzhou'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    request <span class=\"token operator\">=</span> CommonRequest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    request<span class=\"token punctuation\">.</span>set_accept_format<span class=\"token punctuation\">(</span><span class=\"token string\">'json'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    request<span class=\"token punctuation\">.</span>set_domain<span class=\"token punctuation\">(</span><span class=\"token string\">'dysmsapi.aliyuncs.com'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    request<span class=\"token punctuation\">.</span>set_method<span class=\"token punctuation\">(</span><span class=\"token string\">'POST'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    request<span class=\"token punctuation\">.</span>set_protocol_type<span class=\"token punctuation\">(</span><span class=\"token string\">'https'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    request<span class=\"token punctuation\">.</span>set_version<span class=\"token punctuation\">(</span><span class=\"token string\">'2017-05-25'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    request<span class=\"token punctuation\">.</span>set_action_name<span class=\"token punctuation\">(</span><span class=\"token string\">'SendSms'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    request<span class=\"token punctuation\">.</span>add_query_param<span class=\"token punctuation\">(</span><span class=\"token string\">'RegionId'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cn-hangzhou\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    request<span class=\"token punctuation\">.</span>add_query_param<span class=\"token punctuation\">(</span><span class=\"token string\">'PhoneNumbers'</span><span class=\"token punctuation\">,</span> phone<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    request<span class=\"token punctuation\">.</span>add_query_param<span class=\"token punctuation\">(</span><span class=\"token string\">'SignName'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ABC商城\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    request<span class=\"token punctuation\">.</span>add_query_param<span class=\"token punctuation\">(</span><span class=\"token string\">'TemplateCode'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"SMS_205407934\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    request<span class=\"token punctuation\">.</span>add_query_param<span class=\"token punctuation\">(</span><span class=\"token string\">'TemplateParam'</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    response <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span>do_action<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\"># python2:  print(response)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    res <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"##########################################\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'执行了这个方法 send_message'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">test_crontab</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'############### 执行test_crontab测试任务 #############'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'############### 审批超时短信提醒 #############'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"测试定时任务\"><a class=\"markdownIt-Anchor\" href=\"#测试定时任务\">#</a> 测试定时任务</h4>\n<blockquote>\n<p>开启异步 celery -A celery_task worker -l INFO</p>\n</blockquote>\n<p><img data-src=\"3.png\" alt=\"\"></p>\n<blockquote>\n<p>开启定时任务  celery -A celery_task beat -l INFO</p>\n</blockquote>\n<p><img data-src=\"4.png\" alt=\"\"></p>\n<h4 id=\"测试异步任务\"><a class=\"markdownIt-Anchor\" href=\"#测试异步任务\">#</a> 测试异步任务</h4>\n<p><img data-src=\"5.png\" alt=\"\"></p>\n<h3 id=\"celery管理\"><a class=\"markdownIt-Anchor\" href=\"#celery管理\">#</a> Celery 管理</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>celery <span class=\"token operator\">-</span>A celery_task worker <span class=\"token operator\">-</span>l INFO\t\t\t<span class=\"token comment\"># 单线程</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>celery <span class=\"token operator\">-</span>A celery_task status\t\t\t\t<span class=\"token comment\"># 查看当前有哪些 worker 在运行</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>celery multi start w1 w2 <span class=\"token operator\">-</span>A celery_task <span class=\"token operator\">-</span>l INFO\t\t<span class=\"token comment\"># 一次性启动 w1，w2 两个 worker</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>celery multi stop w1 w2 <span class=\"token operator\">-</span>A celery_task\t\t\t<span class=\"token comment\">#停止 w1，w2 两个 worker</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 项目中启动 celery worker , 并发数最多 50，最少 10 个</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>celery multi start celery_task <span class=\"token operator\">-</span>A celery_task <span class=\"token operator\">-</span>l debug <span class=\"token operator\">-</span><span class=\"token operator\">-</span>autoscale<span class=\"token operator\">=</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 在项目中关闭 celery worker 所有进程</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>ps auxww<span class=\"token operator\">|</span>grep <span class=\"token string\">\"celery worker\"</span><span class=\"token operator\">|</span>grep <span class=\"token operator\">-</span>v grep<span class=\"token operator\">|</span>awk <span class=\"token string\">'&#123;print $2&#125;'</span><span class=\"token operator\">|</span>xargs kill <span class=\"token operator\">-</span><span class=\"token number\">9</span></pre></td></tr></table></figure><h3 id=\"django-celery-beat管理\"><a class=\"markdownIt-Anchor\" href=\"#django-celery-beat管理\">#</a> django-celery-beat 管理</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 启动 celery beat</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>celery <span class=\"token operator\">-</span>A celery_task beat <span class=\"token operator\">-</span>l INFO</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 项目中启动 celery beat</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>celery <span class=\"token operator\">-</span>A celery_task beat <span class=\"token operator\">-</span>l debug <span class=\"token operator\">>></span> <span class=\"token operator\">/</span>aaa<span class=\"token operator\">/</span>Scheduler<span class=\"token punctuation\">.</span>log <span class=\"token number\">2</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 停止 celery beat 杀死所有心跳进程</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>ps <span class=\"token operator\">-</span>ef <span class=\"token operator\">|</span> grep <span class=\"token operator\">-</span>E <span class=\"token string\">\"celery -A celery_task beat\"</span> <span class=\"token operator\">|</span> grep <span class=\"token operator\">-</span>v grep<span class=\"token operator\">|</span> awk <span class=\"token string\">'&#123;print $2&#125;'</span> <span class=\"token operator\">|</span> xargs kill <span class=\"token operator\">-</span>TERM <span class=\"token operator\">&amp;</span><span class=\"token operator\">></span> <span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span>null</pre></td></tr></table></figure>",
            "tags": [
                "Celery"
            ]
        },
        {
            "id": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/SQL-%E4%B8%80%E5%88%87%E7%9A%86%E5%85%B3%E7%B3%BB/",
            "url": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/SQL-%E4%B8%80%E5%88%87%E7%9A%86%E5%85%B3%E7%B3%BB/",
            "title": "SQL--一切皆关系",
            "date_published": "2020-11-17T12:12:50.000Z",
            "content_html": "<h1 id=\"sql一切皆关系\"><a class=\"markdownIt-Anchor\" href=\"#sql一切皆关系\">#</a> SQL–一切皆关系</h1>\n<p><img data-src=\"1.png\" alt=\"\"></p>\n<p>在计算机领域有许多伟大的设计理念和思想，例如：</p>\n<ul>\n<li>在 Unix 中，一切皆文件。</li>\n<li>在面向对象的编程语言中，一切皆对象。</li>\n</ul>\n<p>关系数据库同样也有自己的设计思想：<strong>在 SQL 中，一切皆关系</strong>。</p>\n<h3 id=\"关系模型\"><a class=\"markdownIt-Anchor\" href=\"#关系模型\">#</a> 关系模型</h3>\n<blockquote>\n<p>关系模型（Relational model）由 E.F.Codd 博士于 1970 年提出，以集合论中的关系概念为基础；无论是现实世界中的实体对象还是它们之间的联系都使用关系表示。我们在数据库系统中看到的关系就是二维表（Table），由行（Row）和列（Column）组成。因此，也可以说关系表是由数据行构成的集合。</p>\n</blockquote>\n<p><img data-src=\"2.png\" alt=\"\"></p>\n<p>关系模型由<strong>数据结构</strong>、<strong>关系操作</strong>、<strong>完整性约束</strong>三部分组成。</p>\n<ul>\n<li>关系模型中的数据结构就是关系表，包括<strong>基础表</strong>、<strong>派生表</strong>（查询结果）和<strong>虚拟表</strong>（视图）。</li>\n<li>常用的关系操作包括<strong>增加</strong>、<strong>删除</strong>、<strong>修改</strong>和<strong>查询</strong>（CRUD），使用的就是 SQL 语言。其中查询操作最为复杂，包括选择（Selection）、投影（Projection）、并集（Union）、交集（Intersection）、差集（Exception）以及笛卡儿积（Cartesian product）等。</li>\n<li>完整性约束用于维护数据的完整性或者满足业务约束的需求，包括<strong>实体完整性</strong>（主键约束）、<strong>参照完整性</strong>（外键约束）以及<strong>用户定义的完整性</strong>（非空约束、唯一约束、检查约束和默认值）。</li>\n</ul>\n<h3 id=\"面向集合\"><a class=\"markdownIt-Anchor\" href=\"#面向集合\">#</a> 面向集合</h3>\n<blockquote>\n<p>SQL（结构化查询语言）是操作关系数据库的标准语言。SQL 非常接近英语，使用起来非常简单。它在设计之初就考虑了非技术人员的使用需求，我们通常只需说明想要的结果（What），而将数据处理的过程（How）交给数据库管理系统。所以说，SQL 才是真正给人用的编程语言！😎</p>\n</blockquote>\n<p>接下来我们具体分析一下关系的各种操作语句；目的是为了让大家能够了解 <strong>SQL 是一种面向集合的编程语言，它的操作对象是集合，操作的结果也是集合</strong>。</p>\n<p>📝在关系数据库中，关系、表、集合三者通常表示相同的概念。</p>\n<h3 id=\"select\"><a class=\"markdownIt-Anchor\" href=\"#select\">#</a> SELECT</h3>\n<p>下面是一个简单的查询语句：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> employee_id<span class=\"token punctuation\">,</span> first_name<span class=\"token punctuation\">,</span> last_name<span class=\"token punctuation\">,</span> hire_date</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">FROM</span> employees<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>它的作用就是从 employees 表中查询员工信息。显然，我们都知道 FROM 之后是一个表（关系、集合）。不仅如此，整个查询语句的结果也是一个表。所以，我们可以将上面的查询作为表使用：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> employee_id<span class=\"token punctuation\">,</span> first_name<span class=\"token punctuation\">,</span> last_name<span class=\"token punctuation\">,</span> hire_date</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>          <span class=\"token keyword\">FROM</span> employees<span class=\"token punctuation\">)</span> t<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>括号内的查询语句被称为派生表，我们给它指定了一个别名叫做 t。同样，整个查询结果也是一个表；这就意味着我们可以继续嵌套，虽然这么做很无聊。</p>\n<p>我们再看一个 PostgreSQL 中的示例：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- PostgreSQL</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">FROM</span> upper<span class=\"token punctuation\">(</span><span class=\"token string\">'sql'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">|</span> upper <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">|</span><span class=\"token comment\">-------|</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">|</span>   <span class=\"token keyword\">SQL</span> <span class=\"token operator\">|</span></pre></td></tr></table></figure><p>upper () 是一个大写转换的函数。它出现再 FROM 子句中，意味着它的结果也是一个表，只不过是 1 行 1 列的特殊表。</p>\n<p>SELECT 子句用于指定需要查询的字段，可以包含表达式、函数值等。SELECT 在关系操作中被称为投影（Projection），看下面的示意图应该就比较好理解了。</p>\n<p><img data-src=\"3.png\" alt=\"\"></p>\n<p>除了 SELECT 之外，还有一些常用的 SQL 子句。</p>\n<hr>\n<p>WHERE 用于指定数据过滤的条件，在关系运算中被称为选择（Selection），示意图如下：</p>\n<p><img data-src=\"4.png\" alt=\"\"></p>\n<p>ORDER BY 用于对查询的结果进行排序，示意图如下：</p>\n<p><img data-src=\"5.png\" alt=\"\"></p>\n<p>总之，SQL 可以完成各种数据操作，例如过滤、分组、排序、限定数量等；所有这些操作的对象都是关系表，结果也是关系表。</p>\n<p><img data-src=\"6.png\" alt=\"\"></p>\n<p>在这些关系操作中，有一个比较特殊，就是分组。</p>\n<hr>\n<h3 id=\"group-by\"><a class=\"markdownIt-Anchor\" href=\"#group-by\">#</a> GROUP BY</h3>\n<p>分组（ GROUP BY）操作和其他的关系操作不同，因为它改变了关系的结构。来看下面的示例：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> department_id<span class=\"token punctuation\">,</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> first_name</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">FROM</span> employees</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> department_id<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>该语句的目的是按照部门统计员工的数量，但是存在一个语法错误，就是 first_name 不能出现在查询列表中。原因在于按照部门进行分组的话，每个部门包含多个员工；无法确定需要显示哪个员工的姓名，这是一个逻辑上的错误。</p>\n<p>所以说，GROUP BY 改变了集合元素（数据行）的结构，创建了一个全新的关系。分组操作的示意图如下：</p>\n<p><img data-src=\"7.png\" alt=\"\"></p>\n<p>尽管如此，GROUP BY 的结果仍然是一个集合。</p>\n<hr>\n<h3 id=\"union\"><a class=\"markdownIt-Anchor\" href=\"#union\">#</a> UNION</h3>\n<p>SQL 面向集合特性最明显的体现就是 UNION（并集运算）、INTERSECT（交集运算）和 EXCEPT/MINUS（差集运算）。</p>\n<p>这些集合运算符的作用都是将两个集合并成一个集合，因此需要满足以下条件：</p>\n<ul>\n<li>两边的集合中字段的数量和顺序必须相同；</li>\n<li>两边的集合中对应字段的类型必须匹配或兼容。</li>\n</ul>\n<p>具体来说，UNION 和 UNION ALL 用于计算两个集合的并集，返回出现在第一个查询结果或者第二个查询结果中的数据。它们的区别在于 UNION 排除了结果中的重复数据，UNION ALL 保留了重复数据。下面是 UNION 操作的示意图：</p>\n<p><img data-src=\"8.png\" alt=\"\"></p>\n<p>INTERSECT 操作符用于返回两个集合中的共同部分，即同时出现在第一个查询结果和第二个查询结果中的数据，并且排除了结果中的重复数据。INTERSECT 运算的示意图如下：</p>\n<p><img data-src=\"9.png\" alt=\"\"></p>\n<p>EXCEPT 或者 MINUS 操作符用于返回两个集合的差集，即出现在第一个查询结果中，但不在第二个查询结果中的记录，并且排除了结果中的重复数据。EXCEPT 运算符的示意图如下：</p>\n<p><img data-src=\"10.png\" alt=\"\"></p>\n<p>除此之外，DISTINCT 运算符用于消除重复数据，也就是排除集合中的重复元素。</p>\n<blockquote>\n<p>SQL 中的关系概念来自数学中的集合理论，因此 UNION、INTERSECT 和 EXCEPT 分别来自集合论中的并集（∪ \\cup∪）、交集（∩ \\cap∩）和差集（∖ \\setminus∖）运算。需要注意的是，集合理论中的集合不允许存在重复的数据，但是 SQL 允许。因此，SQL 中的集合也被称为多重集合（multiset）；多重集合与集合理论中的集合都是无序的，但是 SQL 可以通过 ORDER BY 子句对查询结果进行排序。</p>\n</blockquote>\n<hr>\n<h3 id=\"join\"><a class=\"markdownIt-Anchor\" href=\"#join\">#</a> JOIN</h3>\n<p>在 SQL 中，不仅实体对象存储在关系表中，对象之间的联系也存储在关系表中。因此，当我们想要获取这些相关的数据时，需要使用到另一个操作：连接查询（JOIN）。</p>\n<p>常见的 SQL 连接查类型包括<strong>内连接</strong>、<strong>外连接</strong>、<strong>交叉连接</strong>等。其中，外连接又可以分为<strong>左外连接</strong>、<strong>右外连接</strong>以及<strong>全外连接</strong>。</p>\n<p>内连接（Inner Join）返回两个表中满足连接条件的数据，内连接的原理如下图所示：</p>\n<p><img data-src=\"11.png\" alt=\"\"></p>\n<p>左外连接（Left Outer Join）返回左表中所有的数据；对于右表，返回满足连接条件的数据；如果没有就返回空值。左外连接的原理如下图所示：</p>\n<p><img data-src=\"12.png\" alt=\"\"></p>\n<p>右外连接（Right Outer Join）返回右表中所有的数据；对于左表，返回满足连接条件的数据，如果没有就返回空值。右外连接与左外连接可以互换，以下两者等价：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>t1 <span class=\"token keyword\">RIGHT</span> <span class=\"token keyword\">JOIN</span> t2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>t2 <span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">JOIN</span> t1</pre></td></tr></table></figure><p>全外连接（Full Outer Join）等价于左外连接加上右外连接，同时返回左表和右表中所有的数据；对于两个表中不满足连接条件的数据返回空值。全外连接的原理如下图所示：</p>\n<p><img data-src=\"13.png\" alt=\"\"></p>\n<p>交叉连接也称为笛卡尔积（Cartesian Product）。两个表的交叉连接相当于一个表的所有行和另一个表的所有行两两组合，结果的数量为两个表的行数相乘。交叉连接的原理如下图所示：</p>\n<p><img data-src=\"14.png\" alt=\"\"></p>\n<blockquote>\n<p>其他类型的连接还有<span class=\"exturl\" data-url=\"aHR0cHM6Ly90b255ZG9uZy5ibG9nLmNzZG4ubmV0L2FydGljbGUvZGV0YWlscy8xMDgxNTIzMjk=\">半连接</span>（SEMI JOIN）、<span class=\"exturl\" data-url=\"aHR0cHM6Ly90b255ZG9uZy5ibG9nLmNzZG4ubmV0L2FydGljbGUvZGV0YWlscy8xMDgxNTIzMjk=\">反连接</span>（ANTI JOIN）。</p>\n</blockquote>\n<p>集合操作将两个集合合并成一个更大或更小的集合；连接查询将两个集合转换成一个更大或更小的集合，同时获得了一个更大的元素（更多的列）。很多时候集合操作都可以通过连接查询来实现，例如：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> department_id</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">FROM</span> departments</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token keyword\">UNION</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">SELECT</span> department_id</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">FROM</span> employees<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>等价于：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">COALESCE</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span>department_id<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>department_id<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">FROM</span> departments d</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">FULL</span> <span class=\"token keyword\">JOIN</span> employees e <span class=\"token keyword\">ON</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>department_id <span class=\"token operator\">=</span> d<span class=\"token punctuation\">.</span>department_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">123</span></pre></td></tr></table></figure><p>我们已经介绍了许多查询的示例，接下来看看其他的数据操作。</p>\n<hr>\n<h3 id=\"dml\"><a class=\"markdownIt-Anchor\" href=\"#dml\">#</a> DML</h3>\n<p>DML 表示数据操作语言，也就是插入、更新和删除。以下是一个插入语句示例：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> test<span class=\"token punctuation\">(</span>id <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- MySQL、SQL Server 等</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> test<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">-- Oracle</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> test<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token number\">1</span> <span class=\"token keyword\">AS</span> id <span class=\"token keyword\">FROM</span> DUAL</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">UNION</span> <span class=\"token keyword\">ALL</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token number\">2</span> <span class=\"token keyword\">FROM</span> DUAL</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">UNION</span> <span class=\"token keyword\">ALL</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token number\">3</span> <span class=\"token keyword\">FROM</span> DUAL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>我们通过一个 INSERT 语句插入了 3 条记录，或者说是插入了一个包含 3 条记录的关系表。因为，UNION ALL 返回的是一个关系表。VALUES 同样是指定了一个关系表，在 SQL Server 和 PostgreSQL 中支持以下语句：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">)</span> test<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>我们已经说过，FROM 之后是一个关系表，所以这里的 VALUES 也是一样。由于我们经常插入单条记录，并没有意识到实际上是以表为单位进行操作。</p>\n<p>同样，UPDATE 和 DELETE 语句也都是以关系表为单位的操作；只不过我们习惯了说更新一行数据或者删除几条记录。</p>\n<details class=\"primary\"><summary>参考来源</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hvcnNlcy9hcnRpY2xlL2RldGFpbHMvMTA0NTUzMDc1\">https://blog.csdn.net/horses/article/details/104553075</span></p>\n</div></details>\n",
            "tags": [
                "SQL"
            ]
        },
        {
            "id": "http://example.com/Vue/Vue-%E4%BD%BF%E7%94%A8%E5%A4%A7%E5%90%8C%E5%B0%8F%E5%BC%82%E7%9A%84UI%E7%BB%84%E4%BB%B6/",
            "url": "http://example.com/Vue/Vue-%E4%BD%BF%E7%94%A8%E5%A4%A7%E5%90%8C%E5%B0%8F%E5%BC%82%E7%9A%84UI%E7%BB%84%E4%BB%B6/",
            "title": "UI组件",
            "date_published": "2020-08-24T12:27:35.000Z",
            "content_html": "<h3 id=\"1-ant-design-of-vue\"><a class=\"markdownIt-Anchor\" href=\"#1-ant-design-of-vue\">#</a> 1. ANT DESIGN of Vue</h3>\n<center><img data-src=\"1.png\"  /></center>\n<blockquote>\n<p>Ant Design 是蚂蚁金服技术部经过大量项目时间和总结，设计的前端 UI 组件库。</p>\n<p>致力于提升『用户』和『设计者』使用体验的中台设计语言。它模糊了产品经理、交互设计师、视觉设计师、前端工程师、开发工程师等角色边界，将进行 UE 设计和 UI 设计人员统称为『设计者』，利用统一的规范进行设计赋能，全面提高中台产品体验和研发效率。</p>\n<p>Ant Design Vue 是使用 Vue 实现的遵循 Ant Design 设计规范的高质量 UI 组件库</p>\n</blockquote>\n<h4 id=\"特性\"><a class=\"markdownIt-Anchor\" href=\"#特性\">#</a> 特性</h4>\n<ul>\n<li>\n<p>🌈 提炼自企业级中后台产品的交互语言和视觉风格。</p>\n</li>\n<li>\n<p>📦 开箱即用的高质量 Vue 组件</p>\n</li>\n<li>\n<p>🎉共享<span class=\"exturl\" data-url=\"aHR0cDovL2FudC1kZXNpZ24uZ2l0ZWUuaW8vZG9jcy9zcGVjL2ludHJvZHVjZS1jbg==\"> Ant Design of React</span> 设计工具体系。</p>\n</li>\n<li>\n<p>⚙️ 全链路开发和设计工具体系。</p>\n</li>\n<li>\n<p>🌍 数十个国际化语言支持。</p>\n</li>\n<li>\n<p>🎨 深入每个细节的主题定制能力。</p>\n</li>\n</ul>\n<h4 id=\"使用安装\"><a class=\"markdownIt-Anchor\" href=\"#使用安装\">#</a> 使用安装</h4>\n<blockquote>\n<h4 id=\"1安装\"><a class=\"markdownIt-Anchor\" href=\"#1安装\">#</a> 1. 安装</h4>\n<p>npm install --save ant-design-vue</p>\n</blockquote>\n<blockquote>\n<h4 id=\"2mainjs中全局引入并注册\"><a class=\"markdownIt-Anchor\" href=\"#2mainjs中全局引入并注册\">#</a> 2.main.js 中全局引入并注册</h4>\n<p>import Antd from ‘ant-design-vue’;<br>\nimport ‘ant-design-vue/dist/antd.css’;<br>\nVue.use(Antd);</p>\n</blockquote>\n<blockquote>\n<h4 id=\"3在页面中不再需要引入注册组件可以直接使用所有的组件\"><a class=\"markdownIt-Anchor\" href=\"#3在页面中不再需要引入注册组件可以直接使用所有的组件\">#</a> 3. 在页面中不再需要引入注册组件，可以直接使用所有的组件</h4>\n<pre><code class=\"language-vue\">&lt;template&gt;\n &lt;div&gt;    \n \t&lt;a-button type=&quot;primary&quot;&gt;按钮&lt;/a-button&gt;  \n\t&lt;/div&gt; \n&lt;/template&gt;\n</code></pre>\n</blockquote>\n<h4 id=\"资源地址\"><a class=\"markdownIt-Anchor\" href=\"#资源地址\">#</a> 资源地址</h4>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly92dWUuYW50LmRlc2lnbi9kb2NzL3Z1ZS9pbnRyb2R1Y2UtY24v\">官方文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcmV2aWV3LnByby5hbnRkdi5jb20=\">Ant Design Pro 演示</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NlbmR5YS9hbnQtZGVzaWduLXByby12dWU=\">Ant Design Pro 项目源码</span></li>\n</ul>\n<hr>\n<h3 id=\"2-element-ui\"><a class=\"markdownIt-Anchor\" href=\"#2-element-ui\">#</a> 2. Element UI</h3>\n<center><img data-src=\"2.png\" style=\"zoom:200%;\" /></center>\n<blockquote>\n<p>Element，一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的组件库，提供了配套设计资源，帮助网站快速成型。由饿了么公司前端团队开源。(目前已停止维护)</p>\n</blockquote>\n<h4 id=\"设计原则\"><a class=\"markdownIt-Anchor\" href=\"#设计原则\">#</a> 设计原则</h4>\n<h5 id=\"一致性-consistency\"><a class=\"markdownIt-Anchor\" href=\"#一致性-consistency\">#</a> 一致性 Consistency</h5>\n<ul>\n<li>与现实生活一致：与现实生活的流程、逻辑保持一致，遵循用户习惯的语言和概念；</li>\n<li>在界面中一致：所有的元素和结构需保持一致，比如：设计样式、图标和文本、元素的位置等。</li>\n</ul>\n<h5 id=\"反馈-feedback\"><a class=\"markdownIt-Anchor\" href=\"#反馈-feedback\">#</a> 反馈 Feedback</h5>\n<ul>\n<li>控制反馈：通过界面样式和交互动效让用户可以清晰的感知自己的操作；</li>\n<li>页面反馈：操作后，通过页面元素的变化清晰地展现当前状态。</li>\n</ul>\n<h5 id=\"效率-efficiency\"><a class=\"markdownIt-Anchor\" href=\"#效率-efficiency\">#</a> 效率 Efficiency</h5>\n<ul>\n<li>简化流程：设计简洁直观的操作流程；</li>\n<li>清晰明确：语言表达清晰且表意明确，让用户快速理解进而作出决策；</li>\n<li>帮助用户识别：界面简单直白，让用户快速识别而非回忆，减少用户记忆负担。</li>\n</ul>\n<h5 id=\"可控-controllability\"><a class=\"markdownIt-Anchor\" href=\"#可控-controllability\">#</a> 可控 Controllability</h5>\n<ul>\n<li>用户决策：根据场景可给予用户操作建议或安全提示，但不能代替用户进行决策；</li>\n<li>结果可控：用户可以自由的进行操作，包括撤销、回退和终止当前操作等。</li>\n</ul>\n<h4 id=\"使用\"><a class=\"markdownIt-Anchor\" href=\"#使用\">#</a> 使用</h4>\n<blockquote>\n<h4 id=\"1安装-2\"><a class=\"markdownIt-Anchor\" href=\"#1安装-2\">#</a> 1. 安装</h4>\n<p>npm i element-ui -S</p>\n</blockquote>\n<blockquote>\n<h4 id=\"2mainjs中全局引入并注册-2\"><a class=\"markdownIt-Anchor\" href=\"#2mainjs中全局引入并注册-2\">#</a> 2.main.js 中全局引入并注册</h4>\n<p>import ElementUI from ‘element-ui’;<br>\nimport ‘element-ui/lib/theme-chalk/index.css’;<br>\nVue.use(ElementUI);</p>\n</blockquote>\n<blockquote>\n<h4 id=\"3在页面中不再需要引入注册组件可以直接使用所有的组件-2\"><a class=\"markdownIt-Anchor\" href=\"#3在页面中不再需要引入注册组件可以直接使用所有的组件-2\">#</a> 3. 在页面中不再需要引入注册组件，可以直接使用所有的组件</h4>\n<pre><code class=\"language-vue\">&lt;template&gt;\n &lt;div&gt;    \n \t&lt;el-button type=&quot;primary&quot;&gt;主要按钮&lt;/el-button&gt;\n\t&lt;/div&gt; \n&lt;/template&gt;\n</code></pre>\n</blockquote>\n<h4 id=\"资源地址-2\"><a class=\"markdownIt-Anchor\" href=\"#资源地址-2\">#</a> 资源地址</h4>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbGVtZW50LmVsZW1lLmlvLyMvemgtQ04vY29tcG9uZW50L2luc3RhbGxhdGlvbg==\">官方文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYW5qaWFjaGVuLmdpdGh1Yi5pby92dWUtZWxlbWVudC1hZG1pbi8jL2xvZ2lu\">vue-element-admin 演示</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYW5qaWFjaGVuLmdpdGh1Yi5pby92dWUtZWxlbWVudC1hZG1pbi1zaXRlL3poLw==\">vue-element-admin 项目文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1BhbkppYUNoZW4vdnVlLWVsZW1lbnQtYWRtaW4=\">vue-element-admin 项目源码</span></li>\n</ul>\n",
            "tags": [
                "UI组件"
            ]
        },
        {
            "id": "http://example.com/Vue/Vue-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F-%E4%BB%8E%E6%91%87%E7%AF%AE%E5%88%B0%E5%9D%9F%E5%A2%93/",
            "url": "http://example.com/Vue/Vue-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F-%E4%BB%8E%E6%91%87%E7%AF%AE%E5%88%B0%E5%9D%9F%E5%A2%93/",
            "title": "生命周期(从摇篮到坟墓)",
            "date_published": "2020-08-08T13:25:02.000Z",
            "content_html": "<h1 id=\"vue生命周期\"><a class=\"markdownIt-Anchor\" href=\"#vue生命周期\">#</a> Vue–生命周期</h1>\n<img data-src=\"1.png\"/>\n<h3 id=\"生命周期是什么\"><a class=\"markdownIt-Anchor\" href=\"#生命周期是什么\">#</a> 生命周期是什么</h3>\n<blockquote>\n<p>生命周期 <code>（Life Cycle）</code> 的概念应用很广泛，特别是在政治、经济、环境、技术、社会等诸多领域经常出现，其基本涵义可以通俗地理解为 “从摇篮到坟墓” <code>（Cradle-to-Grave）</code> 的整个过程</p>\n<p>在 <code>Vue</code>  中实例从创建到销毁的过程就是生命周期，即指从创建、初始化数据、编译模板、挂载 Dom→渲染、更新→渲染、销毁等一系列过程</p>\n<p>我们可以把组件比喻成工厂里面的一条流水线，每个工人（生命周期）站在各自的岗位，当任务流转到工人身边的时候，工人就开始工作</p>\n</blockquote>\n<h3 id=\"生命周期有哪些\"><a class=\"markdownIt-Anchor\" href=\"#生命周期有哪些\">#</a> 生命周期有哪些</h3>\n<p>先搂一眼官方文档的图片</p>\n<center><img data-src=\"3.png\"  /></center>\n<ul>\n<li>Vue 生命周期总共可以分为 8 个阶段：创建前后，载入前后，更新前后，销毁前销毁后</li>\n</ul>\n<h3 id=\"1-在beforecreate和created钩子函数之间的生命周期\"><a class=\"markdownIt-Anchor\" href=\"#1-在beforecreate和created钩子函数之间的生命周期\">#</a> 1. <strong>在 beforeCreate 和 created 钩子函数之间的生命周期</strong></h3>\n<ul>\n<li>\n<p>在这个生命周期之间，进行<strong>初始化事件，进行数据的观测</strong>，在 <code>created</code>  的时候数据已经和 <code>data</code> <strong> 属性进行绑定</strong>（放在 data 中的属性当值发生改变的同时，视图也会改变）。</p>\n</li>\n<li>\n<p><code>注意：此时还是没有el选项</code></p>\n</li>\n</ul>\n<h3 id=\"2-created钩子函数和beforemount间的生命周期\"><a class=\"markdownIt-Anchor\" href=\"#2-created钩子函数和beforemount间的生命周期\">#</a> <strong>2. created 钩子函数和 beforeMount 间的生命周期</strong></h3>\n<center><img data-src=\"4.png\"  /></center>\n<p>在这一阶段发生的故事还是比较多的。</p>\n<ul>\n<li>\n<p>首先判断是否存在 <code>el</code>  选项，若不存在则停止编译，直到调用 <code>vm.$mount(el)</code>  才会继续编译</p>\n</li>\n<li>\n<p>是否有模板，有则将模板转化为 <code>render</code>  函数，通过 <code>render</code>  函数去渲染创建 <code>Dom</code>  树，无则编译 <code>el</code>  对象外层 <code>HTML</code>  作为模板</p>\n</li>\n<li>\n<p>优先级： <code>render</code>  &gt;  <code>template</code>  &gt;  <code>outerHTML</code></p>\n</li>\n</ul>\n<h3 id=\"3-beforemount和mounted-钩子函数间的生命周期\"><a class=\"markdownIt-Anchor\" href=\"#3-beforemount和mounted-钩子函数间的生命周期\">#</a> <strong>3. beforeMount 和 mounted 钩子函数间的生命周期</strong></h3>\n<center><img data-src=\"5.png\"  /></center>\n<ul>\n<li>此阶段 <code>vm.el</code>  完成挂载， <code>vm.$el</code>  生成的 <code>DOM</code>  替换了 <code>el</code>  选项所对应的 <code>DOM</code></li>\n</ul>\n<h3 id=\"4-mounted\"><a class=\"markdownIt-Anchor\" href=\"#4-mounted\">#</a> <strong>4. mounted</strong></h3>\n<ul>\n<li><code>vm.el</code>  已完成 <code>DOM</code>  的挂载与渲染，此刻打印 <code>vm.$el</code> ，发现之前的挂载点及内容已被替换成新的 <code>DOM</code></li>\n</ul>\n<h3 id=\"5-beforeupdate钩子函数和updated钩子函数间的生命周期\"><a class=\"markdownIt-Anchor\" href=\"#5-beforeupdate钩子函数和updated钩子函数间的生命周期\">#</a> <strong>5. beforeUpdate 钩子函数和 updated 钩子函数间的生命周期</strong></h3>\n<center><img data-src=\"6.png\"  /></center>\n<ul>\n<li>当 vue 发现 data 中的数据发生了改变，会<strong>触发对应组件的重新渲染</strong>，先后调用 <code>beforeUpdate</code>  和 <code>updated</code>  钩子函数</li>\n</ul>\n<h3 id=\"6beforedestroy\"><a class=\"markdownIt-Anchor\" href=\"#6beforedestroy\">#</a> 6.<strong>beforeDestroy</strong></h3>\n<ul>\n<li><code>0beforeDestroy</code>  钩子函数在实例销毁之前调用。在这一步，实例仍然完全可用。</li>\n</ul>\n<h3 id=\"7destroyed\"><a class=\"markdownIt-Anchor\" href=\"#7destroyed\">#</a> 7.<strong>destroyed</strong></h3>\n<ul>\n<li><code>destroyed</code>  钩子函数在 <code>Vue </code> 实例销毁后调用。调用后， <code>Vue </code> 实例指示的所有东西都会解绑定，所有的事件监听器会被移除，所有的子实例也会被销毁，并不能清除 <code>Dom </code> ，仅仅销毁实例</li>\n</ul>\n<h3 id=\"数据请求在created和mouted的区别\"><a class=\"markdownIt-Anchor\" href=\"#数据请求在created和mouted的区别\">#</a> 数据请求在 created 和 mouted 的区别</h3>\n<ul>\n<li>\n<p><code>created</code>  是在组件实例一旦创建完成的时候立刻调用，这时候页面 <code>dom</code>  节点并未生成</p>\n</li>\n<li>\n<p><code>mounted</code>  是在页面 <code>dom</code>  节点渲染完毕之后就立刻执行的</p>\n</li>\n<li>\n<p>触发时机上 <code>created</code>  是比 <code>mounted</code>  要更早的</p>\n</li>\n<li>\n<p>两者相同点：都能拿到实例对象的属性和方法</p>\n</li>\n<li>\n<p>讨论这个问题本质就是触发的时机，放在 <code>mounted</code>  请求有可能导致页面闪动（页面 <code>dom</code>  结构已经生成），但如果在页面加载前完成则不会出现此情况</p>\n</li>\n</ul>\n",
            "tags": [
                "vue生命周期"
            ]
        },
        {
            "id": "http://example.com/Django%E6%A1%86%E6%9E%B6/Django-JWT%E4%BD%BF%E7%94%A8/",
            "url": "http://example.com/Django%E6%A1%86%E6%9E%B6/Django-JWT%E4%BD%BF%E7%94%A8/",
            "title": "Django--JWT使用",
            "date_published": "2020-04-22T12:22:01.000Z",
            "content_html": "<h3 id=\"1jwt安装配置\"><a class=\"markdownIt-Anchor\" href=\"#1jwt安装配置\">#</a> 1.JWT 安装配置</h3>\n<ul>\n<li>安装 JWT</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip install djangorestframework<span class=\"token operator\">-</span>jwt<span class=\"token operator\">==</span><span class=\"token number\">1.11</span><span class=\"token number\">.0</span></pre></td></tr></table></figure><ul>\n<li>在 <code>settings.py</code>  配置 jwt 载荷中的有效期设置</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># jwt 载荷中的有效期设置</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>JWT_AUTH <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\"># 1.token 前缀：headers 中 Authorization 值的前缀</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token string\">'JWT_AUTH_HEADER_PREFIX'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'JWT'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\"># 2.token 有效期：一天有效</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token string\">'JWT_EXPIRATION_DELTA'</span><span class=\"token punctuation\">:</span> datetime<span class=\"token punctuation\">.</span>timedelta<span class=\"token punctuation\">(</span>days<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\"># 3. 刷新 token：允许使用旧的 token 换新 token</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token string\">'JWT_ALLOW_REFRESH'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\"># 4.token 有效期：token 在 24 小时内过期，可续期 token</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token string\">'JWT_REFRESH_EXPIRATION_DELTA'</span><span class=\"token punctuation\">:</span> datetime<span class=\"token punctuation\">.</span>timedelta<span class=\"token punctuation\">(</span>hours<span class=\"token operator\">=</span><span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\"># 5. 自定义 JWT 载荷信息：自定义返回格式，需要手工创建</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token string\">'JWT_RESPONSE_PAYLOAD_HANDLER'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'app01.views.jwt_response_payload_handler'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>在 <code>settings.py</code>  配置默认的认证方式</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>REST_FRAMEWORK <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\"># 认证器</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token string\">'DEFAULT_AUTHENTICATION_CLASSES'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token string\">'rest_framework_jwt.authentication.JSONWebTokenAuthentication'</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 在 DRF 中配置 JWT 认证</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>在 <code>settings.py</code>  配置自定义验证后端登录</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>AUTHENTICATION_BACKENDS <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token string\">'app01.views.Manylogin'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><ul>\n<li>在 <code>settings.py</code>  注册用户模型</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>AUTH_USER_MODEL <span class=\"token operator\">=</span> <span class=\"token string\">'app01.User'</span></pre></td></tr></table></figure><h3 id=\"2重写django用户模型\"><a class=\"markdownIt-Anchor\" href=\"#2重写django用户模型\">#</a> 2. 重写 Django 用户模型</h3>\n<ul>\n<li><code>models.py</code></li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>db <span class=\"token keyword\">import</span> models</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>contrib<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> AbstractUser</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 用户表</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span>AbstractUser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    username <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span>unique<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    password <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    email <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span>null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>blank<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    phone <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span>null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>blank<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        db_table <span class=\"token operator\">=</span> <span class=\"token string\">'tb_user'</span></pre></td></tr></table></figure><h3 id=\"3生成token\"><a class=\"markdownIt-Anchor\" href=\"#3生成token\">#</a> 3. 生成 Token</h3>\n<ul>\n<li><code>utils.py</code></li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> rest_framework_jwt<span class=\"token punctuation\">.</span>settings <span class=\"token keyword\">import</span> api_settings</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">creare_token</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    jwt_payload_handler <span class=\"token operator\">=</span> api_settings<span class=\"token punctuation\">.</span>JWT_PAYLOAD_HANDLER</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    jwt_encode_handler <span class=\"token operator\">=</span> api_settings<span class=\"token punctuation\">.</span>JWT_ENCODE_HANDLER</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    payload <span class=\"token operator\">=</span> jwt_payload_handler<span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    token <span class=\"token operator\">=</span> jwt_encode_handler<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> token</pre></td></tr></table></figure><h3 id=\"4序列化器\"><a class=\"markdownIt-Anchor\" href=\"#4序列化器\">#</a> 4. 序列化器</h3>\n<ul>\n<li><code>serializers.py</code></li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> rest_framework <span class=\"token keyword\">import</span> serializers</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>contrib<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span>hashers <span class=\"token keyword\">import</span> make_password</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>utils <span class=\"token keyword\">import</span> creare_token</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CreateUserSerializers</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>Serializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    username <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    password <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    email <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>allow_null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    phone <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    token <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>read_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> validated_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        user <span class=\"token operator\">=</span> User<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>create<span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>validated_data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        password <span class=\"token operator\">=</span> make_password<span class=\"token punctuation\">(</span>validated_data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'password'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        user<span class=\"token punctuation\">.</span>password <span class=\"token operator\">=</span> password</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        user<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        token <span class=\"token operator\">=</span> create_token<span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        user<span class=\"token punctuation\">.</span>token <span class=\"token operator\">=</span> token</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">return</span> user</pre></td></tr></table></figure><h3 id=\"5注册接口\"><a class=\"markdownIt-Anchor\" href=\"#5注册接口\">#</a> 5. 注册接口</h3>\n<ul>\n<li><code>views.py</code></li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>db<span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Q</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> rest_framework<span class=\"token punctuation\">.</span>views <span class=\"token keyword\">import</span> APIView</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> rest_framework<span class=\"token punctuation\">.</span>response <span class=\"token keyword\">import</span> Response</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>serializers <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span> <span class=\"token keyword\">import</span> models</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>contrib<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span>backends <span class=\"token keyword\">import</span> ModelBackend</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">from</span> rest_framework<span class=\"token punctuation\">.</span>permissions <span class=\"token keyword\">import</span> IsAuthenticated</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">from</span> rest_framework_jwt<span class=\"token punctuation\">.</span>authentication <span class=\"token keyword\">import</span> JSONWebTokenAuthentication</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">UserView</span><span class=\"token punctuation\">(</span>APIView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">post</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        data <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>data</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'username'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'password'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'password2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'email'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'phone'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'code'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">202</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'msg'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'参数不全'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">if</span> data<span class=\"token punctuation\">[</span><span class=\"token string\">'password'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> data<span class=\"token punctuation\">[</span><span class=\"token string\">'password2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'code'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">204</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'msg'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'两次密码不一致'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            user <span class=\"token operator\">=</span> CreateUserSerializers<span class=\"token punctuation\">(</span>data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            user<span class=\"token punctuation\">.</span>is_valid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            user<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'code'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'msg'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'创建用户成功'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'data'</span><span class=\"token punctuation\">:</span> user<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'code'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">201</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'msg'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'创建失败，请重试'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ul>\n<li><code>urls.py</code></li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>urls <span class=\"token keyword\">import</span> path</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> app01 <span class=\"token keyword\">import</span> views</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> rest_framework_jwt<span class=\"token punctuation\">.</span>views <span class=\"token keyword\">import</span> obtain_jwt_token</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>urlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    path<span class=\"token punctuation\">(</span><span class=\"token string\">'register/'</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>UserView<span class=\"token punctuation\">.</span>as_view<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><ul>\n<li>Postman 测试</li>\n</ul>\n<p><img data-src=\"1.png\" alt=\"\"></p>\n<h3 id=\"6登录及多形式登录\"><a class=\"markdownIt-Anchor\" href=\"#6登录及多形式登录\">#</a> 6. 登录及多形式登录</h3>\n<ul>\n<li><code>views.py</code></li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">jwt_response_payload_handler</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">,</span> user<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> request<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token string\">'authenticated'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'true'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> user<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token string\">'username'</span><span class=\"token punctuation\">:</span> user<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token string\">'phone'</span><span class=\"token punctuation\">:</span>user<span class=\"token punctuation\">.</span>phone<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token string\">'email'</span><span class=\"token punctuation\">:</span> user<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token string\">'token'</span><span class=\"token punctuation\">:</span> token<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 多形式登录</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Manylogin</span><span class=\"token punctuation\">(</span>ModelBackend<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\"># 重写 authenticate 方法</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">authenticate</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">,</span> username<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> password<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            user <span class=\"token operator\">=</span> User<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">(</span>username<span class=\"token operator\">=</span>username<span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> Q<span class=\"token punctuation\">(</span>phone<span class=\"token operator\">=</span>username<span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> Q<span class=\"token punctuation\">(</span>email<span class=\"token operator\">=</span>username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">if</span> user <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span> <span class=\"token keyword\">and</span> user<span class=\"token punctuation\">.</span>check_password<span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token keyword\">return</span> user</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span></pre></td></tr></table></figure><ul>\n<li><code>urls.py</code></li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>urls <span class=\"token keyword\">import</span> path</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> app01 <span class=\"token keyword\">import</span> views</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> rest_framework_jwt<span class=\"token punctuation\">.</span>views <span class=\"token keyword\">import</span> obtain_jwt_token</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>urlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    path<span class=\"token punctuation\">(</span><span class=\"token string\">'register/'</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>UserView<span class=\"token punctuation\">.</span>as_view<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    path<span class=\"token punctuation\">(</span><span class=\"token string\">'login/'</span><span class=\"token punctuation\">,</span> obtain_jwt_token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><ul>\n<li>Postman 测试登录</li>\n</ul>\n<p><img data-src=\"2.png\" alt=\"\"></p>\n<ul>\n<li>Postman 测试多形式登录</li>\n</ul>\n<p><img data-src=\"3.png\" alt=\"\"></p>\n<h3 id=\"7携带token访问所有用户\"><a class=\"markdownIt-Anchor\" href=\"#7携带token访问所有用户\">#</a> 7. 携带 token 访问所有用户</h3>\n<ul>\n<li><code>serializers.py</code></li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">UserInfoSerializers</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>ModelSerializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        model <span class=\"token operator\">=</span> User</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        fields <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'username'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'phone'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'email'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ul>\n<li><code>views.py</code></li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> rest_framework<span class=\"token punctuation\">.</span>views <span class=\"token keyword\">import</span> APIView</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> rest_framework<span class=\"token punctuation\">.</span>response <span class=\"token keyword\">import</span> Response</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>serializers <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span> <span class=\"token keyword\">import</span> models</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span> rest_framework<span class=\"token punctuation\">.</span>permissions <span class=\"token keyword\">import</span> IsAuthenticated</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">UserInfoView</span><span class=\"token punctuation\">(</span>APIView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\"># 认证用户才可访问</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    permission_classes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>IsAuthenticated<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        user <span class=\"token operator\">=</span> User<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        obj <span class=\"token operator\">=</span> UserInfoSerializers<span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">,</span> many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'code'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'msg'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'查询成功'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span> obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ul>\n<li><code>urls.py</code></li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>urls <span class=\"token keyword\">import</span> path</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> app01 <span class=\"token keyword\">import</span> views</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> rest_framework_jwt<span class=\"token punctuation\">.</span>views <span class=\"token keyword\">import</span> obtain_jwt_token</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>urlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    path<span class=\"token punctuation\">(</span><span class=\"token string\">'register/'</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>UserView<span class=\"token punctuation\">.</span>as_view<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    path<span class=\"token punctuation\">(</span><span class=\"token string\">'login/'</span><span class=\"token punctuation\">,</span> obtain_jwt_token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    path<span class=\"token punctuation\">(</span><span class=\"token string\">'get_user/'</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>UserInfoView<span class=\"token punctuation\">.</span>as_view<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><ul>\n<li>Postman 测试</li>\n</ul>\n<p><img data-src=\"4.png\" alt=\"\"></p>\n",
            "tags": [
                "JWT"
            ]
        },
        {
            "id": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/JWT/",
            "url": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/JWT/",
            "title": "JWT--JSON WEB TOKEN",
            "date_published": "2020-04-12T11:39:37.000Z",
            "content_html": "<h1 id=\"json-web-token\"><a class=\"markdownIt-Anchor\" href=\"#json-web-token\">#</a> Json Web Token</h1>\n<h3 id=\"什么是jwt\"><a class=\"markdownIt-Anchor\" href=\"#什么是jwt\">#</a> 什么是 JWT</h3>\n<blockquote>\n<p>Json web token (JWT), 是为了在网络应用环境间传递声明而执行的一种基于 JSON 的开放标准 (RFC 7519). 该 token 被设计为紧凑且安全的，特别适用于分布式站点的单点登录（SSO）场景。JWT 的声明一般被用来在身份提供者和服务提供者间传递被认证的用户身份信息，以便于从资源服务器获取资源，也可以增加一些额外的其它业务逻辑所必须的声明信息，该 token 也可直接被用于认证，也可被加密。</p>\n</blockquote>\n<ul>\n<li>说起 JWT，我们应该来谈一谈基于 token 的认证和传统的 session 认证的区别。</li>\n</ul>\n<h3 id=\"传统的session认证\"><a class=\"markdownIt-Anchor\" href=\"#传统的session认证\">#</a> 传统的 session 认证</h3>\n<p>我们知道，http 协议本身是一种无状态的协议，而这就意味着如果用户向我们的应用提供了用户名和密码来进行用户认证，那么下一次请求时，用户还要再一次进行用户认证才行，因为根据 http 协议，我们并不能知道是哪个用户发出的请求，所以为了让我们的应用能识别是哪个用户发出的请求，我们只能在服务器存储一份用户登录的信息，这份登录信息会在响应时传递给浏览器，告诉其保存为 cookie, 以便下次请求时发送给我们的应用，这样我们的应用就能识别请求来自哪个用户了，这就是传统的基于 session 认证。</p>\n<p>但是这种基于 session 的认证使应用本身很难得到扩展，随着不同客户端用户的增加，独立的服务器已无法承载更多的用户，而这时候基于 session 认证应用的问题就会暴露出来.</p>\n<h3 id=\"基于session认证所显露的问题\"><a class=\"markdownIt-Anchor\" href=\"#基于session认证所显露的问题\">#</a> 基于 session 认证所显露的问题</h3>\n<p><strong>Session</strong>: 每个用户经过我们的应用认证之后，我们的应用都要在服务端做一次记录，以方便用户下次请求的鉴别，通常而言 session 都是保存在内存中，而随着认证用户的增多，服务端的开销会明显增大。</p>\n<p><strong>扩展性</strong>：用户认证之后，服务端做认证记录，如果认证的记录被保存在内存中的话，这意味着用户下次请求还必须要请求在这台服务器上，这样才能拿到授权的资源，这样在分布式的应用上，相应的限制了负载均衡器的能力。这也意味着限制了应用的扩展能力。</p>\n<p><strong>CSRF</strong>: 因为是基于 cookie 来进行用户识别的，cookie 如果被截获，用户就会很容易受到跨站请求伪造的攻击。</p>\n<h3 id=\"jwt与session的差异\"><a class=\"markdownIt-Anchor\" href=\"#jwt与session的差异\">#</a> JWT 与 Session 的差异</h3>\n<ul>\n<li>\n<p>相同点是，它们都是存储用户信息；然而，Session 是在服务器端的，而 JWT 是在客户端的。</p>\n</li>\n<li>\n<p>Session 方式存储用户信息的最大问题在于要占用大量服务器内存，增加服务器的开销。而 JWT 方式将用户状态分散到了客户端中，可以明显减轻服务端的内存压力。</p>\n</li>\n<li>\n<p>Session 的状态是存储在服务器端，客户端只有 session id；而 Token 的状态是存储在客户端。</p>\n</li>\n</ul>\n<h3 id=\"基于token的鉴权机制\"><a class=\"markdownIt-Anchor\" href=\"#基于token的鉴权机制\">#</a> 基于 token 的鉴权机制</h3>\n<p>基于 token 的鉴权机制类似于 http 协议也是无状态的，它不需要在服务端去保留用户的认证信息或者会话信息。这就意味着基于 token 认证机制的应用不需要去考虑用户在哪一台服务器登录了，这就为应用的扩展提供了便利。</p>\n<p>流程上是这样的：</p>\n<ul>\n<li>用户使用用户名密码来请求服务器</li>\n<li>服务器进行验证用户的信息</li>\n<li>服务器通过验证发送给用户一个 token</li>\n<li>客户端存储 token，并在每次请求时附送上这个 token 值</li>\n<li>服务端验证 token 值，并返回数据</li>\n</ul>\n<h3 id=\"jwt长什么样\"><a class=\"markdownIt-Anchor\" href=\"#jwt长什么样\">#</a> JWT 长什么样</h3>\n<p>JWT 是由三段信息构成的，将这三段信息文本用 <code>.</code>  链接一起就构成了 Jwt 字符串</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9<span class=\"token punctuation\">.</span>eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ<span class=\"token punctuation\">.</span>cThIIoDvwdueQB468K5xDc5633seEFoqwxjF_xSJyQQ</pre></td></tr></table></figure><h3 id=\"jwt的构成\"><a class=\"markdownIt-Anchor\" href=\"#jwt的构成\">#</a> JWT 的构成</h3>\n<ul>\n<li>\n<p>第一部分我们称它为头部（header)</p>\n</li>\n<li>\n<p>第二部分我们称其为载荷（payload)</p>\n</li>\n<li>\n<p>第三部分是签证（signature)</p>\n</li>\n</ul>\n<h4 id=\"头部header\"><a class=\"markdownIt-Anchor\" href=\"#头部header\">#</a> 头部（header）</h4>\n<p>jwt 的头部承载两部分信息：</p>\n<ul>\n<li>声明类型，这里是 jwt</li>\n<li>声明加密的算法 通常直接使用 HMAC SHA256</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token string\">'typ'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'JWT'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token string\">'alg'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'HS256'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>然后进行 base64 加密（该加密是可以对称解密的), 构成了第一部分.</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9</pre></td></tr></table></figure><h4 id=\"载荷playload\"><a class=\"markdownIt-Anchor\" href=\"#载荷playload\">#</a> 载荷（playload）</h4>\n<p>载荷就是存放有效信息的地方，这些有效信息包含三个部分</p>\n<ul>\n<li>标准中注册的声明</li>\n<li>公共的声明</li>\n<li>私有的声明</li>\n</ul>\n<h5 id=\"标准中注册的声明-建议但不强制使用\"><a class=\"markdownIt-Anchor\" href=\"#标准中注册的声明-建议但不强制使用\">#</a> <strong>标准中注册的声明</strong> (建议但不强制使用) :</h5>\n<p><strong>iss</strong>: jwt 签发者</p>\n<p><strong>sub</strong>: jwt 所面向的用户</p>\n<p><strong>aud</strong>: 接收 jwt 的一方</p>\n<p><strong>exp</strong>: jwt 的过期时间，这个过期时间必须要大于签发时间</p>\n<p><strong>nbf</strong>: 定义在什么时间之前，该 jwt 都是不可用的.</p>\n<p><strong>iat</strong>: jwt 的签发时间</p>\n<p><strong>jti</strong>: jwt 的唯一身份标识，主要用来作为一次性 token, 从而回避重放攻击。</p>\n<h5 id=\"公共的声明\"><a class=\"markdownIt-Anchor\" href=\"#公共的声明\">#</a> 公共的声明：</h5>\n<p>公共的声明可以添加任何的信息，一般添加用户的相关信息或其他业务需要的必要信息。但不建议添加 <code>敏感信息</code> ，因为该部分在客户端可解密.</p>\n<h5 id=\"私有的声明\"><a class=\"markdownIt-Anchor\" href=\"#私有的声明\">#</a> <strong>私有的声明</strong> ：</h5>\n<p>私有声明是提供者和消费者所共同定义的声明，一般不建议存放敏感信息，因为 base64 是对称解密的，意味着该部分信息可以归类为明文信息。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token string\">\"sub\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"1234567890\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"John Doe\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token string\">\"iat\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1516239022</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>然后进行 base64 加密，得到 Jwt 的第二部分</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ</pre></td></tr></table></figure><h4 id=\"签证signature\"><a class=\"markdownIt-Anchor\" href=\"#签证signature\">#</a> 签证（signature）</h4>\n<p>jwt 的第三部分是一个签证信息，这个签证信息由三部分组成：</p>\n<ul>\n<li>header (base64 后的)</li>\n<li>payload (base64 后的)</li>\n<li>secret</li>\n</ul>\n<p>这个部分需要 base64 加密后的 header 和 base64 加密后的 payload 使用 <code>.</code>  连接组成的字符串，然后通过 header 中声明的加密方式进行加盐 <code>secret</code>  组合加密，然后就构成了 jwt 的第三部分。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>HMACSHA256<span class=\"token punctuation\">(</span>base64UrlEncode<span class=\"token punctuation\">(</span>header<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\".\"</span> <span class=\"token operator\">+</span> base64UrlEncode<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span>secret<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>将这三部分用 <code>.</code>  连接成一个完整的字符串，构成了最终的 jwt:</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9<span class=\"token punctuation\">.</span>eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ<span class=\"token punctuation\">.</span>cThIIoDvwdueQB468K5xDc5633seEFoqwxjF_xSJyQQ</pre></td></tr></table></figure><p><code>注意：secret是保存在服务器端的，jwt的签发生成也是在服务器端的，secret就是用来进行jwt的签发和jwt的验证，所以，它就是你服务端的私钥，在任何场景都不应该流露出去。一旦客户端得知这个secret, 那就意味着客户端是可以自我签发jwt了。</code></p>\n<h3 id=\"下列场景中使用json-web-token是很有用的\"><a class=\"markdownIt-Anchor\" href=\"#下列场景中使用json-web-token是很有用的\">#</a> 下列场景中使用 JSON Web Token 是很有用的：</h3>\n<ul>\n<li>Authorization (授权) : 这是使用 JWT 的最常见场景。一旦用户登录，后续每个请求都将包含 JWT，允许用户访问该令牌允许的路由、服务和资源。单点登录是现在广泛使用的 JWT 的一个特性，因为它的开销很小，并且可以轻松地跨域使用。</li>\n<li>Information Exchange (信息交换) : 对于安全的在各方之间传输信息而言，JSON Web Tokens 无疑是一种很好的方式。因为 JWT 可以被签名，例如，用公钥 / 私钥对，你可以确定发送人就是它们所说的那个人。另外，由于签名是使用头和有效负载计算的，您还可以验证内容没有被篡改。</li>\n</ul>\n<h3 id=\"jwt与oauth20的区别\"><a class=\"markdownIt-Anchor\" href=\"#jwt与oauth20的区别\">#</a> JWT 与 OAuth2.0 的区别</h3>\n<ul>\n<li>OAuth2.0 是一种授权框架 ，JWT 是一种认证协议</li>\n<li>无论使用哪种方式切记用 HTTPS 来保证数据的安全性</li>\n<li>OAuth2.0 用在使用第三方账号登录的情况 (比如使用 weibo, qq, github 登录某个 app)，而 JWT 是用在前后端分离，需要简单的对后台 API 进行保护时使用。</li>\n</ul>\n<h3 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h3>\n<h4 id=\"优点\"><a class=\"markdownIt-Anchor\" href=\"#优点\">#</a> 优点</h4>\n<ul>\n<li>因为 json 的通用性，所以 JWT 是可以进行跨语言支持的，像 Python,Java,JavaScript,PHP 等很多语言都可以使用。</li>\n<li>因为有了 payload 部分，所以 JWT 可以在自身存储一些其他业务逻辑所必要的非敏感信息。</li>\n<li>便于传输，jwt 的构成非常简单，字节占用很小，所以它是非常便于传输的。</li>\n<li>它不需要在服务端保存会话信息，所以它易于应用的扩展</li>\n</ul>\n<h4 id=\"安全相关\"><a class=\"markdownIt-Anchor\" href=\"#安全相关\">#</a> 安全相关</h4>\n<ul>\n<li>不应该在 jwt 的 payload 部分存放敏感信息，因为该部分是客户端可解密的部分。</li>\n<li>保护好 secret 私钥，该私钥非常重要。</li>\n</ul>\n",
            "tags": [
                "jwt"
            ]
        },
        {
            "id": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/OAuth2-0%E7%9A%84%E5%9B%9B%E7%A7%8D%E6%8E%88%E6%9D%83%E6%A8%A1%E5%BC%8F/",
            "url": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/OAuth2-0%E7%9A%84%E5%9B%9B%E7%A7%8D%E6%8E%88%E6%9D%83%E6%A8%A1%E5%BC%8F/",
            "title": "OAuth2.0的四种授权模式",
            "date_published": "2020-04-08T02:40:53.000Z",
            "content_html": "<h1 id=\"oauth20-为何物\"><a class=\"markdownIt-Anchor\" href=\"#oauth20-为何物\">#</a> <strong>OAuth2.0 为何物</strong></h1>\n<p><code>OAuth</code>  简单理解就是一种授权机制，它是在客户端和资源所有者之间的授权层，用来分离两种不同的角色。在资源所有者同意并向客户端颁发令牌后，客户端携带令牌可以访问资源所有者的资源。<br>\n <code>OAuth2.0</code>  是 <code>OAuth</code>  协议的一个版本，有 <code>2.0</code>  版本那就有 <code>1.0</code>  版本，有意思的是 <code>OAuth2.0</code>  却不向下兼容 <code>OAuth1.0</code>  ，相当于废弃了 <code>1.0</code>  版本。</p>\n<p><strong>举个小栗子解释一下什么是 OAuth 授权？</strong><br>\n在家肝文章饿了定了一个外卖，外卖小哥 30 秒火速到达了我家楼下，奈何有门禁进不来，可以输入密码进入，但出于安全的考虑我并不想告诉他密码。<br>\n此时外卖小哥看到门禁有一个高级按钮 “ <code>一键获取授权</code> ”，只要我这边同意，他会获取到一个有效期 2 小时的令牌（ <code>token</code> ）正常出入。</p>\n<p>令牌（ <code>token</code> ）和  <code>密码</code>  的作用虽然相似都可以进入系统，但还有点不同。 <code>token</code>  拥有权限范围，有时效性的，到期自动失效，而且无效修改</p>\n<p><code>OAuth2.0</code>  的授权简单理解其实就是获取令牌（ <code>token</code> ）的过程， <code>OAuth</code>  协议定义了四种获得令牌的授权方式（ <code>authorization grant</code>  ）如下：</p>\n<ul>\n<li>隐式授权模式（Implicit Grant）</li>\n<li>授权码授权模式（Authorization code Grant）</li>\n<li>密码模式（Resource Owner Password Credentials Grant）</li>\n<li>客户端凭证模式（Client Credentials Grant）</li>\n</ul>\n<p>但值得注意的是，不管我们使用哪一种授权方式，在三方应用申请令牌之前，都必须在系统中去申请身份唯一标识：客户端 ID（ <code>client ID</code> ）和 客户端密钥（ <code>client secret</code> ）。这样做可以保证  <code>token</code>  不被恶意使用。<br>\n下面我们会分析每种授权方式的原理，在进入正题前，先了解  <code>OAuth2.0</code>  授权过程中几个重要的参数：</p>\n<ul>\n<li><code>response_type</code> ：code 表示要求返回授权码，token 表示直接返回令牌</li>\n<li><code>client_id</code> ：客户端身份标识</li>\n<li><code>client_secret</code> ：客户端密钥</li>\n<li><code>redirect_uri</code> ：重定向地址</li>\n<li><code>scope</code> ：表示授权的范围， <code>read</code>  只读权限， <code>all</code>  读写权限</li>\n<li><code>grant_type</code> ：表示授权的方式， <code>AUTHORIZATION_CODE</code> （授权码）、 <code>password</code> （密码）、 <code>client_credentials</code> （凭证式）、 <code>refresh_token</code>  更新令牌</li>\n<li><code>state</code> ：应用程序传递的一个随机数，用来防止 <code>CSRF</code>  攻击。</li>\n</ul>\n<hr>\n<h1 id=\"1隐式授权模式implicit-grant\"><a class=\"markdownIt-Anchor\" href=\"#1隐式授权模式implicit-grant\">#</a> 1. 隐式授权模式（Implicit Grant）</h1>\n<p><img data-src=\"1.png\" alt=\"\"></p>\n<ul>\n<li>第一步：用户访问页面时，重定向到认证服务器。</li>\n<li>第二步：认证服务器给用户一个认证页面，等待用户授权。</li>\n<li>第三步：用户授权，认证服务器想应用页面返回 Token</li>\n<li>第四步：验证 Token，访问真正的资源页面</li>\n</ul>\n<p><img data-src=\"2.png\" alt=\"\"></p>\n<h1 id=\"2授权码授权模式authorization-code-grant\"><a class=\"markdownIt-Anchor\" href=\"#2授权码授权模式authorization-code-grant\">#</a> 2. 授权码授权模式（Authorization code Grant）</h1>\n<p><img data-src=\"3.png\" alt=\"\"></p>\n<ul>\n<li>第一步：用户访问页面</li>\n<li>第二步：访问的页面将请求重定向到认证服务器</li>\n<li>第三步：认证服务器向用户展示授权页面，等待用户授权</li>\n<li>第四步：用户授权，认证服务器生成一个 code 和带上 client_id 发送给应用服务器，然后，应用服务器拿到 code，并用 client_id 去后台查询对应的 client_secret</li>\n<li>第五步：将 code、client_id、client_secret 传给认证服务器换取 access_token 和 refresh_token</li>\n<li>第六步：将 access_token 和 refresh_token 传给应用服务器</li>\n<li>第七步：验证 token，访问真正的资源页面</li>\n</ul>\n<p><img data-src=\"4.png\" alt=\"\"></p>\n<h1 id=\"3密码模式resource-owner-password-credentials-grant\"><a class=\"markdownIt-Anchor\" href=\"#3密码模式resource-owner-password-credentials-grant\">#</a> 3. 密码模式（Resource Owner Password Credentials Grant）</h1>\n<p><img data-src=\"5.png\" alt=\"\"></p>\n<ul>\n<li>第一步：用户访问用页面时，输入第三方认证所需要的信息 (QQ / 微信账号密码)</li>\n<li>第二步：应用页面那种这个信息去认证服务器授权</li>\n<li>第三步：认证服务器授权通过，拿到 token，访问真正的资源页面</li>\n</ul>\n<p><code>优点</code> ：不需要多次请求转发，额外开销，同时可以获取更多的用户信息。(都拿到账号密码了)</p>\n<p><code>缺点</code> ：局限性，认证服务器和应用方必须有超高的信赖。(比如亲兄弟？)</p>\n<p><code>应用场景</code> ：自家公司搭建的认证服务器</p>\n<h1 id=\"4客户端凭证模式client-credentials-grant\"><a class=\"markdownIt-Anchor\" href=\"#4客户端凭证模式client-credentials-grant\">#</a> 4. 客户端凭证模式（Client Credentials Grant）</h1>\n<p><img data-src=\"6.png\" alt=\"\"></p>\n<ul>\n<li>第一步：用户访问应用客户端</li>\n<li>第二步：通过客户端定义的验证方法，拿到 token，无需授权</li>\n<li>第三步：访问资源服务器 A</li>\n<li>第四步：拿到一次 token 就可以畅通无阻的访问其他的资源页面。</li>\n</ul>\n<p><strong>这是一种最简单的模式，只要 client 请求，我们就将 AccessToken 发送给它。这种模式是最方便但最不安全的模式。因此这就要求我们对 client 完全的信任，而 client 本身也是安全的。</strong></p>\n<p><strong>因此这种模式一般用来提供给我们完全信任的服务器端服务。在这个过程中不需要用户的参与。</strong></p>\n",
            "tags": [
                "OAuth2.0"
            ]
        },
        {
            "id": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/RESTfulAPI%E8%A7%84%E8%8C%83/",
            "url": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/RESTfulAPI%E8%A7%84%E8%8C%83/",
            "title": "RESTful API设计规范",
            "date_published": "2020-04-02T10:50:49.000Z",
            "content_html": "<h1 id=\"概述\"><a class=\"markdownIt-Anchor\" href=\"#概述\">#</a> 概述</h1>\n<blockquote>\n<p>RESTful 是目前最流行的 API 设计规范，用于 Web 数据接口的设计。</p>\n<p>核心是面向资源：对象的单个实例。 例如，一只动物。它可以是一段文本、一张图片、一首歌曲、一种服务，总之就是一个具体的实在。你可以用一个 URL（统一资源定位符）指向它，每种资源对应一个特定的 URL。要获取这个资源，访问它的 URL 就可以，因此 URL 就成了每一个资源的地址或独一无二的识别符。</p>\n<p>主要有请求方式、状态码、URL 规范、传参规范</p>\n</blockquote>\n<h1 id=\"请求方式\"><a class=\"markdownIt-Anchor\" href=\"#请求方式\">#</a> 请求方式</h1>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>GET   （SELECT）：从服务器取出资源（一项或多项）</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>POST  （CREATE）：在服务器新建一个资源</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>PUT   （UPDATE）：在服务器更新资源（客户端提供改变后的完整资源）</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>PATCH （UPDATE）：在服务器更新资源（客户端提供改变的属性）</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>DELETE（DELETE）：从服务器删除资源</pre></td></tr></table></figure><ul>\n<li>还有两个不常用的</li>\n</ul>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>HEAD   ：获取资源的元数据</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>OPTIONS：获取信息，关于资源的哪些属性是客户端可以改变的</pre></td></tr></table></figure><h1 id=\"状态码\"><a class=\"markdownIt-Anchor\" href=\"#状态码\">#</a> 状态码</h1>\n<blockquote>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>1xx 信息，请求收到，继续处理。范围保留用于底层HTTP的东西，你很可能永远也用不到。</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>2xx 成功，行为被成功地接受、理解和采纳</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>3xx 重定向，为了完成请求，必须进一步执行的动作</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>4xx 客户端错误，请求包含语法错误或者请求无法实现。范围保留用于响应客户端做出的错误，例如。他们提供不良数据或要求不存在的东西。这些请求应该是幂等的，而不是更改服务器的状态。</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>5xx 范围的状态码是保留给服务器端错误用的。这些错误常常是从底层的函数抛出来的，甚至</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>开发人员也通常没法处理，发送这类状态码的目的以确保客户端获得某种响应。</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>当收到5xx响应时，客户端不可能知道服务器的状态，所以这类状态码是要尽可能的避免。</pre></td></tr></table></figure></blockquote>\n<ul>\n<li>以下是常见状态码</li>\n</ul>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>200：服务器成功返回用户请求的数据，该操作是幂等的（Idempotent）。</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>201：用户新建或修改数据成功。</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>202：表示一个请求已经进入后台排队（异步任务）</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>204：用户删除数据成功。</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>205：重置内容。服务器处理成功，用户端（例如：浏览器）应重置文档视图。可通过此返回码清除浏览器的表单域</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>301：永久重定向，请求的资源已被永久的移动到新URL。</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>302：临时重定向。</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>400：用户发出的请求有错误，服务器没有进行新建或修改数据的操作，该操作是幂等的。</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>401：表示用户没有权限（令牌、用户名、密码错误）。</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>403：表示用户得到授权（与401错误相对），但是访问是被禁止的。</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>404：用户发出的请求针对的是不存在的记录，服务器没有进行操作，该操作是幂等的。</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>406：用户请求的格式不可得（比如用户请求JSON格式，但是只有XML格式）。</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>410：用户请求的资源被永久删除，且不会再得到的。</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>422：当创建一个对象时，发生一个验证错误。</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>500：服务器发生错误，用户将无法判断发出的请求是否成功。</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>501：服务器不支持请求的功能，无法完成请求</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>502：错误的网关，该服务器在充当网关或代理的同时，从尝试访问该请求的上游服务器接收到无效响应。</pre></td></tr></table></figure><h1 id=\"url\"><a class=\"markdownIt-Anchor\" href=\"#url\">#</a> URL</h1>\n<blockquote>\n<p>URL 结尾不应该包含斜杠 “/”</p>\n<p>正斜杠分隔符”/“必须用来指示层级关系</p>\n<p>使用连字符”-“来提高 URL 的可读性，而不是使用下划线”_”</p>\n<p>URL 路径中首选小写字母</p>\n<p>URL 路径使用名词或复数</p>\n</blockquote>\n<ol>\n<li>版本规范</li>\n</ol>\n<ul>\n<li>应该将 API 的版本号放入 URL。</li>\n<li>另一种做法是，将版本号放在 HTTP 头信息中，但不如放入 URL 方便和直观。</li>\n</ul>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>https://api.example.com/v1</pre></td></tr></table></figure><ol start=\"2\">\n<li>路径视网络上任何东西都是资源，比如一个动物园</li>\n</ol>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>https://api.example.com/v1/zoos</pre></td></tr></table></figure><ol start=\"3\">\n<li>完成某种操作</li>\n</ol>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>https://api.example.com/v1/zoos\t\tGET   ：列出所有动物园</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>https://api.example.com/v1/zoos\t\tPOST  ：新建一个动物园</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>https://api.example.com/v1/zoos/ID\t\tGET   ：获取某个指定动物园的信息</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>https://api.example.com/v1/zoos/ID\t\tPUT   ：更新某个指定动物园的信息（提供该动物园的全部信息）</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>https://api.example.com/v1/zoos/ID\t\tPATCH ：更新某个指定动物园的信息（提供该动物园的部分信息）</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>https://api.example.com/v1/zoos/ID\t\tDELETE：删除某个动物园</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>https://api.example.com/v1/zoos/ID/animals\tGET   ：列出某个指定动物园的所有动物</pre></td></tr></table></figure><h1 id=\"传参规范过滤信息\"><a class=\"markdownIt-Anchor\" href=\"#传参规范过滤信息\">#</a> 传参规范 (过滤信息)</h1>\n<blockquote>\n<p>如果记录数量很多，服务器不可能都将它们返回给用户。API 应该提供参数，过滤返回结果。</p>\n<p>参数的设计允许存在冗余，即允许 API 路径和 URL 参数偶尔有重复。比如，</p>\n<p>GET /zoo/ID/animals 与 GET /animals?zoo_id=ID 的含义是相同的。</p>\n</blockquote>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>https://api.example.com/v1/zoos?limit=10：指定返回记录的数量</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>https://api.example.com/v1/zoos?offset=10：指定返回记录的开始位置</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>https://api.example.com/v1/zoos?page=2&amp;per_page=100：指定第几页，以及每页的记录数</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>https://api.example.com/v1/zoos?sortby=name&amp;order=asc：指定返回结果按照哪个属性排序，以及排序顺序</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>https://api.example.com/v1/zoos?animal_type_id=1：指定筛选条件</pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "http://example.com/Django%E6%A1%86%E6%9E%B6/Django-%E6%95%B0%E6%8D%AE%E5%BA%93ORM%E6%93%8D%E4%BD%9C/",
            "url": "http://example.com/Django%E6%A1%86%E6%9E%B6/Django-%E6%95%B0%E6%8D%AE%E5%BA%93ORM%E6%93%8D%E4%BD%9C/",
            "title": "Django--数据库ORM操作",
            "date_published": "2020-03-20T09:07:42.000Z",
            "content_html": "<h1 id=\"创建单表模型类\"><a class=\"markdownIt-Anchor\" href=\"#创建单表模型类\">#</a> 创建单表模型类</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Goods</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    goods_name <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    goods_price <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>DecimalField<span class=\"token punctuation\">(</span>max_digits<span class=\"token operator\">=</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span>decimal_places<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    goods_num <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        db_table <span class=\"token operator\">=</span> <span class=\"token string\">'tb_goods'</span></pre></td></tr></table></figure><h1 id=\"orm基本操作\"><a class=\"markdownIt-Anchor\" href=\"#orm基本操作\">#</a> ORM 基本操作</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ORMView</span><span class=\"token punctuation\">(</span>APIView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\">#   单一查询，如果结果不存在报错</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        goodsobj <span class=\"token operator\">=</span> Goods<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>goods_price<span class=\"token operator\">=</span><span class=\"token number\">6.66</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        obj <span class=\"token operator\">=</span> GoodsSerializers<span class=\"token punctuation\">(</span>goodsobj<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">#   查询不包含 id=3 的数据</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        goodsobj <span class=\"token operator\">=</span> Goods<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>exclude<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        obj <span class=\"token operator\">=</span> GoodsSerializers<span class=\"token punctuation\">(</span>goodsobj<span class=\"token punctuation\">,</span> many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\">#   查询结果的数量</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        goodsobj <span class=\"token operator\">=</span> Goods<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>goodsobj<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\">#   聚合函数　　使用 aggregate () 过滤器调用聚合函数。</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token comment\">#   聚合函数包括：Avg 平均，Count 数量，Max 最大，Min 最小，Sum 求和      </span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token comment\">#   需要导包    from django.db.models import *</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        goodsobj <span class=\"token operator\">=</span> Goods<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>aggregate<span class=\"token punctuation\">(</span>Sum<span class=\"token punctuation\">(</span><span class=\"token string\">'goods_num'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>goodsobj<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token comment\"># obj = GoodsSerializers(goodsobj, many=True)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'data'</span><span class=\"token punctuation\">:</span><span class=\"token string\">''</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token comment\">#   比较查询　　字段名__lt：小于    字段名__lte：小于等于</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        goodsobj <span class=\"token operator\">=</span> Goods<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>id__lt<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        obj <span class=\"token operator\">=</span> GoodsSerializers<span class=\"token punctuation\">(</span>goodsobj<span class=\"token punctuation\">,</span> many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token comment\">#   比较查询　　字段名__gt：大于    字段名__gte：大于等于</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        goodsobj <span class=\"token operator\">=</span> Goods<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>id__gte<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        obj <span class=\"token operator\">=</span> GoodsSerializers<span class=\"token punctuation\">(</span>goodsobj<span class=\"token punctuation\">,</span> many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token comment\">#  　空查询　　字段名__isnull</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        goodsobj <span class=\"token operator\">=</span> Goods<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>goods_name__isnull<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        obj <span class=\"token operator\">=</span> GoodsSerializers<span class=\"token punctuation\">(</span>goodsobj<span class=\"token punctuation\">,</span> many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token comment\">#    模糊查询　字段名__endswith　以　莓　结尾的数据</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        goodsobj <span class=\"token operator\">=</span> Goods<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>goods_name__endswith<span class=\"token operator\">=</span><span class=\"token string\">'莓'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        obj <span class=\"token operator\">=</span> GoodsSerializers<span class=\"token punctuation\">(</span>goodsobj<span class=\"token punctuation\">,</span> many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token comment\">#    模糊查询　字段名__tartswith　以　苹　开头的数据</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        goodsobj <span class=\"token operator\">=</span> Goods<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>goods_name__startswith<span class=\"token operator\">=</span><span class=\"token string\">'苹'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        obj <span class=\"token operator\">=</span> GoodsSerializers<span class=\"token punctuation\">(</span>goodsobj<span class=\"token punctuation\">,</span>many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token comment\">#    模糊查询　字段名__contains　包含　果　的的数据</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        goodsobj <span class=\"token operator\">=</span> Goods<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>goods_name__contains<span class=\"token operator\">=</span><span class=\"token string\">'果'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        obj <span class=\"token operator\">=</span> GoodsSerializers<span class=\"token punctuation\">(</span>goodsobj<span class=\"token punctuation\">,</span>many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token comment\">#    范围查询:  in  只查询列表中的具体值</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        goodsobj <span class=\"token operator\">=</span> Goods<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>goods_price__in<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span><span class=\"token number\">6.66</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        obj <span class=\"token operator\">=</span> GoodsSerializers<span class=\"token punctuation\">(</span>goodsobj<span class=\"token punctuation\">,</span>many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token comment\">#    范围查询:  range １～２０之间</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        goodsobj <span class=\"token operator\">=</span> Goods<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>goods_price__range<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        obj <span class=\"token operator\">=</span> GoodsSerializers<span class=\"token punctuation\">(</span>goodsobj<span class=\"token punctuation\">,</span>many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token comment\">#    排序查询：  order_by 降序只需在字段名前加上 “-”</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        goodsobj <span class=\"token operator\">=</span> Goods<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>order_by<span class=\"token punctuation\">(</span><span class=\"token string\">'-goods_num'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        obj <span class=\"token operator\">=</span> GoodsSerializers<span class=\"token punctuation\">(</span>goodsobj<span class=\"token punctuation\">,</span> many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        <span class=\"token comment\">#    F 方法：比较两个字段对象之间的关系用 F 对象，F 方法可以进行简单运算　</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        <span class=\"token comment\">#    查询价格　大于等于　库存的对象</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        goodsobj <span class=\"token operator\">=</span> Goods<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>goods_price__gte<span class=\"token operator\">=</span>F<span class=\"token punctuation\">(</span><span class=\"token string\">'goods_num'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>        obj <span class=\"token operator\">=</span> GoodsSerializers<span class=\"token punctuation\">(</span>goodsobj<span class=\"token punctuation\">,</span> many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        <span class=\"token comment\">#    Q 方法：对对象进行复杂查询，并支持 & amp;（and）,|（or），~（not）操作符</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        <span class=\"token comment\">#    查询价格大于等于 15 的数据　或库存大于等于 10 的数据</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        goodsobj <span class=\"token operator\">=</span> Goods<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">(</span>goods_price__gte<span class=\"token operator\">=</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> Q<span class=\"token punctuation\">(</span>goods_num__gte<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        obj <span class=\"token operator\">=</span> GoodsSerializers<span class=\"token punctuation\">(</span>goodsobj<span class=\"token punctuation\">,</span> many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"创建一对多多对多模型类\"><a class=\"markdownIt-Anchor\" href=\"#创建一对多多对多模型类\">#</a> 创建一对多，多对多模型类</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 电影</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Movie</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    movie_name <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        db_table <span class=\"token operator\">=</span> <span class=\"token string\">'tb_movie'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 角色</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Role</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    role_name <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    role_price <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>DecimalField<span class=\"token punctuation\">(</span>max_digits<span class=\"token operator\">=</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span> decimal_places<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    role_desc <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        db_table <span class=\"token operator\">=</span> <span class=\"token string\">'tb_role'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># 演员</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Actor</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    name <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    address <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> blank<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    age <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>blank<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    phone <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> blank<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    movie <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>ForeignKey<span class=\"token punctuation\">(</span>Movie<span class=\"token punctuation\">,</span> on_delete<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>CASCADE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    role <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>ManyToManyField<span class=\"token punctuation\">(</span>Role<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        db_table <span class=\"token operator\">=</span> <span class=\"token string\">'tb_actor'</span></pre></td></tr></table></figure><h1 id=\"一对多的正-反查询\"><a class=\"markdownIt-Anchor\" href=\"#一对多的正-反查询\">#</a> 一对多的正、反查询</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ORMView</span><span class=\"token punctuation\">(</span>APIView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\">#   一对多　正向查找      对象．模型名．字段</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        actorobj <span class=\"token operator\">=</span> Actor<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        movieo <span class=\"token operator\">=</span> actorobj<span class=\"token punctuation\">.</span>movie<span class=\"token punctuation\">.</span>movie_name</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>movieo<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token string\">'ok'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">#   一对多　反向查找      对象．模型名_set</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">#  除了可以使用模型名_set，还有一种是在建立模型类的时候使用 related_name 来指定变量名。</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        movieobj <span class=\"token operator\">=</span> Movie<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        actorobj <span class=\"token operator\">=</span> movieobj<span class=\"token punctuation\">.</span>actor_set<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        obj <span class=\"token operator\">=</span> ActorSerializers<span class=\"token punctuation\">(</span>actorobj<span class=\"token punctuation\">,</span>many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"多对多表操作\"><a class=\"markdownIt-Anchor\" href=\"#多对多表操作\">#</a> 多对多表操作</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ORMview2</span><span class=\"token punctuation\">(</span>APIView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">post</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\"># 多对多添加</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\"># 方法一：在建立 manytomany 的 models 里添加数据，（一条，一个对象）</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        actor <span class=\"token operator\">=</span> Actor<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        role <span class=\"token operator\">=</span> Role<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        data <span class=\"token operator\">=</span> actor<span class=\"token punctuation\">.</span>role<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>role<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token string\">'ok'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\"># 方法二：在未建立 manytomany 的 models 里添加数据，（一条，一个对象）</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        actor <span class=\"token operator\">=</span> Actor<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span><span class=\"token string\">'张译'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        role <span class=\"token operator\">=</span> Role<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        data <span class=\"token operator\">=</span> role<span class=\"token punctuation\">.</span>actor_set<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>actor<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token string\">'ok2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token comment\"># 多对多更新</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token comment\"># 方法一：在建立 manytomany 的 models 里修改数据，参数只能是可迭代对象</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        actorobj <span class=\"token operator\">=</span> Actor<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        roleobj <span class=\"token operator\">=</span> Role<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        actorobj<span class=\"token punctuation\">.</span>role<span class=\"token punctuation\">.</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>roleobj<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token string\">'ok'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token comment\"># 方法二：在未建立 manytomany 的 models 里修改数据，参数只能是可迭代对象</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        actorobj <span class=\"token operator\">=</span> Actor<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        roleobj <span class=\"token operator\">=</span> Role<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        roleobj<span class=\"token punctuation\">.</span>actor_set<span class=\"token punctuation\">.</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>actorobj<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token string\">'ok2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token comment\"># 方法一：在建立 manytomany 的 models 里删除数据，（一条，一个对象）</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        autorobj <span class=\"token operator\">=</span> Actor<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        roleobj <span class=\"token operator\">=</span>Role<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        autorobj<span class=\"token punctuation\">.</span>role<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>roleobj<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token string\">'ok'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token comment\"># 方法二：在未建立 manytomany 的 models 里删除数据，（一条，可迭代对象）</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        autorobj <span class=\"token operator\">=</span> Actor<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        roleobj <span class=\"token operator\">=</span> Role<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        roleobj<span class=\"token punctuation\">.</span>actor_set<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>autorobj<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token string\">'ok2'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "ORM"
            ]
        },
        {
            "id": "http://example.com/Django%E6%A1%86%E6%9E%B6/Django-%E5%BA%8F%E5%88%97%E5%8C%96%E5%99%A8/",
            "url": "http://example.com/Django%E6%A1%86%E6%9E%B6/Django-%E5%BA%8F%E5%88%97%E5%8C%96%E5%99%A8/",
            "title": "序列化器",
            "date_published": "2020-03-10T12:10:28.000Z",
            "content_html": "<h1 id=\"1-序列化\"><a class=\"markdownIt-Anchor\" href=\"#1-序列化\">#</a> 1. 序列化</h1>\n<hr>\n<p>DRF 的核心 就是 前后端分离的核心</p>\n<p><strong>前后端分离开发的核心：</strong><br>\n将模型转换为 json 称之为 序列化<br>\n将 json 转换成模型 称之为 反序列化</p>\n<h3 id=\"11-序列化器的字段\"><a class=\"markdownIt-Anchor\" href=\"#11-序列化器的字段\">#</a> 1.1 序列化器的字段</h3>\n<hr>\n<p>Serializer 序列化器<br>\n为了得到模型里的字段，序列化器中的字段应与模型类中的字段名一致</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">''' serializers.py '''</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookInfoSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>Serializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\"># read_only=True 只能读 不能修改</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>read_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        name <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'书籍名'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        pub_date <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>DataField<span class=\"token punctuation\">(</span>label<span class=\"token operator\">=</span><span class=\"token string\">'发布日期'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        readcount <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        is_delete <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>BooleanField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        image <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>ImageField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"12-序列化\"><a class=\"markdownIt-Anchor\" href=\"#12-序列化\">#</a> 1.2 序列化</h3>\n<hr>\n<p>创建序列器</p>\n<p>序列化器的第一个参数：instance 用于序列化操作</p>\n<p>序列化器的第二个参数：data 用于反序列化操作</p>\n<p>除了 instance 和 data 参数外，在构造 Serializer 对象时，还可通过 context 参数额外添加数据，如</p>\n<blockquote>\n<p>serializer = AccountSerializer(account, context={‘request’: request})</p>\n</blockquote>\n<p>通过 context 参数附加的数据，可以通过 Serializer 对象的 context 属性获取。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">''' views.py '''</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    book <span class=\"token operator\">=</span> BookInfo<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    s <span class=\"token operator\">=</span> BookInfoSerializers<span class=\"token punctuation\">(</span>instance<span class=\"token operator\">=</span>book<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\"># 我们是通过 序列化器的 data 属性来获取 模型转换为字典的数据</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    s<span class=\"token punctuation\">.</span>data</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\"># 传递多个数据</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\"># 应用： 查询所有书籍列表</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    books <span class=\"token operator\">=</span> BookInfo<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\"># 创建序列化器，将所有书籍信息传递给序列化器</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\"># books = [BookInfo,BookInfo,...] 对象列表</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    s <span class=\"token operator\">=</span> BookInfoSerializers<span class=\"token punctuation\">(</span>books<span class=\"token punctuation\">,</span>many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    person <span class=\"token operator\">=</span> PeopleInfo<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\"># 序列化器初始化</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    s <span class=\"token operator\">=</span> PeopleInfoSerializer<span class=\"token punctuation\">(</span>instance<span class=\"token operator\">=</span>person<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"13-关联序列化器的操作\"><a class=\"markdownIt-Anchor\" href=\"#13-关联序列化器的操作\">#</a> 1.3 关联序列化器的操作</h3>\n<hr>\n<p>对于关联字段，可以采用以下几种方式：</p>\n<p>1） PrimaryKeyRelatedField</p>\n<p>2） StringRelatedField</p>\n<p>3） 使用关联对象的序列化器</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">######### 关联序列化器 ##########################</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">PeopleInfoSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>Serializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"英雄数据序列化器\"\"\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        GENDER_CHOICES <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'male'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'female'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>label<span class=\"token operator\">=</span><span class=\"token string\">'ID'</span><span class=\"token punctuation\">,</span> read_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        name <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>label<span class=\"token operator\">=</span><span class=\"token string\">'名字'</span><span class=\"token punctuation\">,</span> max_length<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        gender <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>ChoiceField<span class=\"token punctuation\">(</span>choices<span class=\"token operator\">=</span>GENDER_CHOICES<span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">'性别'</span><span class=\"token punctuation\">,</span> required<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        description <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>label<span class=\"token operator\">=</span><span class=\"token string\">'描述信息'</span><span class=\"token punctuation\">,</span> max_length<span class=\"token operator\">=</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> required<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> allow_null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token triple-quoted-string string\">''' PrimaryKeyRelatedField '''</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\"># 设置关联外键的时候，要将 read_only=True</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\"># 包含 read_only=True 参数时，该字段将不能用作反序列化使用</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\"># book = serializers.PrimaryKeyRelatedField (read_only=True,label=' 外键 ')</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token comment\"># 或者</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\"># 包含 queryset 参数时，将被用作反序列化时参数校验使用</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token comment\"># queryset 将关联模型的所有数据传递给这个属性就可以</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        book <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>PrimaryKeyRelatedField<span class=\"token punctuation\">(</span>label<span class=\"token operator\">=</span><span class=\"token string\">'外键'</span><span class=\"token punctuation\">,</span>queryset<span class=\"token operator\">=</span>BookInfo<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token triple-quoted-string string\">'''StringRelatedField'''</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token comment\"># 现在通过  PrimaryKeyRelatedField 得到的是一个  外键的一个值  2</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token comment\"># 接下来通过 一个设置 来获取 书籍的名字</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token comment\"># StringRelatedField 可以获取关联模型中的 __str_ 里的字符串</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        book <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>StringRelatedField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token triple-quoted-string string\">''' 使用关联对象的序列化器  拿到所有数据 '''</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        book <span class=\"token operator\">=</span> BookInfoSerializer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"14-关联查询\"><a class=\"markdownIt-Anchor\" href=\"#14-关联查询\">#</a> 1.4 关联查询</h3>\n<hr>\n<p>关联模型类名小写_set 作为字段名</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">''' serializers.py '''</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookInfoSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>Serializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>read_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        name <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharFIeld<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'书籍名'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        pub_date <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>DataField<span class=\"token punctuation\">(</span>label<span class=\"token operator\">=</span><span class=\"token string\">'发布日期'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        readcount <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        is_delete <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>BooleanField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        iamge <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>ImageField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\"># 书籍和人物的关系是 1：n   ===> many=True</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        peopleinfo_set <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>PrimaryKeyRelatedField<span class=\"token punctuation\">(</span>read_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>name</pre></td></tr></table></figure><h1 id=\"2-反序列化\"><a class=\"markdownIt-Anchor\" href=\"#2-反序列化\">#</a> 2. 反序列化</h1>\n<hr>\n<p>反序列化 分为两个：</p>\n<ul>\n<li>\n<p>数据校验</p>\n</li>\n<li>\n<p>数据入库</p>\n</li>\n</ul>\n<h3 id=\"21-数据校验\"><a class=\"markdownIt-Anchor\" href=\"#21-数据校验\">#</a> 2.1 数据校验</h3>\n<hr>\n<p>使用序列化器进行反序列化时，需要对数据进行验证后，才能获取验证成功的数据或保存成模型类对象。</p>\n<p>在获取反序列化的数据前，必须调用 is_valid () 方法进行验证，验证成功返回 True，否则返回 False。</p>\n<p>验证失败，可以通过序列化器对象的 errors 属性获取错误信息，返回字典，包含了字段和字段的错误。</p>\n<p>验证成功，可以通过序列化器对象的 validated_data 属性获取数据。</p>\n<p>在定义序列化器时，指明每个字段的序列化类型和选项参数，本身就是一种验证行为</p>\n<h4 id=\"211-数据校验的第一种方式\"><a class=\"markdownIt-Anchor\" href=\"#211-数据校验的第一种方式\">#</a> 2.1.1 数据校验的第一种方式</h4>\n<hr>\n<p>在定义序列化器字段的时候，规定是什么类型 就要提交符合规则的数据</p>\n<p>例如：DateField 就需要传入符合日期规则的数据</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">############## 将 JSON 转换为模型  反序列化 #############</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     <span class=\"token triple-quoted-string string\">''' serializers.py '''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookInfoSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>Serializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>read_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        name <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharFIeld<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'书籍名'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        pub_date <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>DataField<span class=\"token punctuation\">(</span>label<span class=\"token operator\">=</span><span class=\"token string\">'发布日期'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>       </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        peopleinfo_set <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>PrimaryKeyRelatedField<span class=\"token punctuation\">(</span>read_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>name</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token triple-quoted-string string\">''' views.py '''</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token builtin\">dict</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'itcast'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token string\">'pub_date'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'123'</span>   <span class=\"token comment\"># Flase</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token comment\"># 'pub_date':'2010-1-1'  # True</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token comment\"># 1. 创建序列器</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\"># 序列化器的第一个参数：instance 用于序列化操作</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\"># 序列化器的第二个参数：data 用于反序列化操作</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    serializer <span class=\"token operator\">=</span> BookInfoSerializer<span class=\"token punctuation\">(</span>data<span class=\"token operator\">=</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token comment\"># 2. 需要调用序列化器的 is_valid 方法 valid 验证  返回 True False</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token comment\"># 如果数据可用  返回 True</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    serializer<span class=\"token punctuation\">.</span>is_valid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token comment\"># raise_exception=True 可以设置为 True 来抛出异常</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    serializer<span class=\"token punctuation\">.</span>is_valid<span class=\"token punctuation\">(</span>raise_exception<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"212-数据校验的第二种方式\"><a class=\"markdownIt-Anchor\" href=\"#212-数据校验的第二种方式\">#</a> 2.1.2 数据校验的第二种方式</h4>\n<hr>\n<p>字段的选项</p>\n<p>required : 进行反序列化的时候，必须传这个字段</p>\n<p>min_length,max_length 作用于字符串</p>\n<p>min_value,max_value 作用于 Int 整型</p>\n<p>default 不传入数据 设置默认值</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">''' serializers.py '''</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookInfoSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>Serializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>read_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        name <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharFIeld<span class=\"token punctuation\">(</span>min_length<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'书籍名'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        pub_date <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>DataField<span class=\"token punctuation\">(</span>label<span class=\"token operator\">=</span><span class=\"token string\">'发布日期'</span><span class=\"token punctuation\">,</span>required<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>name</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token triple-quoted-string string\">''' views.py '''</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token builtin\">dict</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'itcast'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token string\">'pub_date'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'123'</span>   <span class=\"token comment\"># 若去掉 pub_date 则报错</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"313-数据校验的第三种方式\"><a class=\"markdownIt-Anchor\" href=\"#313-数据校验的第三种方式\">#</a> 3.1.3 数据校验的第三种方式</h4>\n<hr>\n<p>对单个字段的数据进行验证</p>\n<p>语法形式为： 在序列化器中实现方法 def validate_字段名 ()</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">''' serializers.py '''</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookInfoSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>Serializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>read_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        name <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharFIeld<span class=\"token punctuation\">(</span>min_length<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'书籍名'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        pub_date <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>DataField<span class=\"token punctuation\">(</span>label<span class=\"token operator\">=</span><span class=\"token string\">'发布日期'</span><span class=\"token punctuation\">,</span>required<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        readcount <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>default<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>required<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>name</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">validate_readcount</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token comment\"># value 就是字段传递过来的数据</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">if</span> value <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token keyword\">raise</span> serializers<span class=\"token punctuation\">.</span>ValidationError<span class=\"token punctuation\">(</span><span class=\"token string\">'阅读量不能为负数'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token comment\"># 需要将 value 返回回去</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">return</span> value</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token triple-quoted-string string\">''' views.py '''</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token builtin\">dict</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'itcast'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token string\">'readcount'</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 报异常</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"314-数据校验的第四种方式\"><a class=\"markdownIt-Anchor\" href=\"#314-数据校验的第四种方式\">#</a> 3.1.4 数据校验的第四种方式</h4>\n<hr>\n<p>对多个字段的数据进行验证时</p>\n<p>语法形式为： 在序列化器中实现方法 def validate (self,attrs)</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">''' serializers.py '''</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookInfoSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>Serializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>read_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        name <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharFIeld<span class=\"token punctuation\">(</span>min_length<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'书籍名'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        pub_date <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>DataField<span class=\"token punctuation\">(</span>label<span class=\"token operator\">=</span><span class=\"token string\">'发布日期'</span><span class=\"token punctuation\">,</span>required<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        readcount <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>default<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>required<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        commentcount <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>default<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>required<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>name</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\"># 对多个字段进行验证</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\"># def validate(self,attrs):</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">validate</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token comment\"># attrs  -->  其实就是 data</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            readcount <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'readcount'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            commentcount <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token string\">'commentcount'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">if</span> readcount <span class=\"token operator\">&lt;</span> commentcount<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token keyword\">raise</span> serializers<span class=\"token punctuation\">.</span>ValidationError<span class=\"token punctuation\">(</span><span class=\"token string\">'评论量不能大于阅读量'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token comment\"># 要将数据返回</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token keyword\">return</span> data</pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token triple-quoted-string string\">''' views.py '''</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token comment\"># 自定义需求：评论量不能大于阅读量</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token builtin\">dict</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'itcast'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token string\">'readcount'</span><span class=\"token punctuation\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token string\">'commentcount'</span><span class=\"token punctuation\">:</span><span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"315-数据校验的第五种方式\"><a class=\"markdownIt-Anchor\" href=\"#315-数据校验的第五种方式\">#</a> 3.1.5 数据校验的第五种方式</h4>\n<hr>\n<p>自定义验证方法</p>\n<p>同时给字段添加自定义验证方法</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">''' serializers.py '''</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookInfoSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>Serializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\"># 自定义验证方法</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">custom_validate</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">if</span> self <span class=\"token operator\">==</span> <span class=\"token string\">'admin'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">raise</span> serializers<span class=\"token punctuation\">.</span>ValidationError<span class=\"token punctuation\">(</span><span class=\"token string\">'我就是来捣乱的'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>read_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>       </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\"># validators=[]  是给字段 添加自定义验证方法</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        name <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharFIeld<span class=\"token punctuation\">(</span>min_length<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'书籍名'</span><span class=\"token punctuation\">,</span>validators<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>custom_validate<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>       </pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>name</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token triple-quoted-string string\">''' views.py '''</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\"># 规定：评论量不能大于阅读量</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token builtin\">dict</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'itcast'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token string\">'readcount'</span><span class=\"token punctuation\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token string\">'commentcount'</span><span class=\"token punctuation\">:</span><span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"22-数据入库\"><a class=\"markdownIt-Anchor\" href=\"#22-数据入库\">#</a> 2.2 数据入库</h3>\n<hr>\n<h4 id=\"221-数据保存-save-方法\"><a class=\"markdownIt-Anchor\" href=\"#221-数据保存-save-方法\">#</a> 2.2.1 数据保存 save 方法</h4>\n<hr>\n<p>继承自 Serializer 的序列化 我们在调用 save 方法的时候，需要手动实现 create 方法，</p>\n<p>调用 save 方法之前，必须调用 is_valid 方法，</p>\n<p>即 要想保存数据，必须保证数据是经过校验的。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">''' serializers.py '''</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookInfoSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>Serializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>validated_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token comment\"># dict -->  data --> attrs  -->  validated_data</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token comment\"># validated_data 此处其实就是 views.py 中的 dict</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token comment\"># validated_data 已经被验证过的数据</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token comment\"># *  对列表进行解包    *list</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token comment\"># ** 对字典进行解包    **dict</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token comment\">#   此处解包  将 dict 中的值 赋值给对象中的对应字段</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            book <span class=\"token operator\">=</span> BookInfo<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>create<span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>validated_data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token comment\"># create 需要将创建的对象返回</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">return</span> book </pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>     <span class=\"token triple-quoted-string string\">''' views.py '''</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\"># 规定：评论量不能大于阅读量</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token builtin\">dict</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'itcast'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token string\">'readcount'</span><span class=\"token punctuation\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token string\">'commentcount'</span><span class=\"token punctuation\">:</span><span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>   </pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    serializer <span class=\"token operator\">=</span> BookInfoSerializer<span class=\"token punctuation\">(</span>data<span class=\"token operator\">=</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    serializer<span class=\"token punctuation\">.</span>is_valid<span class=\"token punctuation\">(</span>raise_exception<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token comment\"># 3. 保存需要调用序列化器的 save 方法</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token comment\"># 继承自 Serializer 的序列化 我们在调用 save 方法的时候，需要手动实现 create 方法</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    serializer<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"222-序列化器中传入两个参数即数据的更新操作\"><a class=\"markdownIt-Anchor\" href=\"#222-序列化器中传入两个参数即数据的更新操作\">#</a> 2.2.2 序列化器中传入两个参数，即数据的更新操作</h4>\n<hr>\n<p>如果我们在序列化器中既传入了对象，又传入了数据</p>\n<p>系统会认为我们在更新数据</p>\n<p>继承自 Serializer 的类，要更新数据的时候，需要手动实现 update 方法</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">''' serializers.py '''</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookInfoSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>Serializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>instance<span class=\"token punctuation\">,</span>validated_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token comment\"># instance : 就是我们在更新数据时，传入序列化器的对象</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token comment\"># validated_data ： 验证之后的数据</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            instance<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> validated_data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span>instance<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            instance<span class=\"token punctuation\">.</span>pub_date <span class=\"token operator\">=</span> validated_data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'pub_date'</span><span class=\"token punctuation\">,</span>instance<span class=\"token punctuation\">.</span>pub_date<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            instance<span class=\"token punctuation\">.</span>readcount <span class=\"token operator\">=</span> validated_data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'readcount'</span><span class=\"token punctuation\">,</span>instance<span class=\"token punctuation\">.</span>readcount<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            instance<span class=\"token punctuation\">.</span>commentcount <span class=\"token operator\">=</span> validated_data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'commentcount'</span><span class=\"token punctuation\">,</span>instance<span class=\"token punctuation\">.</span>commentcount<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            instance<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token comment\"># update () 方法需要我们手动返回对象</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">return</span> instance</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token triple-quoted-string string\">'''views.py '''</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\"># 1. 获取对象</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    book <span class=\"token operator\">=</span> BookInfo<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\"># 2. 保存数据</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    data <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'lalala'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token string\">'pub_date'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'2018-1-1'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token string\">'readcount'</span><span class=\"token punctuation\">:</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token string\">'commentcount'</span><span class=\"token punctuation\">:</span><span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>    </pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token comment\"># 3. 创建序列化器</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    s <span class=\"token operator\">=</span> BookInfoSerializer<span class=\"token punctuation\">(</span>instance<span class=\"token operator\">=</span>book<span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token comment\"># 4. 验证数据</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    s<span class=\"token punctuation\">.</span>is_valid<span class=\"token punctuation\">(</span>raise_exception<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token comment\"># 5. 保存数据</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    s<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"3-modelserializer\"><a class=\"markdownIt-Anchor\" href=\"#3-modelserializer\">#</a> 3. ModelSerializer</h1>\n<hr>\n<p>如果我们想要使用序列化器对应的是 Django 的模型类，DRF 为我们提供了 ModelSerializer 模型类</p>\n<p>序列化器来帮助我们快速创建一个 Serializer 类。</p>\n<p>ModelSerializer 与常规的 Serializer 相同，但提供了：</p>\n<p>基于模型类自动生成一系列字段</p>\n<p>包含默认的 create () 和 update () 的实现</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">''' serializers.py '''</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>ModelSerializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\"># 如何设置   通过 class Meta</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            model <span class=\"token operator\">=</span> BookInfo    <span class=\"token comment\"># 设置关联模型     model 就是关联模型</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token comment\"># fields = '__all__'  # fields 设置字段   __all__表示所有字段</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token comment\"># fields = ['id','name','pub_date']  # fields 设置字段  [] 列表显示来设置</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            exclude <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'image'</span><span class=\"token punctuation\">]</span>   <span class=\"token comment\"># exclude 排除列表中的字段，剩余的字段都显示</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            read_only_fields <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'readcount'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'commentcount'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token comment\"># 我们可以对自动生成的字段  进行额外的设置</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            extra_kwargs <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token comment\"># 字段名：&#123;选项：值&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token string\">'pub_date'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'required'</span><span class=\"token punctuation\">:</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token string\">'readcount'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                    <span class=\"token string\">'max_value'</span><span class=\"token punctuation\">:</span><span class=\"token number\">10000</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                    <span class=\"token string\">'min_value'</span><span class=\"token punctuation\">:</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token triple-quoted-string string\">'''views.py'''</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\">#########ModelSerializer##############</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    data <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'abc'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token string\">'pub_date'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'2018-1-1'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token string\">'readcount'</span><span class=\"token punctuation\">:</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token string\">'commentcount'</span><span class=\"token punctuation\">:</span><span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>    </pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    s <span class=\"token operator\">=</span> BookSerializer<span class=\"token punctuation\">(</span>data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    s<span class=\"token punctuation\">.</span>is_valid<span class=\"token punctuation\">(</span>raise_exception<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    s<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "序列化器"
            ]
        },
        {
            "id": "http://example.com/Django%E6%A1%86%E6%9E%B6/Django-%E4%B8%89%E7%A7%8D%E9%A3%8E%E6%A0%BC%E7%9A%84%E6%A8%A1%E5%9E%8B%E7%BB%A7%E6%89%BF/",
            "url": "http://example.com/Django%E6%A1%86%E6%9E%B6/Django-%E4%B8%89%E7%A7%8D%E9%A3%8E%E6%A0%BC%E7%9A%84%E6%A8%A1%E5%9E%8B%E7%BB%A7%E6%89%BF/",
            "title": "三种风格的模型继承",
            "date_published": "2020-03-07T09:05:27.000Z",
            "content_html": "<h1 id=\"django三种风格的模型继承\"><a class=\"markdownIt-Anchor\" href=\"#django三种风格的模型继承\">#</a> Django 三种风格的模型继承</h1>\n<ul>\n<li>\n<p>抽象类继承：父类继承自 models.Model，但不会在底层数据库中生成相应的数据表（在 <code>Meta</code>  方法中添加 <code>abstract=True</code> ），父类的属性列存储在其子类的数据表中。</p>\n</li>\n<li>\n<p>多表继承：夺标继承的每个模型类都在底层数据库中生成相应的数据表管理数据。</p>\n</li>\n<li>\n<p>代理模型继承：父类用于在底层数据库中管理数据表；而子类不定义数据列，只定义查询数据集的排列方式等元数据</p>\n</li>\n</ul>\n<h4 id=\"1-抽象类基类公共类继承\"><a class=\"markdownIt-Anchor\" href=\"#1-抽象类基类公共类继承\">#</a> 1.      抽象类 (基类，公共类) 继承</h4>\n<ul>\n<li>抽象类，指的是继承了 model.Model 且没有生成表，而是作为基类或公共类被其他类继承</li>\n<li>抽象类继承的作用是在多个表有若干相同的字段时，可以使开发者讲这些字段统一定义在抽象基类中，免于重复定义这些字段。抽象积累的定义通过在模型的 Meta 中定义属性 abstract=True 来实现。抽象基类的举例如下：</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>db <span class=\"token keyword\">import</span> models</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Base</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    create_time <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>TimeField<span class=\"token punctuation\">(</span>auto_now_add<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    update_time <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>TimeField<span class=\"token punctuation\">(</span>auto_now<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    \t<span class=\"token comment\"># 添加关键字，不会产生新的表</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        abstract <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 这张表继承了 Base，哪怕没有字段 create_time 和 update_time，也同样会展示出来</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CourseType</span><span class=\"token punctuation\">(</span>Base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    title <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span><span class=\"token string\">'课程类别'</span><span class=\"token punctuation\">,</span> max_length<span class=\"token operator\">=</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    sequence <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span><span class=\"token string\">'展示顺序'</span><span class=\"token punctuation\">,</span> default<span class=\"token operator\">=</span><span class=\"token number\">18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        db_table <span class=\"token operator\">=</span> <span class=\"token string\">'tb_coursetype'</span></pre></td></tr></table></figure><p>本列中定义了一个抽象基类 Base，用于保存 2 个公用字段：create_time、update_time 。子类 CourseType 继承自 Base，并分别定义了自己的俩个字段。本列中 2 个类映射到数据库后，会被定义为 1 个数据表。</p>\n<ul>\n<li>数据表 tb_coursetype：有 id、title 、sequence 、create_time 、update_time 5 个字段</li>\n</ul>\n<hr>\n<h4 id=\"2多表继承\"><a class=\"markdownIt-Anchor\" href=\"#2多表继承\">#</a> 2. 多表继承</h4>\n<ul>\n<li>\n<p>在多表继承技术中心，无论是父表还是子表都会用数据库中相对应的数据表维护模型数据，父类中字段不会重复地在多个子类的相关数据表中进行定义。从这种意义上讲，多表继承才是真正面向对象的 ORM 技术。</p>\n</li>\n<li>\n<p>多表继承的定义不需要特殊的关键字。在 Django 内部通过在父模型和子模型之间建立一对一关系来实现多表继承技术。如下代码定义了 MessageBase 及其子类的多表继承版本：</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>db <span class=\"token keyword\">import</span> models</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">MessageBase</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>AutoField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    content <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    user_name <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">80</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    pub_date <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>DateField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Moment</span><span class=\"token punctuation\">(</span>MessageBase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    headline <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Coment</span><span class=\"token punctuation\">(</span>MessageBase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    level <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> choices<span class=\"token operator\">=</span>Levels<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>本例在数据库中会实际生成 3 个数据表。</p>\n<ul>\n<li>数据表 MessageBase：有 id、content、user_name、pub_date 等 4 个字段</li>\n<li>数据表 Moment：有 id、headline 等两个字段</li>\n<li>数据表 Comment：有 id、level 等两个字段</li>\n</ul>\n<p>在对模型的编程过程中，子类仍然可以直接引用父类定义的字段；同时子类可以通过父类对象引用访问父类实例，比如：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 新建 Moment 对象，直接在子类中引用父类字段</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> m1 <span class=\"token operator\">=</span> Moment<span class=\"token punctuation\">(</span>user_name<span class=\"token operator\">=</span><span class=\"token string\">\"Tom\"</span><span class=\"token punctuation\">,</span> headline<span class=\"token operator\">=</span><span class=\"token string\">\"hello world\"</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> m1<span class=\"token punctuation\">.</span>content <span class=\"token operator\">=</span> <span class=\"token string\">\"reference parent field in subclass\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> m1<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 通过父类实例引用父类字段</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span> m1<span class=\"token punctuation\">.</span>messagebase<span class=\"token punctuation\">.</span>content</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>eference parent field <span class=\"token keyword\">in</span> subclass</pre></td></tr></table></figure><p>技巧：在多表继承时，在子类实例中通过小写的父类的名字可以引用父类的实例</p>\n<hr>\n<h4 id=\"3代理模型继承\"><a class=\"markdownIt-Anchor\" href=\"#3代理模型继承\">#</a> 3. 代理模型继承</h4>\n<ul>\n<li>前两种继承模型中子类模型都有实际存储数据的作用；而代理模型继承中子类只用于管理父类的数据，而不实际存储数据。代理模型继承通过在子类的 Meta 中定义 proxy=True 属性来实现。举例如下：</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Moment</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>AutoField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    content <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    user_name <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">80</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    pub_date <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>DateField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    headline <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">OrderdMoment</span><span class=\"token punctuation\">(</span>Moment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        proxy <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        ordering <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"-pub_date\"</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>在本例中定义了父类模型 Moment 用于存储数据，而后定义了子类模型 OrderedMoment 用于管理根据 pub_date 倒序排列的 Moment。使用 dialing 模型继承的原因是子类中新的特性不会影响父类模型及其已有代码的行为。</p>\n",
            "tags": []
        }
    ]
}