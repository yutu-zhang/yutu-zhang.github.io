{
    "version": "https://jsonfeed.org/version/1",
    "title": "The course of true love never did run smooth. • All posts by \"django框架\" category",
    "description": "不知道写啥",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/Django%E6%A1%86%E6%9E%B6/wechat-%E6%89%AB%E7%A0%81%E6%94%AF%E4%BB%98/",
            "url": "http://example.com/Django%E6%A1%86%E6%9E%B6/wechat-%E6%89%AB%E7%A0%81%E6%94%AF%E4%BB%98/",
            "title": "Wechat--扫码支付",
            "date_published": "2020-12-27T08:35:04.000Z",
            "content_html": "<h1 id=\"概述\"><a class=\"markdownIt-Anchor\" href=\"#概述\">#</a> 概述</h1>\n<blockquote>\n<p>在生活中真正具有广泛性、高效性、使用方便性的支付方式还得是扫码支付，扫码的优点在于推广成本低，上至钓鱼台国宾馆，下至发廊地摊都能用，打印出来就完事了，而相比其他支付方式，现金的找零及假钞问题，信用卡的办理门槛、pos 机的沉没成本，所以基于二维码的扫码支付的确是非常符合国情的。</p>\n</blockquote>\n<h1 id=\"python3-django22-vue-实现微信扫码支付\"><a class=\"markdownIt-Anchor\" href=\"#python3-django22-vue-实现微信扫码支付\">#</a> Python3 + Django2.2 + Vue 实现微信扫码支付</h1>\n<h2 id=\"wechat\"><a class=\"markdownIt-Anchor\" href=\"#wechat\">#</a> Wechat</h2>\n<ol>\n<li>首先注册微信公众平台</li>\n</ol>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29t\">https://mp.weixin.qq.com</span></p>\n</blockquote>\n<ul>\n<li>获得开发者 id 和秘钥 (appid &amp; appsecret)</li>\n</ul>\n<p><img data-src=\"1.png\" alt=\"\"></p>\n<ul>\n<li>同时确保获取微信支付接口的权限</li>\n</ul>\n<p><img data-src=\"2.png\" alt=\"\"></p>\n<ol start=\"2\">\n<li>随后注册微信支付商户平台</li>\n</ol>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYXkud2VpeGluLnFxLmNvbS8=\">https://pay.weixin.qq.com/</span></p>\n</blockquote>\n<ul>\n<li>获取微信支付的商户号 (在账户信息页面)</li>\n</ul>\n<p><img data-src=\"3.png\" alt=\"\"></p>\n<ul>\n<li>获取微信支付接口的秘钥 (账户中心 -&gt;api 安全)</li>\n</ul>\n<p><img data-src=\"4.png\" alt=\"\"></p>\n<ul>\n<li>产品中心 -&gt; 开发配置页面，配置支付域名</li>\n</ul>\n<p><img data-src=\"5.png\" alt=\"\"></p>\n<div class=\"note info\">\n<p>扫码支付域名既支持 https 也支持 http，非常方便，同时注意域名必须是一个备案域名。</p>\n</div>\n<h2 id=\"django\"><a class=\"markdownIt-Anchor\" href=\"#django\">#</a> Django</h2>\n<ol>\n<li>首先导入依赖的库和一些工具方法</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>http <span class=\"token keyword\">import</span> HttpResponse<span class=\"token punctuation\">,</span> HttpResponseRedirect</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> random</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> time</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> hashlib</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> qrcode</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">from</span> bs4 <span class=\"token keyword\">import</span> BeautifulSoup</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">trans_xml_to_dict</span><span class=\"token punctuation\">(</span>data_xml<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    soup <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span>data_xml<span class=\"token punctuation\">,</span> features<span class=\"token operator\">=</span><span class=\"token string\">'xml'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    xml <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'xml'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 解析 XML</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> xml<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    data_dict <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> item <span class=\"token keyword\">in</span> xml<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">return</span> data_dict</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">trans_dict_to_xml</span><span class=\"token punctuation\">(</span>data_dict<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 定义字典转 XML 的函数</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    data_xml <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>data_dict<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 遍历字典排序后的 key</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        v <span class=\"token operator\">=</span> data_dict<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 取出字典中 key 对应的 value</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">if</span> k <span class=\"token operator\">==</span> <span class=\"token string\">'detail'</span> <span class=\"token keyword\">and</span> <span class=\"token keyword\">not</span> v<span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;![CDATA['</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 添加 XML 标记</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            v <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;![CDATA[&#123;&#125;]]>'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        data_xml<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;&#123;key&#125;>&#123;value&#125;&lt;/&#123;key&#125;>'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>key<span class=\"token operator\">=</span>k<span class=\"token punctuation\">,</span> value<span class=\"token operator\">=</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token string\">'&lt;xml>&#123;&#125;&lt;/xml>'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>data_xml<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 返回 XML</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_sign</span><span class=\"token punctuation\">(</span>data_dict<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 签名函数，参数为签名的数据和密钥</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    params_list <span class=\"token operator\">=</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>data_dict<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> key<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> e<span class=\"token punctuation\">:</span> e<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> reverse<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 参数字典倒排序为列表</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    params_str <span class=\"token operator\">=</span> <span class=\"token string\">\"&amp;\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token string\">u\"&#123;&#125;=&#123;&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span> v <span class=\"token keyword\">in</span> params_list<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'&amp;key='</span> <span class=\"token operator\">+</span> key</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token comment\"># 组织参数字符串并在末尾添加商户交易密钥</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    md5 <span class=\"token operator\">=</span> hashlib<span class=\"token punctuation\">.</span>md5<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 使用 MD5 加密模式</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    md5<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span>params_str<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 将参数字符串传入</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    sign <span class=\"token operator\">=</span> md5<span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 完成加密并转为大写</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">return</span> sign</pre></td></tr></table></figure><ol start=\"2\">\n<li>编写支付逻辑，参考微信官方文档</li>\n</ol>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYXkud2VpeGluLnFxLmNvbS93aWtpL2RvYy9hcGkvbmF0aXZlLnBocD9jaGFwdGVyPTZfNSZhbXA7aW5kZXg9Mw==\">https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=6_5&amp;index=3</span></p>\n</blockquote>\n<details class=\"primary\"><summary>业务流程说明</summary><div>\n<p>（1）商户后台系统根据用户选购的商品生成订单。</p>\n<p>（2）用户确认支付后调用微信支付【统一下单 API】生成预支付交易；</p>\n<p>（3）微信支付系统收到请求后生成预支付交易单，并返回交易会话的二维码链接 code_url。</p>\n<p>（4）商户后台系统根据返回的 code_url 生成二维码。</p>\n<p>（5）用户打开微信 “扫一扫” 扫描二维码，微信客户端将扫码内容发送到微信支付系统。</p>\n<p>（6）微信支付系统收到客户端请求，验证链接有效性后发起用户支付，要求用户授权。</p>\n<p>（7）用户在微信客户端输入密码，确认支付后，微信客户端提交授权。</p>\n<p>（8）微信支付系统根据用户授权完成支付交易。</p>\n<p>（9）微信支付系统完成支付交易后给微信客户端返回交易结果，并将交易结果通过短信、微信消息提示用户。微信客户端展示支付交易结果页面。</p>\n<p>（10）微信支付系统通过发送异步消息通知商户后台系统支付结果。商户后台系统需回复接收情况，通知微信后台系统不再发送该单的支付通知。</p>\n<p>（11）未收到支付通知的情况，商户后台系统调用【查询订单 API】。</p>\n<p>（12）商户确认订单已支付后给用户发货。</p>\n</div></details>\n<ul>\n<li>我们需要调用微信的统一下单接口文档</li>\n</ul>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYXkud2VpeGluLnFxLmNvbS93aWtpL2RvYy9hcGkvbmF0aXZlLnBocD9jaGFwdGVyPTlfMQ==\">https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=9_1</span></p>\n</blockquote>\n<ul>\n<li>编写逻辑</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">wx_pay</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    url <span class=\"token operator\">=</span> <span class=\"token string\">'https://api.mch.weixin.qq.com/pay/unifiedorder'</span>  <span class=\"token comment\"># 微信扫码支付接口</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    key <span class=\"token operator\">=</span> <span class=\"token string\">'945bec********a8fbf7d7'</span>  <span class=\"token comment\">#商户 api 秘钥</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    total_fee <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token comment\">#支付金额，单位分</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    body <span class=\"token operator\">=</span> <span class=\"token string\">'123123'</span>  <span class=\"token comment\"># 商品描述</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    out_trade_no <span class=\"token operator\">=</span> <span class=\"token string\">'order_%s'</span> <span class=\"token operator\">%</span> random<span class=\"token punctuation\">.</span>randrange<span class=\"token punctuation\">(</span><span class=\"token number\">100000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">999999</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 订单编号</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    params <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token string\">'appid'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'wx09*****f'</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># APPID</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token string\">'mch_id'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'16****08'</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 商户号</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token string\">'notify_url'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'http://wxpay.v3u.cn/wx_back/'</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 支付域名回调地址</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token string\">'product_id'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'goods_%s'</span> <span class=\"token operator\">%</span> random<span class=\"token punctuation\">.</span>randrange<span class=\"token punctuation\">(</span><span class=\"token number\">100000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">999999</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 商品编号</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token string\">'trade_type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'NATIVE'</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 支付类型（扫码支付）</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token string\">'spbill_create_ip'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'114.254.176.137'</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 发送请求服务器的 IP 地址</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token string\">'total_fee'</span><span class=\"token punctuation\">:</span> total_fee<span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 订单总金额</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token string\">'out_trade_no'</span><span class=\"token punctuation\">:</span> out_trade_no<span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 订单编号</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token string\">'body'</span><span class=\"token punctuation\">:</span> body<span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 商品描述</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token string\">'nonce_str'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'ibuaiVcKdpRxkhJA'</span>  <span class=\"token comment\"># 字符串</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    sign <span class=\"token operator\">=</span> get_sign<span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 获取签名</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    params<span class=\"token punctuation\">.</span>setdefault<span class=\"token punctuation\">(</span><span class=\"token string\">'sign'</span><span class=\"token punctuation\">,</span> sign<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 添加签名到参数字典</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    xml <span class=\"token operator\">=</span> trans_dict_to_xml<span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 转换字典为 XML</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    response <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">(</span><span class=\"token string\">'post'</span><span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>xml<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 以 POST 方式向微信公众平台服务器发起请求</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    data_dict <span class=\"token operator\">=</span> trans_xml_to_dict<span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 将请求返回的数据转为字典</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data_dict<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    qrcode_name <span class=\"token operator\">=</span> out_trade_no <span class=\"token operator\">+</span> <span class=\"token string\">'.png'</span>  <span class=\"token comment\"># 支付二维码图片保存路径</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">if</span> data_dict<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'return_code'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">'SUCCESS'</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 如果请求成功</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        img <span class=\"token operator\">=</span> qrcode<span class=\"token punctuation\">.</span>make<span class=\"token punctuation\">(</span>data_dict<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'code_url'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 创建支付二维码片</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        img<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span> <span class=\"token operator\">+</span> qrcode_name<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 保存支付二维码</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">return</span> HttpResponse<span class=\"token punctuation\">(</span>qrcode_name<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>访问 http://localhost:8000/wx_pay/</li>\n</ol>\n<p><img data-src=\"6.png\" alt=\"\"></p>\n<h2 id=\"vue\"><a class=\"markdownIt-Anchor\" href=\"#vue\">#</a> Vue</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>center</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>扫码支付<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>center</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-form-item</span> <span class=\"token attr-name\">v-bind</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>formItemLayout<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">label</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>金额<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-input</span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>money<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-form-item</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-form-item</span> <span class=\"token attr-name\">v-bind</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tailFormItemLayout<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>primary<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">html-type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        生成二维码</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-form-item</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-form-item</span> <span class=\"token attr-name\">v-bind</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>formItemLayout<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">label</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>二维码<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">:src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>src<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-form-item</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      money<span class=\"token operator\">:</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      src<span class=\"token operator\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      formItemLayout<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        labelCol<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>          xs<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> span<span class=\"token operator\">:</span> <span class=\"token number\">24</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>          sm<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> span<span class=\"token operator\">:</span> <span class=\"token number\">8</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        wrapperCol<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>          xs<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> span<span class=\"token operator\">:</span> <span class=\"token number\">24</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>          sm<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> span<span class=\"token operator\">:</span> <span class=\"token number\">16</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>      tailFormItemLayout<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        wrapperCol<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>          xs<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            span<span class=\"token operator\">:</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            offset<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>          sm<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            span<span class=\"token operator\">:</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            offset<span class=\"token operator\">:</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>      dataSource<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>          key<span class=\"token operator\">:</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>          name<span class=\"token operator\">:</span> <span class=\"token string\">'Edward King 0'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>          age<span class=\"token operator\">:</span> <span class=\"token string\">'32'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>          address<span class=\"token operator\">:</span> <span class=\"token string\">'London, Park Lane no. 0'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>          key<span class=\"token operator\">:</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>          name<span class=\"token operator\">:</span> <span class=\"token string\">'Edward King 1'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>          age<span class=\"token operator\">:</span> <span class=\"token string\">'32'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>          address<span class=\"token operator\">:</span> <span class=\"token string\">'London, Park Lane no. 1'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>      columns<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>          title<span class=\"token operator\">:</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>          dataIndex<span class=\"token operator\">:</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>          title<span class=\"token operator\">:</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>          dataIndex<span class=\"token operator\">:</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>          title<span class=\"token operator\">:</span> <span class=\"token string\">'address'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>          dataIndex<span class=\"token operator\">:</span> <span class=\"token string\">'address'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>          title<span class=\"token operator\">:</span> <span class=\"token string\">'operation'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>          dataIndex<span class=\"token operator\">:</span> <span class=\"token string\">'operation'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>          scopedSlots<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> customRender<span class=\"token operator\">:</span> <span class=\"token string\">'operation'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>  methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token function-variable function\">submit</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>       <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>axios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://localhost:8000/wx_pay/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"103\"></td><td><pre>            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">\"http://localhost:8000/static/upload/\"</span><span class=\"token operator\">+</span>result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>img</pre></td></tr><tr><td data-num=\"106\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"107\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    <span class=\"token function\">onDelete</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataSource<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><ul>\n<li>当用户点击按钮之后，请求后端支付接口，将接口生成的二维码返回给前端</li>\n</ul>\n<p><img data-src=\"7.png\" alt=\"\"></p>\n<ul>\n<li>微信进行扫码支付，需要注意的是，该二维码有效期只有五分钟</li>\n</ul>\n<p><img data-src=\"8.png\" alt=\"\"></p>\n<ul>\n<li>支付成功之后，我们还需要对交易进行确认，所以根据微信官方文档，调用统一查询接口</li>\n</ul>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYXkud2VpeGluLnFxLmNvbS93aWtpL2RvYy9hcGkvbmF0aXZlLnBocD9jaGFwdGVyPTlfMg==\">https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=9_2</span></p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">wx_check</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">#统一订单查询接口</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    url <span class=\"token operator\">=</span> <span class=\"token string\">\"https://api.mch.weixin.qq.com/pay/orderquery\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    out_trade_no <span class=\"token operator\">=</span> <span class=\"token string\">\"order_537236\"</span> <span class=\"token comment\">#支付后的商户订单号</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    key <span class=\"token operator\">=</span> <span class=\"token string\">'945b******d7'</span>  <span class=\"token comment\"># 商户 api 密钥</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    params <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token string\">'appid'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'wx0*****ff'</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># APPID</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token string\">'mch_id'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'16*****08'</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 商户号</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token string\">'out_trade_no'</span><span class=\"token punctuation\">:</span> out_trade_no<span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 订单编号</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token string\">'nonce_str'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'ibuaiVcKdpRxkhJA'</span>  <span class=\"token comment\"># 随机字符串</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    sign <span class=\"token operator\">=</span> get_sign<span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 获取签名</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    params<span class=\"token punctuation\">.</span>setdefault<span class=\"token punctuation\">(</span><span class=\"token string\">'sign'</span><span class=\"token punctuation\">,</span> sign<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 添加签名到参数字典</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    xml <span class=\"token operator\">=</span> trans_dict_to_xml<span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 转换字典为 XML</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    response <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">(</span><span class=\"token string\">'post'</span><span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>xml<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 以 POST 方式向微信公众平台服务器发起请求</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    data_dict <span class=\"token operator\">=</span> trans_xml_to_dict<span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 将请求返回的数据转为字典</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data_dict<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">return</span> HttpResponse<span class=\"token punctuation\">(</span><span class=\"token string\">'ok'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><div class=\"note info\">\n<p>查询的订单编号可以使商户自己的订单编号，也可以是微信订单号，二者必取其一</p>\n</div>\n<p><img data-src=\"9.png\" alt=\"\"></p>\n<ul>\n<li>\n<p>访问接口 <span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdDo4MDAwL3d4X2NoZWNrLw==\">http://localhost:8000/wx_check/</span></p>\n<p>返回结果：</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>返回结果：<span class=\"token punctuation\">&#123;</span><span class=\"token string\">'return_code'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'SUCCESS'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'return_msg'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'OK'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'appid'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'wx092344a76b9979ff'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mch_id'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'1602932608'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'nonce_str'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'BVoaDmxxADkpSFEl'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sign'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'23A86EB406B743E0C2C61C7E78DC9373'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'result_code'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'SUCCESS'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'openid'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'oy9q36f9Dpeokj9FWyN3j0znpIqE'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'is_subscribe'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'N'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'trade_type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'NATIVE'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bank_type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'OTHERS'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'total_fee'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'fee_type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'CNY'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'transaction_id'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'4200000806202012174121934231'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'out_trade_no'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'order_537236'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'attach'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'time_end'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'20201217231553'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'trade_state'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'SUCCESS'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cash_fee'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'trade_state_desc'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'支付成功'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cash_fee_type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'CNY'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "Wechat"
            ]
        },
        {
            "id": "http://example.com/Django%E6%A1%86%E6%9E%B6/PayPal-%E8%B7%A8%E5%A2%83%E6%94%AF%E4%BB%98/",
            "url": "http://example.com/Django%E6%A1%86%E6%9E%B6/PayPal-%E8%B7%A8%E5%A2%83%E6%94%AF%E4%BB%98/",
            "title": "PayPal--跨境支付",
            "date_published": "2020-12-26T06:47:25.000Z",
            "content_html": "<h1 id=\"概述\"><a class=\"markdownIt-Anchor\" href=\"#概述\">#</a> 概述</h1>\n<blockquote>\n<p>PayPal 是倍受全球亿万用户追捧的国际贸易支付工具</p>\n<p>是全球商户和消费者最受欢迎的电子支付方式之一，在跨境交易中有着超过 90% 的卖家和超过 85% 的买家认可并正在使用 PayPal 电子支付业务。当然，PayPal 国际业务体量如此惊人，肯定不是毫无原因的</p>\n<p>PayPal 支付的优势就是其业务网络遍布全球。目前 PayPal 的庞大网络覆盖了全球 200 多个国家，可提供 20 多种语言服务，并接受 100 多种货币付款和 56 种货币提现。同时，还允许在账户中持有 25 种货币余额。换句话说，只要付款人拥有一个 PayPal 账户，他就拥有了在 200 多个国家进行电子支付购物，并在需要服务的时候享受到母语支持的各种便捷服务。</p>\n</blockquote>\n<h1 id=\"python3-django22-vue集成paypal跨境支付\"><a class=\"markdownIt-Anchor\" href=\"#python3-django22-vue集成paypal跨境支付\">#</a> Python3 + Django2.2 + Vue 集成 PayPal 跨境支付</h1>\n<h2 id=\"paypal\"><a class=\"markdownIt-Anchor\" href=\"#paypal\">#</a> PayPal</h2>\n<ol>\n<li>首先注册官网账号</li>\n</ol>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucGF5cGFsLmNvbQ==\">https://www.paypal.com</span></p>\n</blockquote>\n<ol start=\"2\">\n<li>开发者平台</li>\n</ol>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIucGF5cGFsLmNvbS9kZXZlbG9wZXIvYWNjb3VudHMv\">https://developer.paypal.com/developer/accounts/</span></p>\n</blockquote>\n<ol start=\"3\">\n<li>沙盒账号控制页面</li>\n</ol>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIucGF5cGFsLmNvbS9kZXZlbG9wZXIvYWNjb3VudHMv\">https://developer.paypal.com/developer/accounts/</span></p>\n</blockquote>\n<div class=\"note info\">\n<p>会默认创建两个账号，一个是商户的，另外一个是个人的</p>\n</div>\n<ol start=\"4\">\n<li>进入应用管理页面，点<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIucGF5cGFsLmNvbS9kZXZlbG9wZXIvYWNjb3VudHMv\">这里</span></li>\n</ol>\n<ul>\n<li>记录下它的 client_id 和 client_secret，一会要用到</li>\n</ul>\n<p><img data-src=\"1.png\" alt=\"\"></p>\n<p><img data-src=\"2.png\" alt=\"\"></p>\n<h2 id=\"django\"><a class=\"markdownIt-Anchor\" href=\"#django\">#</a> Django</h2>\n<ol>\n<li>安装 paypal 在 python 端的 SDK</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip3 install paypalrestsdk</pre></td></tr></table></figure><ol start=\"2\">\n<li>生成支付链接</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> paypalrestsdk</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>http <span class=\"token keyword\">import</span> HttpResponse</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_parpal_url</span><span class=\"token punctuation\">(</span>total_money<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    paypalrestsdk<span class=\"token punctuation\">.</span>configure<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token string\">\"mode\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"sandbox\"</span><span class=\"token punctuation\">,</span>\t\t\t\t<span class=\"token comment\"># sandbox 代表沙盒</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token string\">\"client_id\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"你的client_id\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token string\">\"client_secret\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"你的client_secret\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    payment <span class=\"token operator\">=</span> paypalrestsdk<span class=\"token punctuation\">.</span>Payment<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token string\">\"intent\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"sale\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token string\">\"payer\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token string\">\"payment_method\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"paypal\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token string\">\"redirect_urls\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token string\">\"return_url\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"http://localhost:8080/paypal_back/\"</span><span class=\"token punctuation\">,</span>\t\t<span class=\"token comment\"># 支付成功跳转页面</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token string\">\"cancel_url\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"http://localhost:3000/paypal/cancel/\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 取消支付页面</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token string\">\"transactions\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token string\">\"amount\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token string\">\"total\"</span><span class=\"token punctuation\">:</span> total_money<span class=\"token punctuation\">,</span>\t\t\t\t<span class=\"token comment\"># 金额</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token string\">\"currency\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"USD\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token string\">\"description\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Paypal余额充值\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">if</span> payment<span class=\"token punctuation\">.</span>create<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Payment created successfully\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">for</span> link <span class=\"token keyword\">in</span> payment<span class=\"token punctuation\">.</span>links<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token keyword\">if</span> link<span class=\"token punctuation\">.</span>rel <span class=\"token operator\">==</span> <span class=\"token string\">\"approval_url\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                approval_url <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">.</span>href<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Redirect for approval: %s\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>approval_url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                <span class=\"token keyword\">return</span> approval_url</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token comment\"># print(payment.error)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">return</span> HttpResponse<span class=\"token punctuation\">(</span><span class=\"token string\">\"支付失败\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ol start=\"3\">\n<li><code>views.py</code></li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>Paypal <span class=\"token keyword\">import</span> get_parpal_url</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> paypalrestsdk</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 支付链接</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">PayPalView</span><span class=\"token punctuation\">(</span>APIView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">post</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        uid <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'uid'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        pay_method <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'pay_method'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        total_money <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'total_money'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        parpal_url <span class=\"token operator\">=</span> get_parpal_url<span class=\"token punctuation\">(</span>total_money<span class=\"token punctuation\">)</span>\t<span class=\"token comment\"># 调用刚刚写好的函数方法</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"code\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"msg\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"返回PayPal支付url\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"paypal_url\"</span><span class=\"token punctuation\">:</span> parpal_url<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ul>\n<li>支付完成后，会跳回刚刚传过去的回调页面</li>\n<li>paypal 会传过来三个参数，支付 id,token 和支付者 id</li>\n<li>此时，在回调方法里，我们需要通过支付者 id 进行确认验证支付</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 回调</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">PayPal_back</span><span class=\"token punctuation\">(</span>APIView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">post</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        uid <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'uid'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        paymentid <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"paymentId\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 订单 id</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        payerid <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"PayerID\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 支付者 id</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        payment <span class=\"token operator\">=</span> paypalrestsdk<span class=\"token punctuation\">.</span>Payment<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>paymentid<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>payment<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">if</span> payment<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"payer_id\"</span><span class=\"token punctuation\">:</span> payerid<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Payment execute successfully\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token string\">\"支付成功\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>payment<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Error Hash</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token string\">\"支付失败\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"vue\"><a class=\"markdownIt-Anchor\" href=\"#vue\">#</a> vue</h2>\n<ol>\n<li>支付页面</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-input</span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>输入充值金额(美元)<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>number<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>money<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span>500px</span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>primary<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span>20px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sub<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            确定</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>'</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    post_paypal_url<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@/http/apis'</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            money<span class=\"token operator\">:</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            pay_method<span class=\"token operator\">:</span><span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pay_method <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>pay_method</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    methods<span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token function\">sub</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token keyword\">let</span> params <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                <span class=\"token string\">\"uid\"</span><span class=\"token operator\">:</span>localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'uid'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                <span class=\"token string\">\"total_money\"</span><span class=\"token operator\">:</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>money<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                <span class=\"token string\">\"pay_method\"</span><span class=\"token operator\">:</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pay_method<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token function\">post_paypal_url</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                <span class=\"token comment\">// 获取支付链接并跳转</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>paypal_url</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><ol start=\"2\">\n<li>回调页面</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>PayPal回调<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    post_paypal_back<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@/http/apis'</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            query<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\">// 支付完成后获取，PayPal 传来的参数，发送给后端</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>query <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>query</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">let</span> params <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token string\">\"uid\"</span><span class=\"token operator\">:</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'uid'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token string\">'paymentId'</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>paymentId<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token string\">'PayerID'</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>PayerID<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token function\">post_paypal_back</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"演示\"><a class=\"markdownIt-Anchor\" href=\"#演示\">#</a> 演示</h2>\n<p><img data-src=\"PayPal.gif\" alt=\"\"></p>\n",
            "tags": [
                "PayPal"
            ]
        },
        {
            "id": "http://example.com/Django%E6%A1%86%E6%9E%B6/Django-%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2/",
            "url": "http://example.com/Django%E6%A1%86%E6%9E%B6/Django-%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2/",
            "title": "Django + Uwsgi + Nginx 的生产环境部署",
            "date_published": "2020-12-04T14:01:03.000Z",
            "content_html": "<h2 id=\"django\"><a class=\"markdownIt-Anchor\" href=\"#django\">#</a> Django</h2>\n<blockquote>\n<p><code>Django</code>  是一个 <code>Web框架</code> ，框架的作用在于处理 <code>request</code>  和 <code>reponse</code> ，其他的不是框架所关心的内容。</p>\n<p>所以如何部署 <code>Django</code>  不是 <code>Django</code>  所需要关心的。</p>\n</blockquote>\n<h2 id=\"什么是wsgi\"><a class=\"markdownIt-Anchor\" href=\"#什么是wsgi\">#</a> 什么是 WSGI</h2>\n<blockquote>\n<p><code>WSGI</code>  是一种  <code>python</code>  专用 的 <code>web</code>  协议 和 <code>http</code>  类似</p>\n<p>WSGI 实质： <code>WSGI</code>  是一种描述 web 服务器（如  <code>nginx</code> ， <code>uWSGI web服务器</code>  ）如何与 <code>web框架</code>  （如用  <code>Django</code> 、 <code>Flask框架</code> 写的程序）通信的规范、协议</p>\n<p><code>WSGI</code>  定义了使用  <code>python</code>  编写的 <code>web app(django)</code>  与 <code>web server（uWSGI）</code> 之间接口格式</p>\n</blockquote>\n<h2 id=\"为什么需要web协议\"><a class=\"markdownIt-Anchor\" href=\"#为什么需要web协议\">#</a> 为什么需要 web 协议</h2>\n<blockquote>\n<p>不同的框架有不同的开发方式，但是无论如何，开发出的 应用程序 ( <code>django</code> ) 都要和服务器 ( <code>nginx</code> ) 程序配合 ，才能为用户提供服务</p>\n<p>这样， 服务器程序 ( <code>nginx</code> ) 就需要为不同的框架提供不同的支持，只有支持它的服务器才 能被开发出的应用使用，显然这是不可行的。</p>\n<p><code>web协议本质</code> ：就是定义了 <code> Web服务器</code> 和 <code>Web应用程序</code> 或 <code>框架</code> 之间的一种简单而通用的接口规范</p>\n</blockquote>\n<h2 id=\"什么是uwsgi\"><a class=\"markdownIt-Anchor\" href=\"#什么是uwsgi\">#</a> 什么是 uWSGI</h2>\n<blockquote>\n<p><code>uWSGI</code>  是一个全功能的 HTTP 服务器，实现了 <code>WSGI协议</code> 、 <code>uwsgi协议</code> 、 <code>http协议</code> 等。</p>\n</blockquote>\n<h2 id=\"uwsgi作用\"><a class=\"markdownIt-Anchor\" href=\"#uwsgi作用\">#</a> uWSGI 作用</h2>\n<blockquote>\n<p>它要做的就是把 <code>HTTP协议</code> 转化成语言支持的网络协议，比如把 <code>HTTP协议</code> 转化成 <code>WSGI协议</code> ，让 <code>Python</code>  可以直接使用。</p>\n</blockquote>\n<h2 id=\"uwsgi特点\"><a class=\"markdownIt-Anchor\" href=\"#uwsgi特点\">#</a> uWSGI 特点</h2>\n<blockquote>\n<p>轻量级，易部署，性能比 <code>nginx</code>  差很多</p>\n</blockquote>\n<p><code>注意</code> ：</p>\n<ul>\n<li>如果架构是 <code>Nginx</code> + <code>uWSGI</code> + <code>APP</code> ， <code>uWSGI</code>  是一个中间件</li>\n<li>如果架构是 <code>uWSGI</code> + <code>APP</code> ， <code>uWSGI</code>  是一个服务器</li>\n</ul>\n<h2 id=\"nginx\"><a class=\"markdownIt-Anchor\" href=\"#nginx\">#</a> Nginx</h2>\n<blockquote>\n<p><code>Nginx</code>  是一个 Web 服务器，其中的 HTTP 服务器功能和 <code>uWSGI</code>  功能很类似</p>\n<p>但是 <code>Nginx</code>  还可以用作更多用途，比如最常用的反向代理、负载均衡、拦截攻击等，而且性能极高</p>\n</blockquote>\n<h2 id=\"django-uwsgi-nginx-部署的作用\"><a class=\"markdownIt-Anchor\" href=\"#django-uwsgi-nginx-部署的作用\">#</a> Django + Uwsgi + Nginx 部署的作用</h2>\n<h3 id=\"django-uwsgi-nginx方案\"><a class=\"markdownIt-Anchor\" href=\"#django-uwsgi-nginx方案\">#</a> Django + Uwsgi + Nginx 方案</h3>\n<p><img data-src=\"1.png\" alt=\"\"></p>\n<h4 id=\"请求处理整体流程\"><a class=\"markdownIt-Anchor\" href=\"#请求处理整体流程\">#</a> 请求处理整体流程</h4>\n<ul>\n<li><code>nginx</code>  接收到浏览器发送过来的 <code>http请求</code> ，将包进行解析，分析 url</li>\n<li>静态文件请求：就直接访问用户给 <code>nginx</code>  配置的静态文件目录，直接返回用户请求的静态文件  <code>(html/css/js/图片) </code></li>\n<li>动态接口请求：那么 <code>nginx</code>  就将请求转发给 <code>uWSGI</code> ，最后到达 <code>django</code>  处理</li>\n</ul>\n<h4 id=\"各模块作用\"><a class=\"markdownIt-Anchor\" href=\"#各模块作用\">#</a> 各模块作用</h4>\n<ul>\n<li>\n<p><code>nginx</code> ：是对外的服务器，外部浏览器通过 <code>url</code>  访问 <code>nginx</code> ， <code>nginx</code>  主要处理静态请求</p>\n</li>\n<li>\n<p><code>uWSGI</code> ：是对内的服务器，主要用来处理动态请求</p>\n</li>\n<li>\n<p><code>uwsgi</code> ：是一种 <code>web协议</code> ，接收到请求之后将包进行处理，处理成 <code>wsgi</code>  可以接受的格式，并发给 <code>wsgi</code></p>\n</li>\n<li>\n<p><code>wsgi</code> ：是 <code>python</code>  专用的 <code>web协议</code> ，根据请求调用应用程序 <code>（Django）</code> 的某个文件，某个文件的某个函数</p>\n</li>\n<li>\n<p><code>Django</code> ：是真正干活的，查询数据等资源，把处理的结果再次返回给 <code>WSGI</code> ，  <code>WSGI</code>  将返回值进行打包，打包成 <code>uwsgi</code>  能够接收的格式</p>\n</li>\n<li>\n<p><code>uwsgi</code>  接收 <code>wsgi</code>  发送的请求，并转发给 <code>nginx</code> , <code>nginx</code>  最终将返回值返回给浏览器</p>\n</li>\n</ul>\n<h3 id=\"django-uwsgi方案\"><a class=\"markdownIt-Anchor\" href=\"#django-uwsgi方案\">#</a> Django + uwsgi 方案</h3>\n<ul>\n<li>\n<p>没有 <code>nginx</code>  而只有 <code>uwsgi</code>  的服务器，则是 <code>Internet请求</code> 直接由 <code>uwsgi</code>  处理，并反馈到 <code>web项目</code> 中。</p>\n</li>\n<li>\n<p><code>nginx</code>  可以实现安全过滤，防 <code>DDOS</code>  等保护安全的操作，并且如果配置了多台服务器， <code>nginx</code>  可以保证服务器的负载相对均衡。</p>\n</li>\n<li>\n<p>而 <code>uwsgi</code>  则是一个 <code>web服务器</code> ，实现了 <code>WSGI协议(Web Server Gateway Interface)</code> ， <code>http协议</code> 等，它可以接收和处理请求，发出响应等。<br>\n只用 <code>uwsgi</code>  也是可以的。</p>\n</li>\n</ul>\n<h3 id=\"nginx和uwsgi特点\"><a class=\"markdownIt-Anchor\" href=\"#nginx和uwsgi特点\">#</a> nginx 和 uWSGI 特点</h3>\n<h4 id=\"nginx的作用\"><a class=\"markdownIt-Anchor\" href=\"#nginx的作用\">#</a> nginx 的作用</h4>\n<ul>\n<li>\n<p>反向代理，可以拦截一些 <code>web攻击</code> ，保护后端的 <code>web服务器</code></p>\n</li>\n<li>\n<p>负载均衡，根据轮询算法，分配请求到多节点 <code>web服务器</code></p>\n</li>\n<li>\n<p>缓存静态资源，加快访问速度，释放 <code>web服务器</code> 的内存占用，专项专用</p>\n</li>\n</ul>\n<h4 id=\"uwsgi的适用\"><a class=\"markdownIt-Anchor\" href=\"#uwsgi的适用\">#</a> uWSGI 的适用</h4>\n<ul>\n<li>\n<p>单节点服务器的简易部署</p>\n</li>\n<li>\n<p>轻量级，好部署</p>\n</li>\n</ul>\n<h2 id=\"django-uwsgi-nginx-的生产环境部署\"><a class=\"markdownIt-Anchor\" href=\"#django-uwsgi-nginx-的生产环境部署\">#</a> Django + Uwsgi + Nginx 的生产环境部署</h2>\n<h3 id=\"django的settingspy配置\"><a class=\"markdownIt-Anchor\" href=\"#django的settingspy配置\">#</a> Django 的 <code>settings.py</code>  配置</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 1. 修改配置 </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 正式上线关闭调试模式，不会暴露服务器信息 </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>DEBUG <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 2. 允许的主机 </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>ALLOWED_HOSTS <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'xxx.com'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'127.0.0.1'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 3. 前端修改接口地址（vue）</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>http<span class=\"token punctuation\">:</span><span class=\"token operator\">//</span><span class=\"token number\">192.168</span><span class=\"token number\">.56</span><span class=\"token number\">.100</span><span class=\"token punctuation\">:</span><span class=\"token number\">8888</span><span class=\"token operator\">/</span>   <span class=\"token operator\">=</span><span class=\"token operator\">></span>  http<span class=\"token punctuation\">:</span><span class=\"token operator\">//</span>xxx<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 4.MySQL 数据库根据实际情况配置（注意地址）</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>DATABASES <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token string\">'default'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token string\">'ENGINE'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'django.db.backends.mysql'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token string\">'NAME'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'loonflow'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token string\">'USER'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'root'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token string\">'PASSWORD'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token string\">'HOST'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'127.0.0.1'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token string\">'PORT'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'3306'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># 5. 缓存配置，改为默认，最简单形式（配置 redis）</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>CACHES <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token string\">\"default\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token string\">\"BACKEND\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"django_redis.cache.RedisCache\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token string\">\"LOCATION\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"redis://127.0.0.1:6379/0\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token string\">\"OPTIONS\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token string\">\"CLIENT_CLASS\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"django_redis.client.DefaultClient\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\"># 6. 收集静态文件 </span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\"># 静态资源收集位置 </span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>STATIC_ROOT <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>BASE_DIR<span class=\"token punctuation\">,</span> <span class=\"token string\">'static'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\"># 7. 命令行执行 </span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>python manage<span class=\"token punctuation\">.</span>py collectstatic</pre></td></tr></table></figure><h3 id=\"安装uwsgi-配置uwsgi\"><a class=\"markdownIt-Anchor\" href=\"#安装uwsgi-配置uwsgi\">#</a> 安装 uwsgi 配置 uWSGI</h3>\n<h4 id=\"安装uwsgi\"><a class=\"markdownIt-Anchor\" href=\"#安装uwsgi\">#</a> 安装 uwsgi</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>workon syl\t\t\t\t\t<span class=\"token comment\"># 进入虚拟环境 </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>pip3 install uwsgi\t\t\t\t<span class=\"token comment\"># 安装</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>whereis uwsgi          \t\t\t<span class=\"token comment\"># 查看 uwsgi 安装路径 uwsgi: </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">/</span>root<span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>virtualenvs<span class=\"token operator\">/</span>syl<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>uwsgi</pre></td></tr></table></figure><h4 id=\"配置uwgsiini启动文件\"><a class=\"markdownIt-Anchor\" href=\"#配置uwgsiini启动文件\">#</a> 配置 uwgsi.ini 启动文件</h4>\n<ul>\n<li>在 <code> uwsgi_conf</code>  下新建 <code>uwsgi.ini</code></li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>uwsgi<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 使用 Nginx 连接时使用，Django 程序所在服务器地址和端口号</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>socket<span class=\"token operator\">=</span><span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span><span class=\"token punctuation\">:</span><span class=\"token number\">8000</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 项目目录绝对路径</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>chdir<span class=\"token operator\">=</span><span class=\"token operator\">/</span>root<span class=\"token operator\">/</span>loonflow_project<span class=\"token operator\">/</span>loonflow</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 项目中 wsgi.py 文件的目录，相对于项目目录</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>wsgi<span class=\"token operator\">-</span><span class=\"token builtin\">file</span><span class=\"token operator\">=</span>loonflow<span class=\"token operator\">/</span>wsgi<span class=\"token punctuation\">.</span>py</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 进程数（机器核数的 1 倍）</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>processes<span class=\"token operator\">=</span><span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 线程数</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>threads<span class=\"token operator\">=</span><span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># uwsgi 服务器的角色</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>master<span class=\"token operator\">=</span><span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 存放进程编号的文件</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>pidfile<span class=\"token operator\">=</span>uwsgi<span class=\"token punctuation\">.</span>pid</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 日志文件</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>daemonize<span class=\"token operator\">=</span>uwsgi<span class=\"token punctuation\">.</span>log</pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># 指定依赖的虚拟环境</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>virtualenv<span class=\"token operator\">=</span><span class=\"token operator\">/</span>root<span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>virtualenvs<span class=\"token operator\">/</span>syl</pre></td></tr></table></figure><h3 id=\"安装与配置nginx\"><a class=\"markdownIt-Anchor\" href=\"#安装与配置nginx\">#</a> 安装与配置 nginx</h3>\n<h4 id=\"安装nginx\"><a class=\"markdownIt-Anchor\" href=\"#安装nginx\">#</a> 安装 nginx</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>workon syl\t\t\t\t\t<span class=\"token comment\"># 进入虚拟环境 </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>sudo apt update\t\t\t\t<span class=\"token comment\"># 更新 apt </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>sudo apt install nginx           \t\t<span class=\"token comment\"># 安装 nginx</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>sudo systemctl status nginx      \t\t<span class=\"token comment\"># 查看 nginx 状态</span></pre></td></tr></table></figure><h4 id=\"配置nginx\"><a class=\"markdownIt-Anchor\" href=\"#配置nginx\">#</a> 配置 nginx</h4>\n<ul>\n<li>在 <code>/etc/nginx/conf.d/</code>  文件夹下新建任意名字  <code>xxx.conf</code>  即可，写入的内容是官方给的</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>server <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    listen          <span class=\"token number\">8888</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    server_name     <span class=\"token number\">192.168</span><span class=\"token number\">.56</span><span class=\"token number\">.100</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    location <span class=\"token operator\">/</span>static <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        alias <span class=\"token operator\">/</span>root<span class=\"token operator\">/</span>loonflow_project<span class=\"token operator\">/</span>loonflow<span class=\"token operator\">/</span>static<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    location <span class=\"token operator\">/</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        include uwsgi_params<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        uwsgi_pass <span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span><span class=\"token punctuation\">:</span><span class=\"token number\">8000</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        uwsgi_ignore_client_abort on<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"etcnginxnginxconfnginx主配置文件解读-不用变\"><a class=\"markdownIt-Anchor\" href=\"#etcnginxnginxconfnginx主配置文件解读-不用变\">#</a>  <code>/etc/nginx/nginx.conf</code> nginx 主配置文件解读 (不用变)</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>user www<span class=\"token operator\">-</span>data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>worker_processes auto<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>pid <span class=\"token operator\">/</span>run<span class=\"token operator\">/</span>nginx<span class=\"token punctuation\">.</span>pid<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>include <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>modules<span class=\"token operator\">-</span>enabled<span class=\"token operator\">/</span><span class=\"token operator\">*</span><span class=\"token punctuation\">.</span>conf<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>events <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tworker_connections <span class=\"token number\">768</span><span class=\"token punctuation\">;</span>\t\t\t <span class=\"token comment\"># 链接数量 </span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>http <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tsendfile on<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\ttcp_nopush on<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\ttcp_nodelay on<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tkeepalive_timeout <span class=\"token number\">65</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\ttypes_hash_max_size <span class=\"token number\">2048</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tinclude <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>mime<span class=\"token punctuation\">.</span>types<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tdefault_type application<span class=\"token operator\">/</span>octet<span class=\"token operator\">-</span>stream<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tssl_protocols TLSv1 TLSv1<span class=\"token punctuation\">.</span><span class=\"token number\">1</span> TLSv1<span class=\"token punctuation\">.</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> <span class=\"token comment\"># Dropping SSLv3, ref: POODLE</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tssl_prefer_server_ciphers on<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\taccess_log <span class=\"token operator\">/</span>var<span class=\"token operator\">/</span>log<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>access<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">;</span>\t\t <span class=\"token comment\"># 客户浏览器访问 nginx 服务记录（客 户户端访问异常时可以查看）</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\terror_log <span class=\"token operator\">/</span>var<span class=\"token operator\">/</span>log<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>error<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">;</span>\t\t\t <span class=\"token comment\"># nginx 错误日志（nginx 启动时报错 的日志）</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\tgzip on<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\tinclude <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>conf<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span><span class=\"token operator\">*</span><span class=\"token punctuation\">.</span>conf<span class=\"token punctuation\">;</span>\t\t\t <span class=\"token comment\"># nginx 扩展配置文件 </span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\tinclude <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>sites<span class=\"token operator\">-</span>enabled<span class=\"token operator\">/</span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"nginx和uwsgi启动-关闭-查看日志命令\"><a class=\"markdownIt-Anchor\" href=\"#nginx和uwsgi启动-关闭-查看日志命令\">#</a> nginx 和 uwsgi 启动、关闭、查看日志命令</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">'''1.启动并查看nginx日志'''</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>systemctl restart nginx         \t <span class=\"token comment\"># 开启 nginx </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>tail <span class=\"token operator\">-</span>f <span class=\"token operator\">/</span>var<span class=\"token operator\">/</span>log<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>access<span class=\"token punctuation\">.</span>log    <span class=\"token comment\"># 查看 nginx 接入日志 </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>tail <span class=\"token operator\">-</span>f <span class=\"token operator\">/</span>var<span class=\"token operator\">/</span>log<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>error<span class=\"token punctuation\">.</span>log     <span class=\"token comment\"># 查看 nginx 错误日志</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token triple-quoted-string string\">'''2.启动并查看uwsgi日志'''</span>     </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">:</span>uwsgi_conf<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>cd <span class=\"token operator\">/</span>teach<span class=\"token operator\">/</span>shiyanlou_project<span class=\"token operator\">/</span>uwsgi_conf   <span class=\"token comment\"># 进入项目目录 </span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">:</span>uwsgi_conf<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>uwsgi <span class=\"token operator\">-</span><span class=\"token operator\">-</span>ini uwsgi<span class=\"token punctuation\">.</span>ini                    <span class=\"token comment\"># 启动 uwsgi 的 django 项目    </span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">:</span>uwsgi_conf<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>uwsgi <span class=\"token operator\">-</span><span class=\"token operator\">-</span>stop uwsgi<span class=\"token punctuation\">.</span>pid\t\t\t<span class=\"token comment\"># 关闭 uwsgi     </span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">:</span>uwsgi_conf<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>tail <span class=\"token operator\">-</span>f uwsgi<span class=\"token punctuation\">.</span>log                        <span class=\"token comment\"># 查看 uwsgi 日志    </span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">:</span>uwsgi_conf<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>tail <span class=\"token operator\">-</span>f <span class=\"token operator\">*</span>    </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">:</span>uwsgi_conf<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>ps <span class=\"token operator\">-</span>ef<span class=\"token operator\">|</span>grep uwsgi       \t\t\t\t<span class=\"token comment\"># 查看 uwsgi 服务是否启动</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    root      <span class=\"token number\">92328</span>  <span class=\"token number\">89266</span>  <span class=\"token number\">0</span> <span class=\"token number\">14</span><span class=\"token punctuation\">:</span><span class=\"token number\">37</span> pts<span class=\"token operator\">/</span><span class=\"token number\">1</span>    <span class=\"token number\">00</span><span class=\"token punctuation\">:</span><span class=\"token number\">00</span><span class=\"token punctuation\">:</span><span class=\"token number\">00</span> grep <span class=\"token operator\">-</span><span class=\"token operator\">-</span>color<span class=\"token operator\">=</span>auto uwsgi</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">:</span>uwsgi_conf<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>netstat <span class=\"token operator\">-</span>anptu <span class=\"token operator\">|</span> grep <span class=\"token number\">8888</span>\t\t\t<span class=\"token comment\"># 查看 8888 端口被哪一个程序 占用</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>tail <span class=\"token operator\">-</span>f access_log <span class=\"token operator\">/</span>var<span class=\"token operator\">/</span>log<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>access<span class=\"token punctuation\">.</span>log\t\t<span class=\"token comment\"># 接入日志 </span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">[</span>root@dev<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>tail <span class=\"token operator\">-</span>f <span class=\"token operator\">/</span>var<span class=\"token operator\">/</span>log<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>error<span class=\"token punctuation\">.</span>log\t\t\t\t<span class=\"token comment\"># 当你启动、关闭 nginx 时报错</span></pre></td></tr></table></figure>",
            "tags": [
                "生产环境部署"
            ]
        },
        {
            "id": "http://example.com/Django%E6%A1%86%E6%9E%B6/Django-Celery%E5%BC%82%E6%AD%A5%E6%A1%86%E6%9E%B6/",
            "url": "http://example.com/Django%E6%A1%86%E6%9E%B6/Django-Celery%E5%BC%82%E6%AD%A5%E6%A1%86%E6%9E%B6/",
            "title": "Celery异步框架",
            "date_published": "2020-11-20T08:18:25.000Z",
            "content_html": "<h2 id=\"celery异步框架\"><a class=\"markdownIt-Anchor\" href=\"#celery异步框架\">#</a> Celery 异步框架</h2>\n<h3 id=\"介绍\"><a class=\"markdownIt-Anchor\" href=\"#介绍\">#</a> 介绍</h3>\n<blockquote>\n<p><code>Celery </code> 是一个 基于 <code>python</code>  开发的分布式异步消息任务队列，通过它可以轻松的实现任务的异步处理， 如果你的业务场景中需要用到异步任务，就可以考虑使用 <code>celery</code></p>\n<p>你想对 100 台机器执行一条批量命令，可能会花很长时间 ，但你不想让你的程序等着结果返回，而是给你返回 一个任务 ID, 你过一段时间只需要拿着这个任务 id 就可以拿到任务执行结果， 在任务执行 ing 进行时，你可以继续做其它的事情</p>\n<p><code>Celery </code> 在执行任务时需要通过一个消息中间件来接收和发送任务消息，以及存储任务结果， 一般使用 <code>rabbitMQ </code> or  <code>Redis</code></p>\n</blockquote>\n<h3 id=\"优点\"><a class=\"markdownIt-Anchor\" href=\"#优点\">#</a> 优点</h3>\n<ul>\n<li>简单：一但熟悉了 <code>celery</code>  的工作流程后，配置和使用还是比较简单的</li>\n<li>高可用：当任务执行失败或执行过程中发生连接中断， <code>celery </code> 会自动尝试重新执行任务</li>\n<li>快速：一个单进程的 <code>celery</code>  每分钟可处理上百万个任务</li>\n<li>灵活： 几乎 <code>celery</code>  的各个组件都可以被扩展及自定制</li>\n</ul>\n<h3 id=\"celery架构图\"><a class=\"markdownIt-Anchor\" href=\"#celery架构图\">#</a> celery 架构图</h3>\n<p><img data-src=\"1.png\" alt=\"\"></p>\n<h3 id=\"celery-扮演生产者和消费者的角色\"><a class=\"markdownIt-Anchor\" href=\"#celery-扮演生产者和消费者的角色\">#</a> Celery 扮演生产者和消费者的角色</h3>\n<ul>\n<li><code>Celery Beat</code>  : 任务调度器. Beat 进程会读取配置文件的内容，周期性的将配置中到期需要执行的任务发送给任务队列.</li>\n<li><code>Celery Worker</code>  : 执行任务的消费者，通常会在多台服务器运行多个消费者，提高运行效率.</li>\n<li><code>Broker</code>  : 消息代理，队列本身。也称为消息中间件。接受任务生产者发送过来的任务消息，存进队列再按序分发给任务消费方 (通常是消息队列或者数据库).</li>\n<li><code>Producer </code> : 任务生产者。调用 Celery API , 函数或者装饰器，而产生任务并交给任务队列处理的都是任务生产者.</li>\n<li><code>Result Backend</code>  : 任务处理完成之后保存状态信息和结果，以供查询.</li>\n</ul>\n<h3 id=\"django实现异步任务与定时任务\"><a class=\"markdownIt-Anchor\" href=\"#django实现异步任务与定时任务\">#</a> Django 实现异步任务与定时任务</h3>\n<h4 id=\"相关依赖包\"><a class=\"markdownIt-Anchor\" href=\"#相关依赖包\">#</a> 相关依赖包</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip install Django<span class=\"token operator\">==</span><span class=\"token number\">2.2</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>pip install celery<span class=\"token operator\">==</span><span class=\"token number\">4.4</span><span class=\"token number\">.7</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>pip install django<span class=\"token operator\">-</span>celery<span class=\"token operator\">-</span>beat<span class=\"token operator\">==</span><span class=\"token number\">2.1</span><span class=\"token number\">.0</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>pip install redis<span class=\"token operator\">==</span><span class=\"token number\">3.5</span><span class=\"token number\">.3</span></pre></td></tr></table></figure><h4 id=\"目录结构\"><a class=\"markdownIt-Anchor\" href=\"#目录结构\">#</a> 目录结构</h4>\n<p><img data-src=\"2.png\" alt=\"\"></p>\n<h4 id=\"celerypy\"><a class=\"markdownIt-Anchor\" href=\"#celerypy\">#</a>  <code>celery.py</code></h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> celery <span class=\"token keyword\">import</span> Celery</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> os<span class=\"token punctuation\">,</span>sys</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> django</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 1. 添加 django 项目根路径</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>CELERY_BASE_DIR <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>dirname<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>abspath<span class=\"token punctuation\">(</span>__file__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>sys<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>CELERY_BASE_DIR<span class=\"token punctuation\">,</span> <span class=\"token string\">'../loonflow'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 2. 添加 django 环境</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>os<span class=\"token punctuation\">.</span>environ<span class=\"token punctuation\">.</span>setdefault<span class=\"token punctuation\">(</span><span class=\"token string\">\"DJANGO_SETTINGS_MODULE\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"loonflow.settings\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>django<span class=\"token punctuation\">.</span>setup<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 读取配置</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 3.celery 基本配置</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>app <span class=\"token operator\">=</span> Celery<span class=\"token punctuation\">(</span><span class=\"token string\">'task'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    broker <span class=\"token operator\">=</span> <span class=\"token string\">'redis://127.0.0.1:6379/14'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    backend <span class=\"token operator\">=</span> <span class=\"token string\">'redis://127.0.0.1:6379/15'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    include<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'celery_task.tasks'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># 4. 实例化时可以添加下面这个属性</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>app<span class=\"token punctuation\">.</span>conf<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   result_expires<span class=\"token operator\">=</span><span class=\"token number\">3600</span><span class=\"token punctuation\">,</span>        <span class=\"token comment\">#执行结果放到 redis 里，一个小时没人取就丢弃</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># 5. 配置定时任务：每 5 秒钟执行 调用一次 celery_task 下 tasks.py 文件中的 add 函数</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>app<span class=\"token punctuation\">.</span>conf<span class=\"token punctuation\">.</span>beat_schedule <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token string\">'add-every-5-seconds'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token string\">'task'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'celery_task.tasks.test_task_crontab'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token string\">'schedule'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5.0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token string\">'args'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\"># 时区</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>app<span class=\"token punctuation\">.</span>conf<span class=\"token punctuation\">.</span>timezone <span class=\"token operator\">=</span> <span class=\"token string\">'Asia/Shanghai'</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>   app<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"taskspy\"><a class=\"markdownIt-Anchor\" href=\"#taskspy\">#</a>  <code>tasks.py</code></h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>celery <span class=\"token keyword\">import</span> app</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> os<span class=\"token punctuation\">,</span>sys</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>celery <span class=\"token keyword\">import</span> CELERY_BASE_DIR</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token triple-quoted-string string\">'''测试定时任务'''</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>task</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">test_task_crontab</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token triple-quoted-string string\">'''添加django项目路径'''</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    sys<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>CELERY_BASE_DIR<span class=\"token punctuation\">,</span> <span class=\"token string\">'../loonflow'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">from</span> libs<span class=\"token punctuation\">.</span>aliyun_sms <span class=\"token keyword\">import</span> test_crontab</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    res <span class=\"token operator\">=</span> test_crontab<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 执行异步任务</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>task</span><span class=\"token punctuation\">(</span>bind<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">send_sms_code</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> mobile<span class=\"token punctuation\">,</span> datas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    sys<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>CELERY_BASE_DIR<span class=\"token punctuation\">,</span> <span class=\"token string\">'../loonflow'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\"># 在方法中导包</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">from</span> libs<span class=\"token punctuation\">.</span>aliyun_sms <span class=\"token keyword\">import</span> send_sms</pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token comment\"># time.sleep(5)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token comment\"># 用 res 接收发送结果，成功是:０，　失败是：－１</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        res <span class=\"token operator\">=</span> send_sms<span class=\"token punctuation\">(</span>mobile<span class=\"token punctuation\">,</span> datas<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        res <span class=\"token operator\">=</span> <span class=\"token string\">'-1'</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">if</span> res <span class=\"token operator\">==</span> <span class=\"token string\">'-1'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token comment\"># 如果发送结果是 -1  就重试.</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        self<span class=\"token punctuation\">.</span>retry<span class=\"token punctuation\">(</span>countdown<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> max_retries<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> exc<span class=\"token operator\">=</span>Exception<span class=\"token punctuation\">(</span><span class=\"token string\">'短信发送失败'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"aliyun_smspy\"><a class=\"markdownIt-Anchor\" href=\"#aliyun_smspy\">#</a>  <code>aliyun_sms.py</code></h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">send_sms</span><span class=\"token punctuation\">(</span>phone<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    client <span class=\"token operator\">=</span> AcsClient<span class=\"token punctuation\">(</span>ALY_ACCESSKEY_ID<span class=\"token punctuation\">,</span> ALY_ACCESSKEY_SECRET<span class=\"token punctuation\">,</span> <span class=\"token string\">'cn-hangzhou'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    request <span class=\"token operator\">=</span> CommonRequest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    request<span class=\"token punctuation\">.</span>set_accept_format<span class=\"token punctuation\">(</span><span class=\"token string\">'json'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    request<span class=\"token punctuation\">.</span>set_domain<span class=\"token punctuation\">(</span><span class=\"token string\">'dysmsapi.aliyuncs.com'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    request<span class=\"token punctuation\">.</span>set_method<span class=\"token punctuation\">(</span><span class=\"token string\">'POST'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    request<span class=\"token punctuation\">.</span>set_protocol_type<span class=\"token punctuation\">(</span><span class=\"token string\">'https'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    request<span class=\"token punctuation\">.</span>set_version<span class=\"token punctuation\">(</span><span class=\"token string\">'2017-05-25'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    request<span class=\"token punctuation\">.</span>set_action_name<span class=\"token punctuation\">(</span><span class=\"token string\">'SendSms'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    request<span class=\"token punctuation\">.</span>add_query_param<span class=\"token punctuation\">(</span><span class=\"token string\">'RegionId'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cn-hangzhou\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    request<span class=\"token punctuation\">.</span>add_query_param<span class=\"token punctuation\">(</span><span class=\"token string\">'PhoneNumbers'</span><span class=\"token punctuation\">,</span> phone<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    request<span class=\"token punctuation\">.</span>add_query_param<span class=\"token punctuation\">(</span><span class=\"token string\">'SignName'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ABC商城\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    request<span class=\"token punctuation\">.</span>add_query_param<span class=\"token punctuation\">(</span><span class=\"token string\">'TemplateCode'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"SMS_205407934\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    request<span class=\"token punctuation\">.</span>add_query_param<span class=\"token punctuation\">(</span><span class=\"token string\">'TemplateParam'</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    response <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span>do_action<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\"># python2:  print(response)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    res <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"##########################################\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'执行了这个方法 send_message'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">test_crontab</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'############### 执行test_crontab测试任务 #############'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'############### 审批超时短信提醒 #############'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"测试定时任务\"><a class=\"markdownIt-Anchor\" href=\"#测试定时任务\">#</a> 测试定时任务</h4>\n<blockquote>\n<p>开启异步 celery -A celery_task worker -l INFO</p>\n</blockquote>\n<p><img data-src=\"3.png\" alt=\"\"></p>\n<blockquote>\n<p>开启定时任务  celery -A celery_task beat -l INFO</p>\n</blockquote>\n<p><img data-src=\"4.png\" alt=\"\"></p>\n<h4 id=\"测试异步任务\"><a class=\"markdownIt-Anchor\" href=\"#测试异步任务\">#</a> 测试异步任务</h4>\n<p><img data-src=\"5.png\" alt=\"\"></p>\n<h3 id=\"celery管理\"><a class=\"markdownIt-Anchor\" href=\"#celery管理\">#</a> Celery 管理</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>celery <span class=\"token operator\">-</span>A celery_task worker <span class=\"token operator\">-</span>l INFO\t\t\t<span class=\"token comment\"># 单线程</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>celery <span class=\"token operator\">-</span>A celery_task status\t\t\t\t<span class=\"token comment\"># 查看当前有哪些 worker 在运行</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>celery multi start w1 w2 <span class=\"token operator\">-</span>A celery_task <span class=\"token operator\">-</span>l INFO\t\t<span class=\"token comment\"># 一次性启动 w1，w2 两个 worker</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>celery multi stop w1 w2 <span class=\"token operator\">-</span>A celery_task\t\t\t<span class=\"token comment\">#停止 w1，w2 两个 worker</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 项目中启动 celery worker , 并发数最多 50，最少 10 个</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>celery multi start celery_task <span class=\"token operator\">-</span>A celery_task <span class=\"token operator\">-</span>l debug <span class=\"token operator\">-</span><span class=\"token operator\">-</span>autoscale<span class=\"token operator\">=</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 在项目中关闭 celery worker 所有进程</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>ps auxww<span class=\"token operator\">|</span>grep <span class=\"token string\">\"celery worker\"</span><span class=\"token operator\">|</span>grep <span class=\"token operator\">-</span>v grep<span class=\"token operator\">|</span>awk <span class=\"token string\">'&#123;print $2&#125;'</span><span class=\"token operator\">|</span>xargs kill <span class=\"token operator\">-</span><span class=\"token number\">9</span></pre></td></tr></table></figure><h3 id=\"django-celery-beat管理\"><a class=\"markdownIt-Anchor\" href=\"#django-celery-beat管理\">#</a> django-celery-beat 管理</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 启动 celery beat</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>celery <span class=\"token operator\">-</span>A celery_task beat <span class=\"token operator\">-</span>l INFO</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 项目中启动 celery beat</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>celery <span class=\"token operator\">-</span>A celery_task beat <span class=\"token operator\">-</span>l debug <span class=\"token operator\">>></span> <span class=\"token operator\">/</span>aaa<span class=\"token operator\">/</span>Scheduler<span class=\"token punctuation\">.</span>log <span class=\"token number\">2</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 停止 celery beat 杀死所有心跳进程</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>ps <span class=\"token operator\">-</span>ef <span class=\"token operator\">|</span> grep <span class=\"token operator\">-</span>E <span class=\"token string\">\"celery -A celery_task beat\"</span> <span class=\"token operator\">|</span> grep <span class=\"token operator\">-</span>v grep<span class=\"token operator\">|</span> awk <span class=\"token string\">'&#123;print $2&#125;'</span> <span class=\"token operator\">|</span> xargs kill <span class=\"token operator\">-</span>TERM <span class=\"token operator\">&amp;</span><span class=\"token operator\">></span> <span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span>null</pre></td></tr></table></figure>",
            "tags": [
                "Celery"
            ]
        },
        {
            "id": "http://example.com/Django%E6%A1%86%E6%9E%B6/Django-JWT%E4%BD%BF%E7%94%A8/",
            "url": "http://example.com/Django%E6%A1%86%E6%9E%B6/Django-JWT%E4%BD%BF%E7%94%A8/",
            "title": "Django--JWT使用",
            "date_published": "2020-04-22T12:22:01.000Z",
            "content_html": "<h3 id=\"1jwt安装配置\"><a class=\"markdownIt-Anchor\" href=\"#1jwt安装配置\">#</a> 1.JWT 安装配置</h3>\n<ul>\n<li>安装 JWT</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip install djangorestframework<span class=\"token operator\">-</span>jwt<span class=\"token operator\">==</span><span class=\"token number\">1.11</span><span class=\"token number\">.0</span></pre></td></tr></table></figure><ul>\n<li>在 <code>settings.py</code>  配置 jwt 载荷中的有效期设置</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># jwt 载荷中的有效期设置</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>JWT_AUTH <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\"># 1.token 前缀：headers 中 Authorization 值的前缀</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token string\">'JWT_AUTH_HEADER_PREFIX'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'JWT'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\"># 2.token 有效期：一天有效</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token string\">'JWT_EXPIRATION_DELTA'</span><span class=\"token punctuation\">:</span> datetime<span class=\"token punctuation\">.</span>timedelta<span class=\"token punctuation\">(</span>days<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\"># 3. 刷新 token：允许使用旧的 token 换新 token</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token string\">'JWT_ALLOW_REFRESH'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\"># 4.token 有效期：token 在 24 小时内过期，可续期 token</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token string\">'JWT_REFRESH_EXPIRATION_DELTA'</span><span class=\"token punctuation\">:</span> datetime<span class=\"token punctuation\">.</span>timedelta<span class=\"token punctuation\">(</span>hours<span class=\"token operator\">=</span><span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\"># 5. 自定义 JWT 载荷信息：自定义返回格式，需要手工创建</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token string\">'JWT_RESPONSE_PAYLOAD_HANDLER'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'app01.views.jwt_response_payload_handler'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>在 <code>settings.py</code>  配置默认的认证方式</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>REST_FRAMEWORK <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\"># 认证器</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token string\">'DEFAULT_AUTHENTICATION_CLASSES'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token string\">'rest_framework_jwt.authentication.JSONWebTokenAuthentication'</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 在 DRF 中配置 JWT 认证</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>在 <code>settings.py</code>  配置自定义验证后端登录</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>AUTHENTICATION_BACKENDS <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token string\">'app01.views.Manylogin'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><ul>\n<li>在 <code>settings.py</code>  注册用户模型</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>AUTH_USER_MODEL <span class=\"token operator\">=</span> <span class=\"token string\">'app01.User'</span></pre></td></tr></table></figure><h3 id=\"2重写django用户模型\"><a class=\"markdownIt-Anchor\" href=\"#2重写django用户模型\">#</a> 2. 重写 Django 用户模型</h3>\n<ul>\n<li><code>models.py</code></li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>db <span class=\"token keyword\">import</span> models</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>contrib<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> AbstractUser</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 用户表</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span>AbstractUser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    username <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span>unique<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    password <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    email <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span>null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>blank<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    phone <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span>null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>blank<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        db_table <span class=\"token operator\">=</span> <span class=\"token string\">'tb_user'</span></pre></td></tr></table></figure><h3 id=\"3生成token\"><a class=\"markdownIt-Anchor\" href=\"#3生成token\">#</a> 3. 生成 Token</h3>\n<ul>\n<li><code>utils.py</code></li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> rest_framework_jwt<span class=\"token punctuation\">.</span>settings <span class=\"token keyword\">import</span> api_settings</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">creare_token</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    jwt_payload_handler <span class=\"token operator\">=</span> api_settings<span class=\"token punctuation\">.</span>JWT_PAYLOAD_HANDLER</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    jwt_encode_handler <span class=\"token operator\">=</span> api_settings<span class=\"token punctuation\">.</span>JWT_ENCODE_HANDLER</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    payload <span class=\"token operator\">=</span> jwt_payload_handler<span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    token <span class=\"token operator\">=</span> jwt_encode_handler<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> token</pre></td></tr></table></figure><h3 id=\"4序列化器\"><a class=\"markdownIt-Anchor\" href=\"#4序列化器\">#</a> 4. 序列化器</h3>\n<ul>\n<li><code>serializers.py</code></li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> rest_framework <span class=\"token keyword\">import</span> serializers</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>contrib<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span>hashers <span class=\"token keyword\">import</span> make_password</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>utils <span class=\"token keyword\">import</span> creare_token</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CreateUserSerializers</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>Serializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    username <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    password <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    email <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>allow_null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    phone <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    token <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>read_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> validated_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        user <span class=\"token operator\">=</span> User<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>create<span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>validated_data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        password <span class=\"token operator\">=</span> make_password<span class=\"token punctuation\">(</span>validated_data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'password'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        user<span class=\"token punctuation\">.</span>password <span class=\"token operator\">=</span> password</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        user<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        token <span class=\"token operator\">=</span> create_token<span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        user<span class=\"token punctuation\">.</span>token <span class=\"token operator\">=</span> token</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">return</span> user</pre></td></tr></table></figure><h3 id=\"5注册接口\"><a class=\"markdownIt-Anchor\" href=\"#5注册接口\">#</a> 5. 注册接口</h3>\n<ul>\n<li><code>views.py</code></li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>db<span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Q</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> rest_framework<span class=\"token punctuation\">.</span>views <span class=\"token keyword\">import</span> APIView</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> rest_framework<span class=\"token punctuation\">.</span>response <span class=\"token keyword\">import</span> Response</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>serializers <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span> <span class=\"token keyword\">import</span> models</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>contrib<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span>backends <span class=\"token keyword\">import</span> ModelBackend</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">from</span> rest_framework<span class=\"token punctuation\">.</span>permissions <span class=\"token keyword\">import</span> IsAuthenticated</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">from</span> rest_framework_jwt<span class=\"token punctuation\">.</span>authentication <span class=\"token keyword\">import</span> JSONWebTokenAuthentication</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">UserView</span><span class=\"token punctuation\">(</span>APIView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">post</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        data <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>data</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'username'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'password'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'password2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'email'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'phone'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'code'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">202</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'msg'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'参数不全'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">if</span> data<span class=\"token punctuation\">[</span><span class=\"token string\">'password'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> data<span class=\"token punctuation\">[</span><span class=\"token string\">'password2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'code'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">204</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'msg'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'两次密码不一致'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            user <span class=\"token operator\">=</span> CreateUserSerializers<span class=\"token punctuation\">(</span>data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            user<span class=\"token punctuation\">.</span>is_valid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            user<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'code'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'msg'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'创建用户成功'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'data'</span><span class=\"token punctuation\">:</span> user<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'code'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">201</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'msg'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'创建失败，请重试'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ul>\n<li><code>urls.py</code></li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>urls <span class=\"token keyword\">import</span> path</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> app01 <span class=\"token keyword\">import</span> views</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> rest_framework_jwt<span class=\"token punctuation\">.</span>views <span class=\"token keyword\">import</span> obtain_jwt_token</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>urlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    path<span class=\"token punctuation\">(</span><span class=\"token string\">'register/'</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>UserView<span class=\"token punctuation\">.</span>as_view<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><ul>\n<li>Postman 测试</li>\n</ul>\n<p><img data-src=\"1.png\" alt=\"\"></p>\n<h3 id=\"6登录及多形式登录\"><a class=\"markdownIt-Anchor\" href=\"#6登录及多形式登录\">#</a> 6. 登录及多形式登录</h3>\n<ul>\n<li><code>views.py</code></li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">jwt_response_payload_handler</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">,</span> user<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> request<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token string\">'authenticated'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'true'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> user<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token string\">'username'</span><span class=\"token punctuation\">:</span> user<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token string\">'phone'</span><span class=\"token punctuation\">:</span>user<span class=\"token punctuation\">.</span>phone<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token string\">'email'</span><span class=\"token punctuation\">:</span> user<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token string\">'token'</span><span class=\"token punctuation\">:</span> token<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 多形式登录</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Manylogin</span><span class=\"token punctuation\">(</span>ModelBackend<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\"># 重写 authenticate 方法</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">authenticate</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">,</span> username<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> password<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            user <span class=\"token operator\">=</span> User<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">(</span>username<span class=\"token operator\">=</span>username<span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> Q<span class=\"token punctuation\">(</span>phone<span class=\"token operator\">=</span>username<span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> Q<span class=\"token punctuation\">(</span>email<span class=\"token operator\">=</span>username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">if</span> user <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span> <span class=\"token keyword\">and</span> user<span class=\"token punctuation\">.</span>check_password<span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token keyword\">return</span> user</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span></pre></td></tr></table></figure><ul>\n<li><code>urls.py</code></li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>urls <span class=\"token keyword\">import</span> path</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> app01 <span class=\"token keyword\">import</span> views</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> rest_framework_jwt<span class=\"token punctuation\">.</span>views <span class=\"token keyword\">import</span> obtain_jwt_token</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>urlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    path<span class=\"token punctuation\">(</span><span class=\"token string\">'register/'</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>UserView<span class=\"token punctuation\">.</span>as_view<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    path<span class=\"token punctuation\">(</span><span class=\"token string\">'login/'</span><span class=\"token punctuation\">,</span> obtain_jwt_token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><ul>\n<li>Postman 测试登录</li>\n</ul>\n<p><img data-src=\"2.png\" alt=\"\"></p>\n<ul>\n<li>Postman 测试多形式登录</li>\n</ul>\n<p><img data-src=\"3.png\" alt=\"\"></p>\n<h3 id=\"7携带token访问所有用户\"><a class=\"markdownIt-Anchor\" href=\"#7携带token访问所有用户\">#</a> 7. 携带 token 访问所有用户</h3>\n<ul>\n<li><code>serializers.py</code></li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">UserInfoSerializers</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>ModelSerializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        model <span class=\"token operator\">=</span> User</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        fields <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'username'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'phone'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'email'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ul>\n<li><code>views.py</code></li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> rest_framework<span class=\"token punctuation\">.</span>views <span class=\"token keyword\">import</span> APIView</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> rest_framework<span class=\"token punctuation\">.</span>response <span class=\"token keyword\">import</span> Response</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>serializers <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span> <span class=\"token keyword\">import</span> models</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span> rest_framework<span class=\"token punctuation\">.</span>permissions <span class=\"token keyword\">import</span> IsAuthenticated</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">UserInfoView</span><span class=\"token punctuation\">(</span>APIView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\"># 认证用户才可访问</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    permission_classes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>IsAuthenticated<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        user <span class=\"token operator\">=</span> User<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        obj <span class=\"token operator\">=</span> UserInfoSerializers<span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">,</span> many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'code'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'msg'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'查询成功'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span> obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ul>\n<li><code>urls.py</code></li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>urls <span class=\"token keyword\">import</span> path</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> app01 <span class=\"token keyword\">import</span> views</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> rest_framework_jwt<span class=\"token punctuation\">.</span>views <span class=\"token keyword\">import</span> obtain_jwt_token</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>urlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    path<span class=\"token punctuation\">(</span><span class=\"token string\">'register/'</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>UserView<span class=\"token punctuation\">.</span>as_view<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    path<span class=\"token punctuation\">(</span><span class=\"token string\">'login/'</span><span class=\"token punctuation\">,</span> obtain_jwt_token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    path<span class=\"token punctuation\">(</span><span class=\"token string\">'get_user/'</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>UserInfoView<span class=\"token punctuation\">.</span>as_view<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><ul>\n<li>Postman 测试</li>\n</ul>\n<p><img data-src=\"4.png\" alt=\"\"></p>\n",
            "tags": [
                "JWT"
            ]
        },
        {
            "id": "http://example.com/Django%E6%A1%86%E6%9E%B6/Django-%E6%95%B0%E6%8D%AE%E5%BA%93ORM%E6%93%8D%E4%BD%9C/",
            "url": "http://example.com/Django%E6%A1%86%E6%9E%B6/Django-%E6%95%B0%E6%8D%AE%E5%BA%93ORM%E6%93%8D%E4%BD%9C/",
            "title": "Django--数据库ORM操作",
            "date_published": "2020-03-20T09:07:42.000Z",
            "content_html": "<h1 id=\"创建单表模型类\"><a class=\"markdownIt-Anchor\" href=\"#创建单表模型类\">#</a> 创建单表模型类</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Goods</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    goods_name <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    goods_price <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>DecimalField<span class=\"token punctuation\">(</span>max_digits<span class=\"token operator\">=</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span>decimal_places<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    goods_num <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        db_table <span class=\"token operator\">=</span> <span class=\"token string\">'tb_goods'</span></pre></td></tr></table></figure><h1 id=\"orm基本操作\"><a class=\"markdownIt-Anchor\" href=\"#orm基本操作\">#</a> ORM 基本操作</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ORMView</span><span class=\"token punctuation\">(</span>APIView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\">#   单一查询，如果结果不存在报错</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        goodsobj <span class=\"token operator\">=</span> Goods<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>goods_price<span class=\"token operator\">=</span><span class=\"token number\">6.66</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        obj <span class=\"token operator\">=</span> GoodsSerializers<span class=\"token punctuation\">(</span>goodsobj<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">#   查询不包含 id=3 的数据</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        goodsobj <span class=\"token operator\">=</span> Goods<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>exclude<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        obj <span class=\"token operator\">=</span> GoodsSerializers<span class=\"token punctuation\">(</span>goodsobj<span class=\"token punctuation\">,</span> many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\">#   查询结果的数量</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        goodsobj <span class=\"token operator\">=</span> Goods<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>goodsobj<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\">#   聚合函数　　使用 aggregate () 过滤器调用聚合函数。</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token comment\">#   聚合函数包括：Avg 平均，Count 数量，Max 最大，Min 最小，Sum 求和      </span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token comment\">#   需要导包    from django.db.models import *</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        goodsobj <span class=\"token operator\">=</span> Goods<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>aggregate<span class=\"token punctuation\">(</span>Sum<span class=\"token punctuation\">(</span><span class=\"token string\">'goods_num'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>goodsobj<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token comment\"># obj = GoodsSerializers(goodsobj, many=True)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'data'</span><span class=\"token punctuation\">:</span><span class=\"token string\">''</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token comment\">#   比较查询　　字段名__lt：小于    字段名__lte：小于等于</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        goodsobj <span class=\"token operator\">=</span> Goods<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>id__lt<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        obj <span class=\"token operator\">=</span> GoodsSerializers<span class=\"token punctuation\">(</span>goodsobj<span class=\"token punctuation\">,</span> many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token comment\">#   比较查询　　字段名__gt：大于    字段名__gte：大于等于</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        goodsobj <span class=\"token operator\">=</span> Goods<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>id__gte<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        obj <span class=\"token operator\">=</span> GoodsSerializers<span class=\"token punctuation\">(</span>goodsobj<span class=\"token punctuation\">,</span> many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token comment\">#  　空查询　　字段名__isnull</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        goodsobj <span class=\"token operator\">=</span> Goods<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>goods_name__isnull<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        obj <span class=\"token operator\">=</span> GoodsSerializers<span class=\"token punctuation\">(</span>goodsobj<span class=\"token punctuation\">,</span> many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token comment\">#    模糊查询　字段名__endswith　以　莓　结尾的数据</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        goodsobj <span class=\"token operator\">=</span> Goods<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>goods_name__endswith<span class=\"token operator\">=</span><span class=\"token string\">'莓'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        obj <span class=\"token operator\">=</span> GoodsSerializers<span class=\"token punctuation\">(</span>goodsobj<span class=\"token punctuation\">,</span> many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token comment\">#    模糊查询　字段名__tartswith　以　苹　开头的数据</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        goodsobj <span class=\"token operator\">=</span> Goods<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>goods_name__startswith<span class=\"token operator\">=</span><span class=\"token string\">'苹'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        obj <span class=\"token operator\">=</span> GoodsSerializers<span class=\"token punctuation\">(</span>goodsobj<span class=\"token punctuation\">,</span>many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token comment\">#    模糊查询　字段名__contains　包含　果　的的数据</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        goodsobj <span class=\"token operator\">=</span> Goods<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>goods_name__contains<span class=\"token operator\">=</span><span class=\"token string\">'果'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        obj <span class=\"token operator\">=</span> GoodsSerializers<span class=\"token punctuation\">(</span>goodsobj<span class=\"token punctuation\">,</span>many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token comment\">#    范围查询:  in  只查询列表中的具体值</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        goodsobj <span class=\"token operator\">=</span> Goods<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>goods_price__in<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span><span class=\"token number\">6.66</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        obj <span class=\"token operator\">=</span> GoodsSerializers<span class=\"token punctuation\">(</span>goodsobj<span class=\"token punctuation\">,</span>many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token comment\">#    范围查询:  range １～２０之间</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        goodsobj <span class=\"token operator\">=</span> Goods<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>goods_price__range<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        obj <span class=\"token operator\">=</span> GoodsSerializers<span class=\"token punctuation\">(</span>goodsobj<span class=\"token punctuation\">,</span>many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token comment\">#    排序查询：  order_by 降序只需在字段名前加上 “-”</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        goodsobj <span class=\"token operator\">=</span> Goods<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>order_by<span class=\"token punctuation\">(</span><span class=\"token string\">'-goods_num'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        obj <span class=\"token operator\">=</span> GoodsSerializers<span class=\"token punctuation\">(</span>goodsobj<span class=\"token punctuation\">,</span> many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        <span class=\"token comment\">#    F 方法：比较两个字段对象之间的关系用 F 对象，F 方法可以进行简单运算　</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        <span class=\"token comment\">#    查询价格　大于等于　库存的对象</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        goodsobj <span class=\"token operator\">=</span> Goods<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>goods_price__gte<span class=\"token operator\">=</span>F<span class=\"token punctuation\">(</span><span class=\"token string\">'goods_num'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>        obj <span class=\"token operator\">=</span> GoodsSerializers<span class=\"token punctuation\">(</span>goodsobj<span class=\"token punctuation\">,</span> many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        <span class=\"token comment\">#    Q 方法：对对象进行复杂查询，并支持 & amp;（and）,|（or），~（not）操作符</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        <span class=\"token comment\">#    查询价格大于等于 15 的数据　或库存大于等于 10 的数据</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        goodsobj <span class=\"token operator\">=</span> Goods<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">(</span>goods_price__gte<span class=\"token operator\">=</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> Q<span class=\"token punctuation\">(</span>goods_num__gte<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        obj <span class=\"token operator\">=</span> GoodsSerializers<span class=\"token punctuation\">(</span>goodsobj<span class=\"token punctuation\">,</span> many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"创建一对多多对多模型类\"><a class=\"markdownIt-Anchor\" href=\"#创建一对多多对多模型类\">#</a> 创建一对多，多对多模型类</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 电影</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Movie</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    movie_name <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        db_table <span class=\"token operator\">=</span> <span class=\"token string\">'tb_movie'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 角色</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Role</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    role_name <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    role_price <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>DecimalField<span class=\"token punctuation\">(</span>max_digits<span class=\"token operator\">=</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span> decimal_places<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    role_desc <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        db_table <span class=\"token operator\">=</span> <span class=\"token string\">'tb_role'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># 演员</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Actor</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    name <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    address <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> blank<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    age <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>blank<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    phone <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> blank<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    movie <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>ForeignKey<span class=\"token punctuation\">(</span>Movie<span class=\"token punctuation\">,</span> on_delete<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>CASCADE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    role <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>ManyToManyField<span class=\"token punctuation\">(</span>Role<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        db_table <span class=\"token operator\">=</span> <span class=\"token string\">'tb_actor'</span></pre></td></tr></table></figure><h1 id=\"一对多的正-反查询\"><a class=\"markdownIt-Anchor\" href=\"#一对多的正-反查询\">#</a> 一对多的正、反查询</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ORMView</span><span class=\"token punctuation\">(</span>APIView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\">#   一对多　正向查找      对象．模型名．字段</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        actorobj <span class=\"token operator\">=</span> Actor<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        movieo <span class=\"token operator\">=</span> actorobj<span class=\"token punctuation\">.</span>movie<span class=\"token punctuation\">.</span>movie_name</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>movieo<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token string\">'ok'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">#   一对多　反向查找      对象．模型名_set</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">#  除了可以使用模型名_set，还有一种是在建立模型类的时候使用 related_name 来指定变量名。</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        movieobj <span class=\"token operator\">=</span> Movie<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        actorobj <span class=\"token operator\">=</span> movieobj<span class=\"token punctuation\">.</span>actor_set<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        obj <span class=\"token operator\">=</span> ActorSerializers<span class=\"token punctuation\">(</span>actorobj<span class=\"token punctuation\">,</span>many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"多对多表操作\"><a class=\"markdownIt-Anchor\" href=\"#多对多表操作\">#</a> 多对多表操作</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ORMview2</span><span class=\"token punctuation\">(</span>APIView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">post</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\"># 多对多添加</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\"># 方法一：在建立 manytomany 的 models 里添加数据，（一条，一个对象）</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        actor <span class=\"token operator\">=</span> Actor<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        role <span class=\"token operator\">=</span> Role<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        data <span class=\"token operator\">=</span> actor<span class=\"token punctuation\">.</span>role<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>role<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token string\">'ok'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\"># 方法二：在未建立 manytomany 的 models 里添加数据，（一条，一个对象）</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        actor <span class=\"token operator\">=</span> Actor<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span><span class=\"token string\">'张译'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        role <span class=\"token operator\">=</span> Role<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        data <span class=\"token operator\">=</span> role<span class=\"token punctuation\">.</span>actor_set<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>actor<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token string\">'ok2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token comment\"># 多对多更新</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token comment\"># 方法一：在建立 manytomany 的 models 里修改数据，参数只能是可迭代对象</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        actorobj <span class=\"token operator\">=</span> Actor<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        roleobj <span class=\"token operator\">=</span> Role<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        actorobj<span class=\"token punctuation\">.</span>role<span class=\"token punctuation\">.</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>roleobj<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token string\">'ok'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token comment\"># 方法二：在未建立 manytomany 的 models 里修改数据，参数只能是可迭代对象</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        actorobj <span class=\"token operator\">=</span> Actor<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        roleobj <span class=\"token operator\">=</span> Role<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        roleobj<span class=\"token punctuation\">.</span>actor_set<span class=\"token punctuation\">.</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>actorobj<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token string\">'ok2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token comment\"># 方法一：在建立 manytomany 的 models 里删除数据，（一条，一个对象）</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        autorobj <span class=\"token operator\">=</span> Actor<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        roleobj <span class=\"token operator\">=</span>Role<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        autorobj<span class=\"token punctuation\">.</span>role<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>roleobj<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token string\">'ok'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token comment\"># 方法二：在未建立 manytomany 的 models 里删除数据，（一条，可迭代对象）</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        autorobj <span class=\"token operator\">=</span> Actor<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        roleobj <span class=\"token operator\">=</span> Role<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        roleobj<span class=\"token punctuation\">.</span>actor_set<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>autorobj<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token string\">'ok2'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "ORM"
            ]
        },
        {
            "id": "http://example.com/Django%E6%A1%86%E6%9E%B6/Django-%E5%BA%8F%E5%88%97%E5%8C%96%E5%99%A8/",
            "url": "http://example.com/Django%E6%A1%86%E6%9E%B6/Django-%E5%BA%8F%E5%88%97%E5%8C%96%E5%99%A8/",
            "title": "序列化器",
            "date_published": "2020-03-10T12:10:28.000Z",
            "content_html": "<h1 id=\"1-序列化\"><a class=\"markdownIt-Anchor\" href=\"#1-序列化\">#</a> 1. 序列化</h1>\n<hr>\n<p>DRF 的核心 就是 前后端分离的核心</p>\n<p><strong>前后端分离开发的核心：</strong><br>\n将模型转换为 json 称之为 序列化<br>\n将 json 转换成模型 称之为 反序列化</p>\n<h3 id=\"11-序列化器的字段\"><a class=\"markdownIt-Anchor\" href=\"#11-序列化器的字段\">#</a> 1.1 序列化器的字段</h3>\n<hr>\n<p>Serializer 序列化器<br>\n为了得到模型里的字段，序列化器中的字段应与模型类中的字段名一致</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">''' serializers.py '''</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookInfoSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>Serializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\"># read_only=True 只能读 不能修改</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>read_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        name <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'书籍名'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        pub_date <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>DataField<span class=\"token punctuation\">(</span>label<span class=\"token operator\">=</span><span class=\"token string\">'发布日期'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        readcount <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        is_delete <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>BooleanField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        image <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>ImageField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"12-序列化\"><a class=\"markdownIt-Anchor\" href=\"#12-序列化\">#</a> 1.2 序列化</h3>\n<hr>\n<p>创建序列器</p>\n<p>序列化器的第一个参数：instance 用于序列化操作</p>\n<p>序列化器的第二个参数：data 用于反序列化操作</p>\n<p>除了 instance 和 data 参数外，在构造 Serializer 对象时，还可通过 context 参数额外添加数据，如</p>\n<blockquote>\n<p>serializer = AccountSerializer(account, context={‘request’: request})</p>\n</blockquote>\n<p>通过 context 参数附加的数据，可以通过 Serializer 对象的 context 属性获取。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">''' views.py '''</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    book <span class=\"token operator\">=</span> BookInfo<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    s <span class=\"token operator\">=</span> BookInfoSerializers<span class=\"token punctuation\">(</span>instance<span class=\"token operator\">=</span>book<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\"># 我们是通过 序列化器的 data 属性来获取 模型转换为字典的数据</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    s<span class=\"token punctuation\">.</span>data</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\"># 传递多个数据</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\"># 应用： 查询所有书籍列表</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    books <span class=\"token operator\">=</span> BookInfo<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\"># 创建序列化器，将所有书籍信息传递给序列化器</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\"># books = [BookInfo,BookInfo,...] 对象列表</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    s <span class=\"token operator\">=</span> BookInfoSerializers<span class=\"token punctuation\">(</span>books<span class=\"token punctuation\">,</span>many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    person <span class=\"token operator\">=</span> PeopleInfo<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\"># 序列化器初始化</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    s <span class=\"token operator\">=</span> PeopleInfoSerializer<span class=\"token punctuation\">(</span>instance<span class=\"token operator\">=</span>person<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"13-关联序列化器的操作\"><a class=\"markdownIt-Anchor\" href=\"#13-关联序列化器的操作\">#</a> 1.3 关联序列化器的操作</h3>\n<hr>\n<p>对于关联字段，可以采用以下几种方式：</p>\n<p>1） PrimaryKeyRelatedField</p>\n<p>2） StringRelatedField</p>\n<p>3） 使用关联对象的序列化器</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">######### 关联序列化器 ##########################</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">PeopleInfoSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>Serializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"英雄数据序列化器\"\"\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        GENDER_CHOICES <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'male'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'female'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>label<span class=\"token operator\">=</span><span class=\"token string\">'ID'</span><span class=\"token punctuation\">,</span> read_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        name <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>label<span class=\"token operator\">=</span><span class=\"token string\">'名字'</span><span class=\"token punctuation\">,</span> max_length<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        gender <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>ChoiceField<span class=\"token punctuation\">(</span>choices<span class=\"token operator\">=</span>GENDER_CHOICES<span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">'性别'</span><span class=\"token punctuation\">,</span> required<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        description <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>label<span class=\"token operator\">=</span><span class=\"token string\">'描述信息'</span><span class=\"token punctuation\">,</span> max_length<span class=\"token operator\">=</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> required<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> allow_null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token triple-quoted-string string\">''' PrimaryKeyRelatedField '''</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\"># 设置关联外键的时候，要将 read_only=True</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\"># 包含 read_only=True 参数时，该字段将不能用作反序列化使用</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\"># book = serializers.PrimaryKeyRelatedField (read_only=True,label=' 外键 ')</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token comment\"># 或者</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\"># 包含 queryset 参数时，将被用作反序列化时参数校验使用</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token comment\"># queryset 将关联模型的所有数据传递给这个属性就可以</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        book <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>PrimaryKeyRelatedField<span class=\"token punctuation\">(</span>label<span class=\"token operator\">=</span><span class=\"token string\">'外键'</span><span class=\"token punctuation\">,</span>queryset<span class=\"token operator\">=</span>BookInfo<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token triple-quoted-string string\">'''StringRelatedField'''</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token comment\"># 现在通过  PrimaryKeyRelatedField 得到的是一个  外键的一个值  2</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token comment\"># 接下来通过 一个设置 来获取 书籍的名字</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token comment\"># StringRelatedField 可以获取关联模型中的 __str_ 里的字符串</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        book <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>StringRelatedField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token triple-quoted-string string\">''' 使用关联对象的序列化器  拿到所有数据 '''</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        book <span class=\"token operator\">=</span> BookInfoSerializer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"14-关联查询\"><a class=\"markdownIt-Anchor\" href=\"#14-关联查询\">#</a> 1.4 关联查询</h3>\n<hr>\n<p>关联模型类名小写_set 作为字段名</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">''' serializers.py '''</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookInfoSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>Serializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>read_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        name <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharFIeld<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'书籍名'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        pub_date <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>DataField<span class=\"token punctuation\">(</span>label<span class=\"token operator\">=</span><span class=\"token string\">'发布日期'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        readcount <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        is_delete <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>BooleanField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        iamge <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>ImageField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\"># 书籍和人物的关系是 1：n   ===> many=True</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        peopleinfo_set <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>PrimaryKeyRelatedField<span class=\"token punctuation\">(</span>read_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>name</pre></td></tr></table></figure><h1 id=\"2-反序列化\"><a class=\"markdownIt-Anchor\" href=\"#2-反序列化\">#</a> 2. 反序列化</h1>\n<hr>\n<p>反序列化 分为两个：</p>\n<ul>\n<li>\n<p>数据校验</p>\n</li>\n<li>\n<p>数据入库</p>\n</li>\n</ul>\n<h3 id=\"21-数据校验\"><a class=\"markdownIt-Anchor\" href=\"#21-数据校验\">#</a> 2.1 数据校验</h3>\n<hr>\n<p>使用序列化器进行反序列化时，需要对数据进行验证后，才能获取验证成功的数据或保存成模型类对象。</p>\n<p>在获取反序列化的数据前，必须调用 is_valid () 方法进行验证，验证成功返回 True，否则返回 False。</p>\n<p>验证失败，可以通过序列化器对象的 errors 属性获取错误信息，返回字典，包含了字段和字段的错误。</p>\n<p>验证成功，可以通过序列化器对象的 validated_data 属性获取数据。</p>\n<p>在定义序列化器时，指明每个字段的序列化类型和选项参数，本身就是一种验证行为</p>\n<h4 id=\"211-数据校验的第一种方式\"><a class=\"markdownIt-Anchor\" href=\"#211-数据校验的第一种方式\">#</a> 2.1.1 数据校验的第一种方式</h4>\n<hr>\n<p>在定义序列化器字段的时候，规定是什么类型 就要提交符合规则的数据</p>\n<p>例如：DateField 就需要传入符合日期规则的数据</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">############## 将 JSON 转换为模型  反序列化 #############</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     <span class=\"token triple-quoted-string string\">''' serializers.py '''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookInfoSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>Serializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>read_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        name <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharFIeld<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'书籍名'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        pub_date <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>DataField<span class=\"token punctuation\">(</span>label<span class=\"token operator\">=</span><span class=\"token string\">'发布日期'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>       </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        peopleinfo_set <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>PrimaryKeyRelatedField<span class=\"token punctuation\">(</span>read_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>name</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token triple-quoted-string string\">''' views.py '''</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token builtin\">dict</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'itcast'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token string\">'pub_date'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'123'</span>   <span class=\"token comment\"># Flase</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token comment\"># 'pub_date':'2010-1-1'  # True</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token comment\"># 1. 创建序列器</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\"># 序列化器的第一个参数：instance 用于序列化操作</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\"># 序列化器的第二个参数：data 用于反序列化操作</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    serializer <span class=\"token operator\">=</span> BookInfoSerializer<span class=\"token punctuation\">(</span>data<span class=\"token operator\">=</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token comment\"># 2. 需要调用序列化器的 is_valid 方法 valid 验证  返回 True False</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token comment\"># 如果数据可用  返回 True</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    serializer<span class=\"token punctuation\">.</span>is_valid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token comment\"># raise_exception=True 可以设置为 True 来抛出异常</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    serializer<span class=\"token punctuation\">.</span>is_valid<span class=\"token punctuation\">(</span>raise_exception<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"212-数据校验的第二种方式\"><a class=\"markdownIt-Anchor\" href=\"#212-数据校验的第二种方式\">#</a> 2.1.2 数据校验的第二种方式</h4>\n<hr>\n<p>字段的选项</p>\n<p>required : 进行反序列化的时候，必须传这个字段</p>\n<p>min_length,max_length 作用于字符串</p>\n<p>min_value,max_value 作用于 Int 整型</p>\n<p>default 不传入数据 设置默认值</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">''' serializers.py '''</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookInfoSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>Serializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>read_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        name <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharFIeld<span class=\"token punctuation\">(</span>min_length<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'书籍名'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        pub_date <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>DataField<span class=\"token punctuation\">(</span>label<span class=\"token operator\">=</span><span class=\"token string\">'发布日期'</span><span class=\"token punctuation\">,</span>required<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>name</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token triple-quoted-string string\">''' views.py '''</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token builtin\">dict</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'itcast'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token string\">'pub_date'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'123'</span>   <span class=\"token comment\"># 若去掉 pub_date 则报错</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"313-数据校验的第三种方式\"><a class=\"markdownIt-Anchor\" href=\"#313-数据校验的第三种方式\">#</a> 3.1.3 数据校验的第三种方式</h4>\n<hr>\n<p>对单个字段的数据进行验证</p>\n<p>语法形式为： 在序列化器中实现方法 def validate_字段名 ()</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">''' serializers.py '''</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookInfoSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>Serializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>read_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        name <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharFIeld<span class=\"token punctuation\">(</span>min_length<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'书籍名'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        pub_date <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>DataField<span class=\"token punctuation\">(</span>label<span class=\"token operator\">=</span><span class=\"token string\">'发布日期'</span><span class=\"token punctuation\">,</span>required<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        readcount <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>default<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>required<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>name</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">validate_readcount</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token comment\"># value 就是字段传递过来的数据</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">if</span> value <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token keyword\">raise</span> serializers<span class=\"token punctuation\">.</span>ValidationError<span class=\"token punctuation\">(</span><span class=\"token string\">'阅读量不能为负数'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token comment\"># 需要将 value 返回回去</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">return</span> value</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token triple-quoted-string string\">''' views.py '''</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token builtin\">dict</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'itcast'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token string\">'readcount'</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 报异常</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"314-数据校验的第四种方式\"><a class=\"markdownIt-Anchor\" href=\"#314-数据校验的第四种方式\">#</a> 3.1.4 数据校验的第四种方式</h4>\n<hr>\n<p>对多个字段的数据进行验证时</p>\n<p>语法形式为： 在序列化器中实现方法 def validate (self,attrs)</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">''' serializers.py '''</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookInfoSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>Serializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>read_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        name <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharFIeld<span class=\"token punctuation\">(</span>min_length<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'书籍名'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        pub_date <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>DataField<span class=\"token punctuation\">(</span>label<span class=\"token operator\">=</span><span class=\"token string\">'发布日期'</span><span class=\"token punctuation\">,</span>required<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        readcount <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>default<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>required<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        commentcount <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>default<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>required<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>name</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\"># 对多个字段进行验证</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\"># def validate(self,attrs):</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">validate</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token comment\"># attrs  -->  其实就是 data</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            readcount <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'readcount'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            commentcount <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token string\">'commentcount'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">if</span> readcount <span class=\"token operator\">&lt;</span> commentcount<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token keyword\">raise</span> serializers<span class=\"token punctuation\">.</span>ValidationError<span class=\"token punctuation\">(</span><span class=\"token string\">'评论量不能大于阅读量'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token comment\"># 要将数据返回</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token keyword\">return</span> data</pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token triple-quoted-string string\">''' views.py '''</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token comment\"># 自定义需求：评论量不能大于阅读量</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token builtin\">dict</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'itcast'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token string\">'readcount'</span><span class=\"token punctuation\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token string\">'commentcount'</span><span class=\"token punctuation\">:</span><span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"315-数据校验的第五种方式\"><a class=\"markdownIt-Anchor\" href=\"#315-数据校验的第五种方式\">#</a> 3.1.5 数据校验的第五种方式</h4>\n<hr>\n<p>自定义验证方法</p>\n<p>同时给字段添加自定义验证方法</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">''' serializers.py '''</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookInfoSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>Serializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\"># 自定义验证方法</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">custom_validate</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">if</span> self <span class=\"token operator\">==</span> <span class=\"token string\">'admin'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">raise</span> serializers<span class=\"token punctuation\">.</span>ValidationError<span class=\"token punctuation\">(</span><span class=\"token string\">'我就是来捣乱的'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>read_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>       </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\"># validators=[]  是给字段 添加自定义验证方法</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        name <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharFIeld<span class=\"token punctuation\">(</span>min_length<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span><span class=\"token string\">'书籍名'</span><span class=\"token punctuation\">,</span>validators<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>custom_validate<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>       </pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>name</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token triple-quoted-string string\">''' views.py '''</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\"># 规定：评论量不能大于阅读量</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token builtin\">dict</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'itcast'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token string\">'readcount'</span><span class=\"token punctuation\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token string\">'commentcount'</span><span class=\"token punctuation\">:</span><span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"22-数据入库\"><a class=\"markdownIt-Anchor\" href=\"#22-数据入库\">#</a> 2.2 数据入库</h3>\n<hr>\n<h4 id=\"221-数据保存-save-方法\"><a class=\"markdownIt-Anchor\" href=\"#221-数据保存-save-方法\">#</a> 2.2.1 数据保存 save 方法</h4>\n<hr>\n<p>继承自 Serializer 的序列化 我们在调用 save 方法的时候，需要手动实现 create 方法，</p>\n<p>调用 save 方法之前，必须调用 is_valid 方法，</p>\n<p>即 要想保存数据，必须保证数据是经过校验的。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">''' serializers.py '''</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookInfoSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>Serializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>validated_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token comment\"># dict -->  data --> attrs  -->  validated_data</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token comment\"># validated_data 此处其实就是 views.py 中的 dict</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token comment\"># validated_data 已经被验证过的数据</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token comment\"># *  对列表进行解包    *list</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token comment\"># ** 对字典进行解包    **dict</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token comment\">#   此处解包  将 dict 中的值 赋值给对象中的对应字段</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            book <span class=\"token operator\">=</span> BookInfo<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>create<span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>validated_data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token comment\"># create 需要将创建的对象返回</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">return</span> book </pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>     <span class=\"token triple-quoted-string string\">''' views.py '''</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\"># 规定：评论量不能大于阅读量</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token builtin\">dict</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'itcast'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token string\">'readcount'</span><span class=\"token punctuation\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token string\">'commentcount'</span><span class=\"token punctuation\">:</span><span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>   </pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    serializer <span class=\"token operator\">=</span> BookInfoSerializer<span class=\"token punctuation\">(</span>data<span class=\"token operator\">=</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    serializer<span class=\"token punctuation\">.</span>is_valid<span class=\"token punctuation\">(</span>raise_exception<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token comment\"># 3. 保存需要调用序列化器的 save 方法</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token comment\"># 继承自 Serializer 的序列化 我们在调用 save 方法的时候，需要手动实现 create 方法</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    serializer<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"222-序列化器中传入两个参数即数据的更新操作\"><a class=\"markdownIt-Anchor\" href=\"#222-序列化器中传入两个参数即数据的更新操作\">#</a> 2.2.2 序列化器中传入两个参数，即数据的更新操作</h4>\n<hr>\n<p>如果我们在序列化器中既传入了对象，又传入了数据</p>\n<p>系统会认为我们在更新数据</p>\n<p>继承自 Serializer 的类，要更新数据的时候，需要手动实现 update 方法</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">''' serializers.py '''</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookInfoSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>Serializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>instance<span class=\"token punctuation\">,</span>validated_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token comment\"># instance : 就是我们在更新数据时，传入序列化器的对象</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token comment\"># validated_data ： 验证之后的数据</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            instance<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> validated_data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span>instance<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            instance<span class=\"token punctuation\">.</span>pub_date <span class=\"token operator\">=</span> validated_data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'pub_date'</span><span class=\"token punctuation\">,</span>instance<span class=\"token punctuation\">.</span>pub_date<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            instance<span class=\"token punctuation\">.</span>readcount <span class=\"token operator\">=</span> validated_data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'readcount'</span><span class=\"token punctuation\">,</span>instance<span class=\"token punctuation\">.</span>readcount<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            instance<span class=\"token punctuation\">.</span>commentcount <span class=\"token operator\">=</span> validated_data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'commentcount'</span><span class=\"token punctuation\">,</span>instance<span class=\"token punctuation\">.</span>commentcount<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            instance<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token comment\"># update () 方法需要我们手动返回对象</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">return</span> instance</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token triple-quoted-string string\">'''views.py '''</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\"># 1. 获取对象</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    book <span class=\"token operator\">=</span> BookInfo<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\"># 2. 保存数据</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    data <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'lalala'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token string\">'pub_date'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'2018-1-1'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token string\">'readcount'</span><span class=\"token punctuation\">:</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token string\">'commentcount'</span><span class=\"token punctuation\">:</span><span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>    </pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token comment\"># 3. 创建序列化器</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    s <span class=\"token operator\">=</span> BookInfoSerializer<span class=\"token punctuation\">(</span>instance<span class=\"token operator\">=</span>book<span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token comment\"># 4. 验证数据</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    s<span class=\"token punctuation\">.</span>is_valid<span class=\"token punctuation\">(</span>raise_exception<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token comment\"># 5. 保存数据</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    s<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"3-modelserializer\"><a class=\"markdownIt-Anchor\" href=\"#3-modelserializer\">#</a> 3. ModelSerializer</h1>\n<hr>\n<p>如果我们想要使用序列化器对应的是 Django 的模型类，DRF 为我们提供了 ModelSerializer 模型类</p>\n<p>序列化器来帮助我们快速创建一个 Serializer 类。</p>\n<p>ModelSerializer 与常规的 Serializer 相同，但提供了：</p>\n<p>基于模型类自动生成一系列字段</p>\n<p>包含默认的 create () 和 update () 的实现</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">''' serializers.py '''</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>ModelSerializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\"># 如何设置   通过 class Meta</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            model <span class=\"token operator\">=</span> BookInfo    <span class=\"token comment\"># 设置关联模型     model 就是关联模型</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token comment\"># fields = '__all__'  # fields 设置字段   __all__表示所有字段</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token comment\"># fields = ['id','name','pub_date']  # fields 设置字段  [] 列表显示来设置</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            exclude <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'image'</span><span class=\"token punctuation\">]</span>   <span class=\"token comment\"># exclude 排除列表中的字段，剩余的字段都显示</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            read_only_fields <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'readcount'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'commentcount'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token comment\"># 我们可以对自动生成的字段  进行额外的设置</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            extra_kwargs <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token comment\"># 字段名：&#123;选项：值&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token string\">'pub_date'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'required'</span><span class=\"token punctuation\">:</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token string\">'readcount'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                    <span class=\"token string\">'max_value'</span><span class=\"token punctuation\">:</span><span class=\"token number\">10000</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                    <span class=\"token string\">'min_value'</span><span class=\"token punctuation\">:</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token triple-quoted-string string\">'''views.py'''</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\">#########ModelSerializer##############</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    data <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'abc'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token string\">'pub_date'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'2018-1-1'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token string\">'readcount'</span><span class=\"token punctuation\">:</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token string\">'commentcount'</span><span class=\"token punctuation\">:</span><span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>    </pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    s <span class=\"token operator\">=</span> BookSerializer<span class=\"token punctuation\">(</span>data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    s<span class=\"token punctuation\">.</span>is_valid<span class=\"token punctuation\">(</span>raise_exception<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    s<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "序列化器"
            ]
        },
        {
            "id": "http://example.com/Django%E6%A1%86%E6%9E%B6/Django-%E4%B8%89%E7%A7%8D%E9%A3%8E%E6%A0%BC%E7%9A%84%E6%A8%A1%E5%9E%8B%E7%BB%A7%E6%89%BF/",
            "url": "http://example.com/Django%E6%A1%86%E6%9E%B6/Django-%E4%B8%89%E7%A7%8D%E9%A3%8E%E6%A0%BC%E7%9A%84%E6%A8%A1%E5%9E%8B%E7%BB%A7%E6%89%BF/",
            "title": "三种风格的模型继承",
            "date_published": "2020-03-07T09:05:27.000Z",
            "content_html": "<h1 id=\"django三种风格的模型继承\"><a class=\"markdownIt-Anchor\" href=\"#django三种风格的模型继承\">#</a> Django 三种风格的模型继承</h1>\n<ul>\n<li>\n<p>抽象类继承：父类继承自 models.Model，但不会在底层数据库中生成相应的数据表（在 <code>Meta</code>  方法中添加 <code>abstract=True</code> ），父类的属性列存储在其子类的数据表中。</p>\n</li>\n<li>\n<p>多表继承：夺标继承的每个模型类都在底层数据库中生成相应的数据表管理数据。</p>\n</li>\n<li>\n<p>代理模型继承：父类用于在底层数据库中管理数据表；而子类不定义数据列，只定义查询数据集的排列方式等元数据</p>\n</li>\n</ul>\n<h4 id=\"1-抽象类基类公共类继承\"><a class=\"markdownIt-Anchor\" href=\"#1-抽象类基类公共类继承\">#</a> 1.      抽象类 (基类，公共类) 继承</h4>\n<ul>\n<li>抽象类，指的是继承了 model.Model 且没有生成表，而是作为基类或公共类被其他类继承</li>\n<li>抽象类继承的作用是在多个表有若干相同的字段时，可以使开发者讲这些字段统一定义在抽象基类中，免于重复定义这些字段。抽象积累的定义通过在模型的 Meta 中定义属性 abstract=True 来实现。抽象基类的举例如下：</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>db <span class=\"token keyword\">import</span> models</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Base</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    create_time <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>TimeField<span class=\"token punctuation\">(</span>auto_now_add<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    update_time <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>TimeField<span class=\"token punctuation\">(</span>auto_now<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    \t<span class=\"token comment\"># 添加关键字，不会产生新的表</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        abstract <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 这张表继承了 Base，哪怕没有字段 create_time 和 update_time，也同样会展示出来</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CourseType</span><span class=\"token punctuation\">(</span>Base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    title <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span><span class=\"token string\">'课程类别'</span><span class=\"token punctuation\">,</span> max_length<span class=\"token operator\">=</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    sequence <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span><span class=\"token string\">'展示顺序'</span><span class=\"token punctuation\">,</span> default<span class=\"token operator\">=</span><span class=\"token number\">18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        db_table <span class=\"token operator\">=</span> <span class=\"token string\">'tb_coursetype'</span></pre></td></tr></table></figure><p>本列中定义了一个抽象基类 Base，用于保存 2 个公用字段：create_time、update_time 。子类 CourseType 继承自 Base，并分别定义了自己的俩个字段。本列中 2 个类映射到数据库后，会被定义为 1 个数据表。</p>\n<ul>\n<li>数据表 tb_coursetype：有 id、title 、sequence 、create_time 、update_time 5 个字段</li>\n</ul>\n<hr>\n<h4 id=\"2多表继承\"><a class=\"markdownIt-Anchor\" href=\"#2多表继承\">#</a> 2. 多表继承</h4>\n<ul>\n<li>\n<p>在多表继承技术中心，无论是父表还是子表都会用数据库中相对应的数据表维护模型数据，父类中字段不会重复地在多个子类的相关数据表中进行定义。从这种意义上讲，多表继承才是真正面向对象的 ORM 技术。</p>\n</li>\n<li>\n<p>多表继承的定义不需要特殊的关键字。在 Django 内部通过在父模型和子模型之间建立一对一关系来实现多表继承技术。如下代码定义了 MessageBase 及其子类的多表继承版本：</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>db <span class=\"token keyword\">import</span> models</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">MessageBase</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>AutoField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    content <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    user_name <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">80</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    pub_date <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>DateField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Moment</span><span class=\"token punctuation\">(</span>MessageBase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    headline <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Coment</span><span class=\"token punctuation\">(</span>MessageBase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    level <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> choices<span class=\"token operator\">=</span>Levels<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>本例在数据库中会实际生成 3 个数据表。</p>\n<ul>\n<li>数据表 MessageBase：有 id、content、user_name、pub_date 等 4 个字段</li>\n<li>数据表 Moment：有 id、headline 等两个字段</li>\n<li>数据表 Comment：有 id、level 等两个字段</li>\n</ul>\n<p>在对模型的编程过程中，子类仍然可以直接引用父类定义的字段；同时子类可以通过父类对象引用访问父类实例，比如：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 新建 Moment 对象，直接在子类中引用父类字段</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> m1 <span class=\"token operator\">=</span> Moment<span class=\"token punctuation\">(</span>user_name<span class=\"token operator\">=</span><span class=\"token string\">\"Tom\"</span><span class=\"token punctuation\">,</span> headline<span class=\"token operator\">=</span><span class=\"token string\">\"hello world\"</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> m1<span class=\"token punctuation\">.</span>content <span class=\"token operator\">=</span> <span class=\"token string\">\"reference parent field in subclass\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> m1<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 通过父类实例引用父类字段</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span> m1<span class=\"token punctuation\">.</span>messagebase<span class=\"token punctuation\">.</span>content</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>eference parent field <span class=\"token keyword\">in</span> subclass</pre></td></tr></table></figure><p>技巧：在多表继承时，在子类实例中通过小写的父类的名字可以引用父类的实例</p>\n<hr>\n<h4 id=\"3代理模型继承\"><a class=\"markdownIt-Anchor\" href=\"#3代理模型继承\">#</a> 3. 代理模型继承</h4>\n<ul>\n<li>前两种继承模型中子类模型都有实际存储数据的作用；而代理模型继承中子类只用于管理父类的数据，而不实际存储数据。代理模型继承通过在子类的 Meta 中定义 proxy=True 属性来实现。举例如下：</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Moment</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>AutoField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    content <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    user_name <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">80</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    pub_date <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>DateField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    headline <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">OrderdMoment</span><span class=\"token punctuation\">(</span>Moment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        proxy <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        ordering <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"-pub_date\"</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>在本例中定义了父类模型 Moment 用于存储数据，而后定义了子类模型 OrderedMoment 用于管理根据 pub_date 倒序排列的 Moment。使用 dialing 模型继承的原因是子类中新的特性不会影响父类模型及其已有代码的行为。</p>\n",
            "tags": []
        }
    ]
}