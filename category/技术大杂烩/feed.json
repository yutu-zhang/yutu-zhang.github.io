{
    "version": "https://jsonfeed.org/version/1",
    "title": "The course of true love never did run smooth. • All posts by \"技术大杂烩\" category",
    "description": "不知道写啥",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/WebSocket-%E5%85%A8%E5%8F%8C%E5%B7%A5%E9%80%9A%E4%BF%A1%E7%9A%84%E5%8D%8F%E8%AE%AE/",
            "url": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/WebSocket-%E5%85%A8%E5%8F%8C%E5%B7%A5%E9%80%9A%E4%BF%A1%E7%9A%84%E5%8D%8F%E8%AE%AE/",
            "title": "WebSocket--全双工通信协议",
            "date_published": "2020-12-24T02:48:55.000Z",
            "content_html": "<h1 id=\"概述\"><a class=\"markdownIt-Anchor\" href=\"#概述\">#</a> 概述</h1>\n<blockquote>\n<p><code>WebSocket</code>  是一种在单个 <code>TCP</code>  连接上进行全双工通信的协议.</p>\n<p><code>WebSocket</code>  使得客户端和服务器之间的数据交换变得更加简单，允许 <code>服务端主动</code> 向 <code>客户端推送数据</code> 。在 <code>WebSocket API</code>  中，浏览器和服务器只需要完成一次握手，两者之间就直接可以创建持久性的连接，并进行双向数据传输。</p>\n</blockquote>\n<h2 id=\"特点\"><a class=\"markdownIt-Anchor\" href=\"#特点\">#</a> 特点</h2>\n<ul>\n<li>\n<p>建立在 TCP 协议之上，服务器端的实现比较容易。</p>\n</li>\n<li>\n<p>与 HTTP 协议有着良好的兼容性。默认端口也是 80 和 443，并且握手阶段采用 HTTP 协议，因此握手时不容易屏蔽，能通过各种 HTTP 代理服务器。</p>\n</li>\n<li>\n<p>数据格式轻量，性能开销小。</p>\n</li>\n<li>\n<p>没有同源限制，客户端可以与任意服务器通信</p>\n</li>\n<li>\n<p>协议标识符是 ws（如果加密，则是 wss），请求的地址就是后端支持 websocket 的 API。</p>\n</li>\n</ul>\n<blockquote>\n<pre><code>ws://localhost:8000/websocketlink/\n</code></pre>\n</blockquote>\n<h2 id=\"几种与服务端实时通信的方法\"><a class=\"markdownIt-Anchor\" href=\"#几种与服务端实时通信的方法\">#</a> 几种与服务端实时通信的方法</h2>\n<ol>\n<li><strong>AJAX 轮询</strong></li>\n</ol>\n<blockquote>\n<p>AJAX 轮询也就是定时发送请求，也就是普通的客户端与服务端通信过程，只不过是无限循环发送，这样，可以保证服务端一旦有最新消息，就可以被客户端获取。</p>\n</blockquote>\n<ol start=\"2\">\n<li><strong>Long Polling 长轮询</strong></li>\n</ol>\n<blockquote>\n<p>Long Polling 长轮询是客户端和浏览器保持一个长连接，等服务端有消息返回，断开。<br>\n然后再重新连接，也是个循环的过程，无穷尽也。。。</p>\n<p>客户端发起一个 Long Polling，服务端如果没有数据要返回的话，会 hold 住请求，等到有数据，就会返回给客户端。客户端又会再次发起一次 Long Polling，再重复一次上面的过程。</p>\n</blockquote>\n<ol start=\"3\">\n<li><strong>缺点</strong></li>\n</ol>\n<blockquote>\n<p>这两种方式都有个致命的弱点，开销太大，被动性。假设并发很高的话，这对服务端是个考验。</p>\n<p>而 WebSocket 一次握手，持久连接，以及主动推送的特点可以解决上边的问题，又不至于损耗性能。</p>\n</blockquote>\n<h1 id=\"websocket连接过程\"><a class=\"markdownIt-Anchor\" href=\"#websocket连接过程\">#</a> WebSocket 连接过程</h1>\n<blockquote>\n<p>客户端发起 HTTP 握手，告诉服务端进行 WebSocket 协议通讯，并告知 WebSocket 协议版本。服务端确认协议版本，升级为 WebSocket 协议。之后如果有数据需要推送，会主动推送给客户端。</p>\n<p>连接开始时，客户端使用 HTTP 协议和服务端升级协议，升级完成后，后续数据交换遵循 WebSocket 协议</p>\n</blockquote>\n<ol>\n<li>先搂一眼 Request Headers</li>\n</ol>\n<details class=\"danger\"><summary>Request Headers</summary><div>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Accept-Encoding: gzip, deflate, br\t\t支持的数据压缩格式</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Accept-Language: zh-CN,zh;q=0.9\t\t浏览器所希望的语言种类</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Cache-Control: no-cache\t\t\t缓存控制，服务器通过控制浏览器要不要缓存数据</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Connection: Upgrade\t\t\t\t表示要升级协议</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Host: localhost:8000\t\t\t\t访问的主机名和端口</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Origin: http://localhost:8080\t\t\t发送请求的主机名和端口</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Pragma: no-cache\t\t\t\t指定“no-cache”值表示服务器必须返回一个刷新后的文档，即使它是代理服务器而且已经有了页面的本地拷贝</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Sec-WebSocket-Key: xdT5lKSuUI5vXFucwiG9Ig==\t对应服务端响应头的Sec-WebSocket-Accept，由于没有同源限制，websocket客户端可任意连接支持websocket的服务。这个就相当于一个钥匙一把锁，避免多余的，无意义的连接。</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Sec-WebSocket-Version: 13\t\t\t表示websocket的版本。如果服务端不支持该版本，需要返回一个Sec-WebSocket-Versionheader，里面包含服务端支持的版本号。</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Upgrade: websocket\t\t\t\t升级协议到websocket协议</pre></td></tr></table></figure></div></details>\n<ol start=\"2\">\n<li>Response Headers</li>\n</ol>\n<details class=\"danger\"><summary>Response Headers</summary><div>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Connection: Upgrade\t\t\t\t</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Sec-WebSocket-Accept: LKbtQ+1FimQ7NVxE5GJkpRMtFXo=\t\t 用来告知服务器愿意发起一个websocket连接， 值根据客户端请求头的Sec-WebSocket-Key计算出来</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Upgrade: websocket</pre></td></tr></table></figure></div></details>\n<h1 id=\"websocket-api\"><a class=\"markdownIt-Anchor\" href=\"#websocket-api\">#</a> WebSocket API</h1>\n<ol>\n<li>客户端与服务端建立连接。</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> ws <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebSocket</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ws://localhost:8000/websocketlink/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>返回的实例对象的属性</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>WebSocket<span class=\"token punctuation\">.</span>onopen\t\t<span class=\"token comment\">// 连接成功后的回调</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>WebSocket<span class=\"token punctuation\">.</span>onclose\t\t<span class=\"token comment\">// 连接关闭后的回调</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>WebSocket<span class=\"token punctuation\">.</span>onerror\t\t<span class=\"token comment\">// 连接失败后的回调</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>WebSocket<span class=\"token punctuation\">.</span>onmessage\t\t<span class=\"token comment\">// 客户端接收到服务端数据的回调</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>webSocket<span class=\"token punctuation\">.</span>bufferedAmount\t<span class=\"token comment\">// 未发送至服务器的二进制字节数</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>WebSocket<span class=\"token punctuation\">.</span>binaryType\t\t<span class=\"token comment\">// 使用二进制的数据类型连接</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>WebSocket<span class=\"token punctuation\">.</span>protocol\t\t<span class=\"token comment\">// 服务器选择的下属协议</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>WebSocket<span class=\"token punctuation\">.</span>url\t\t\t<span class=\"token comment\">// WebSocket 的绝对路径</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>方法</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>WebSocket<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\t\t<span class=\"token comment\">// 关闭当前连接</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>WebSocket<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\t\t<span class=\"token comment\">// 向服务器发送数据</span></pre></td></tr></table></figure><h1 id=\"django-vue-websocket实现聊天室\"><a class=\"markdownIt-Anchor\" href=\"#django-vue-websocket实现聊天室\">#</a> Django + Vue +WebSocket 实现聊天室</h1>\n<h2 id=\"django\"><a class=\"markdownIt-Anchor\" href=\"#django\">#</a> Django</h2>\n<ol>\n<li>安装，注册 WebSocket</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip install dwebscoket</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>INSTALLED_APPS <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token string\">'dwebsocket'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><ol start=\"2\">\n<li><code>views.py</code></li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> dwebsocket<span class=\"token punctuation\">.</span>decorators <span class=\"token keyword\">import</span> accept_websocket</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 接收前端信息</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token decorator annotation punctuation\">@accept_websocket</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">test_socket</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span> request<span class=\"token punctuation\">.</span>is_websocket<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">for</span> message <span class=\"token keyword\">in</span> request<span class=\"token punctuation\">.</span>websocket<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            c <span class=\"token operator\">=</span> <span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            message <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            uid <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'uid'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            username <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'username'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            chat <span class=\"token operator\">=</span> Chat<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>create<span class=\"token punctuation\">(</span>user_a<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>uid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> user_b<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            messageobj <span class=\"token operator\">=</span> Message<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>create<span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span>username<span class=\"token punctuation\">,</span> message<span class=\"token operator\">=</span>message<span class=\"token punctuation\">,</span> chat_id<span class=\"token operator\">=</span>chat<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            request<span class=\"token punctuation\">.</span>websocket<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># 主动推送消息</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token decorator annotation punctuation\">@accept_websocket</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">test_websocket2</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    uid <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>GET<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'uid'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token comment\"># print(uid)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">if</span> request<span class=\"token punctuation\">.</span>is_websocket<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            chatobj <span class=\"token operator\">=</span> Chat<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>user_a<span class=\"token operator\">=</span>uid<span class=\"token punctuation\">,</span> user_b<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>order_by<span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> chatobj<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                    message <span class=\"token operator\">=</span> Message<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>chat_id<span class=\"token operator\">=</span>i<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                    data <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> message<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> <span class=\"token string\">\"message\"</span><span class=\"token punctuation\">:</span> message<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                    a<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                request<span class=\"token punctuation\">.</span>websocket<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"vue\"><a class=\"markdownIt-Anchor\" href=\"#vue\">#</a> Vue</h2>\n<ol>\n<li>用户界面</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>primary<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>showDrawer<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        客服</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-drawer</span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>聊天室<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>600<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placement</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>right<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:closable</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:visible</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>visible<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@close</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>onClose<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-row</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-col</span> <span class=\"token attr-name\">:span</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>22 <span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>i in message<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>&#123; &#123; i.name:&#125; &#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>&#123; &#123; i.message &#125; &#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>table</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-col</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-row</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-row</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-col</span> <span class=\"token attr-name\">:span</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>22 <span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-input</span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>value<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>请输入内容<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-col</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-col</span> <span class=\"token attr-name\">:span</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>sendmessage()<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>primary<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>发送<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-col</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-row</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-drawer</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            visible<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            value<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            message<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token comment\">// 获取聊天记录</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token keyword\">var</span> _this <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token comment\">// 判断浏览器是否支持 websocket</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"WebSocket\"</span> <span class=\"token keyword\">in</span> window<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"支持\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            <span class=\"token comment\">// 连接服务器</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token keyword\">var</span> ws <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebSocket</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ws://localhost:8000/user/websocket/?uid=\"</span> <span class=\"token operator\">+</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'uid'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token comment\">// 向服务器发送数据</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            ws<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onopen</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                ws<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'xxx'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            <span class=\"token comment\">// 获取服务器返回数据</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            ws<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                <span class=\"token keyword\">var</span> received_msg <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                <span class=\"token keyword\">let</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>received_msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>                _this<span class=\"token punctuation\">.</span>message <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            <span class=\"token comment\">// 捕获断开链接</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            ws<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclose</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"链接已经关闭\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token function\">showDrawer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>visible <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token function\">onClose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>visible <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t\t<span class=\"token comment\">// 向服务器发送数据</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>        <span class=\"token function\">sendmessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>            <span class=\"token keyword\">var</span> _this <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>            <span class=\"token comment\">// 判断浏览器是否支持 websocket</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"WebSocket\"</span> <span class=\"token keyword\">in</span> window<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"支持\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>                </pre></td></tr><tr><td data-num=\"89\"></td><td><pre>                <span class=\"token comment\">// 连接服务器</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>                <span class=\"token keyword\">var</span> ws <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebSocket</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ws://localhost:8000/user/socket/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>                </pre></td></tr><tr><td data-num=\"92\"></td><td><pre>                <span class=\"token comment\">// 向服务器发送数据</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>                ws<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onopen</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>                    <span class=\"token keyword\">var</span> data <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>                        username<span class=\"token operator\">:</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'username'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>                        message<span class=\"token operator\">:</span> _this<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>                        uid<span class=\"token operator\">:</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'uid'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>                    ws<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>                </pre></td></tr><tr><td data-num=\"102\"></td><td><pre>                <span class=\"token comment\">// 获取服务器返回数据</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>                ws<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>                    <span class=\"token comment\">// console.log(evt.data)</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>                </pre></td></tr><tr><td data-num=\"107\"></td><td><pre>                <span class=\"token comment\">// 捕获断开链接</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>                ws<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclose</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>                    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"链接已经关闭\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><ol start=\"2\">\n<li>客服界面</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>primary<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>showDrawer<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        客服</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-drawer</span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>聊天室<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>600<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placement</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>right<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:closable</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:visible</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>visible<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@close</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>onClose<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-row</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-col</span> <span class=\"token attr-name\">:span</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>22 <span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>i in a<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>&#123; &#123; i.name &#125; &#125;:<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>&#123; &#123; i.message &#125; &#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>table</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-col</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-row</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-row</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-col</span> <span class=\"token attr-name\">:span</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>22 <span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-input</span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>value<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>请输入内容<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-col</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-col</span> <span class=\"token attr-name\">:span</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>sendmessage()<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>primary<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>发送<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-col</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-row</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-drawer</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            visible<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            value<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            message<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">var</span> _this <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token comment\">// 判断浏览器是否支持 websocket</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"WebSocket\"</span> <span class=\"token keyword\">in</span> window<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"支持\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token comment\">// 连接服务器</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token keyword\">var</span> ws <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebSocket</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ws://localhost:8000/user/websocket/?uid=\"</span> <span class=\"token operator\">+</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'uid'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            <span class=\"token comment\">// 向服务器发送数据</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            ws<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onopen</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                ws<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xxx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            <span class=\"token comment\">// 获取服务器返回数据</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            ws<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                <span class=\"token keyword\">var</span> received_msg <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                <span class=\"token keyword\">let</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>received_msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                _this<span class=\"token punctuation\">.</span>message <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            <span class=\"token comment\">// 捕获断开链接</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            ws<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclose</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"链接已经关闭\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token function\">showDrawer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>visible <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token function\">onClose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>visible <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token function\">sendmessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>            <span class=\"token keyword\">var</span> _this <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>            <span class=\"token comment\">// 判断浏览器是否支持 websocket</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"WebSocket\"</span> <span class=\"token keyword\">in</span> window<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"支持\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>                </pre></td></tr><tr><td data-num=\"85\"></td><td><pre>                <span class=\"token comment\">// 连接服务器</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>                <span class=\"token keyword\">var</span> ws <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebSocket</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ws://localhost:8000/user/socket/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"88\"></td><td><pre>                <span class=\"token comment\">// 向服务器发送数据</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>                ws<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onopen</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>                    <span class=\"token keyword\">var</span> data <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>                        username<span class=\"token operator\">:</span> <span class=\"token string\">'客服'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>                        message<span class=\"token operator\">:</span> _this<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>                        uid<span class=\"token operator\">:</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'uid'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>                    ws<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"98\"></td><td><pre>                <span class=\"token comment\">// 获取服务器返回数据</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>                ws<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>                    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>                </pre></td></tr><tr><td data-num=\"103\"></td><td><pre>                <span class=\"token comment\">// 捕获断开链接</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>                ws<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclose</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>                    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"链接已经关闭\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><ol start=\"3\">\n<li>效果</li>\n</ol>\n<p><img data-src=\"%E8%81%8A%E5%A4%A9%E5%AE%A4.gif\" alt=\"\"></p>\n",
            "tags": [
                "WebSocket"
            ]
        },
        {
            "id": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/ECharts-%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E5%BA%93/",
            "url": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/ECharts-%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E5%BA%93/",
            "title": "ECharts--数据可视化库",
            "date_published": "2020-12-22T15:26:23.000Z",
            "content_html": "<h1 id=\"概述\"><a class=\"markdownIt-Anchor\" href=\"#概述\">#</a> 概述</h1>\n<blockquote>\n<p><code>ECharts</code> ，一个使用  <code>JavaScript</code>  实现的 <code>开源可视化库</code> ，可以流畅的运行在 PC 和移动设备上，兼容当前绝大部分浏览器（IE8/9/10/11，Chrome，Firefox，Safari 等），底层依赖矢量图形库 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2Vjb21mZS96cmVuZGVy\">ZRender</span>，提供直观，交互丰富，可高度个性化定制的数据可视化图表。</p>\n</blockquote>\n<h1 id=\"在vue中使用echarts\"><a class=\"markdownIt-Anchor\" href=\"#在vue中使用echarts\">#</a> 在 Vue 中使用 ECharts</h1>\n<ol>\n<li>安装</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>npm install echarts <span class=\"token operator\">--</span>save</pre></td></tr></table></figure><ol start=\"2\">\n<li><code>main.js</code></li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> echarts <span class=\"token keyword\">from</span> <span class=\"token string\">\"echarts\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">Vue</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>$echarts <span class=\"token operator\">=</span> echarts<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><div class=\"note info\">\n<p><code>注意</code> ：如果引入报错： <code>“export ‘default‘ (imported as ‘echarts‘) was not found in ‘echarts‘...</code>  切换版本</p>\n</div>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>npm install echarts@<span class=\"token number\">4.9</span><span class=\"token number\">.0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>npm fund</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>npm run dev</pre></td></tr></table></figure><ol start=\"3\">\n<li>Demo</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">&lt;!-- 为 ECharts 准备一个具备大小（宽高）的 Dom --></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>main<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 1500px<span class=\"token punctuation\">;</span><span class=\"token property\">height</span><span class=\"token punctuation\">:</span>600px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawChart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token function\">drawChart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token comment\">// 基于准备好的 dom，初始化 echarts 实例</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">let</span> myChart <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$echarts<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"main\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token comment\">// 指定图表的配置项和数据</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token keyword\">var</span> option <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                title<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                    text<span class=\"token operator\">:</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                tooltip<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                legend<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'销量'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                xAxis<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"衬衫\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"羊毛衫\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"雪纺衫\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"裤子\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"高跟鞋\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"袜子\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                yAxis<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                series<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                    name<span class=\"token operator\">:</span> <span class=\"token string\">'销量'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                    type<span class=\"token operator\">:</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token comment\">// 使用刚指定的配置项和数据显示图表。</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            myChart<span class=\"token punctuation\">.</span><span class=\"token function\">setOption</span><span class=\"token punctuation\">(</span>option<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><ol start=\"4\">\n<li>效果</li>\n</ol>\n<p><img data-src=\"demo.gif\" alt=\"\"></p>\n<h1 id=\"django-and-vue-实现股票简易柱状图\"><a class=\"markdownIt-Anchor\" href=\"#django-and-vue-实现股票简易柱状图\">#</a> Django and Vue 实现股票简易柱状图</h1>\n<h2 id=\"django\"><a class=\"markdownIt-Anchor\" href=\"#django\">#</a> Django</h2>\n<ol>\n<li>爬取数据</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> pymongo</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>conn <span class=\"token operator\">=</span> pymongo<span class=\"token punctuation\">.</span>MongoClient<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\t\t\t<span class=\"token comment\"># 连接 Mongodb 数据库</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>db <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span>gupiao</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>table <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>gp</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>url <span class=\"token operator\">=</span> <span class=\"token string\">'https://data.gtimg.cn/flashdata/hushen/latest/daily/sz000002.js?maxage=43201&amp;visitDstTime=1'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>res <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>res<span class=\"token punctuation\">.</span>encoding <span class=\"token operator\">=</span> <span class=\"token string\">'utf-8'</span>\t\t\t\t<span class=\"token comment\"># 出现乱码使用，对获取到的网页源码进行一个 utf-8 解码</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>res<span class=\"token operator\">=</span>res<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">34</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>res<span class=\"token operator\">=</span>res<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>riqi <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>s1 <span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>s2 <span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>s3 <span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>s4 <span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    ss<span class=\"token operator\">=</span>i<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    riqi<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>ss<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    s1<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>ss<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    s2<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>ss<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    s3<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>ss<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    s4<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>ss<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># 将数据以列表形式存储</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>a <span class=\"token operator\">=</span> table<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'date'</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>riqi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'s1'</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'s2'</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>s2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'s3'</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>s3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'s4'</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>s4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>向前端发送数据</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> pymongo</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>conn <span class=\"token operator\">=</span> pymongo<span class=\"token punctuation\">.</span>MongoClient<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 链接 Mongodb 数据库</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>db <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span>gupiao</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>table <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>gp</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Gupiao_data</span><span class=\"token punctuation\">(</span>APIView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>reqeust<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        list_data<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        data<span class=\"token operator\">=</span>table<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            i<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token string\">'_id'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            list_data<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'data'</span><span class=\"token punctuation\">:</span>list_data<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"vue\"><a class=\"markdownIt-Anchor\" href=\"#vue\">#</a> Vue</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">&lt;!-- 为 ECharts 准备一个具备大小（宽高）的 Dom --></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>main<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 1500px<span class=\"token punctuation\">;</span><span class=\"token property\">height</span><span class=\"token punctuation\">:</span>600px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> get_gupiao <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@/http/apis'</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawChart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token function\">drawChart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token comment\">// 基于准备好的 dom，初始化 echarts 实例</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">let</span> myChart <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$echarts<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"main\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token keyword\">let</span> riqi <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">let</span> s1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token keyword\">let</span> s2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token keyword\">let</span> s3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token keyword\">let</span> s4 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token function\">get_gupiao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token keyword\">in</span> res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                    <span class=\"token comment\">// 指定图表的配置项和数据</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                    <span class=\"token keyword\">let</span> option <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                        tooltip<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                            trigger<span class=\"token operator\">:</span> <span class=\"token string\">'axis'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                            axisPointer<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 坐标轴指示器，坐标轴触发有效</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                                type<span class=\"token operator\">:</span> <span class=\"token string\">'shadow'</span> <span class=\"token comment\">// 默认为直线，可选为：'line' | 'shadow'</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                        legend<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                            data<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"上午开盘\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"上午收盘\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"下午开盘\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"下午收盘\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                        grid<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                            left<span class=\"token operator\">:</span> <span class=\"token string\">'3%'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                            right<span class=\"token operator\">:</span> <span class=\"token string\">'4%'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                            bottom<span class=\"token operator\">:</span> <span class=\"token string\">'3%'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                            containLabel<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                        xAxis<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                            type<span class=\"token operator\">:</span> <span class=\"token string\">'category'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                            data<span class=\"token operator\">:</span> riqi</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                        yAxis<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                            type<span class=\"token operator\">:</span> <span class=\"token string\">'value'</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                        series<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                                name<span class=\"token operator\">:</span> <span class=\"token string\">'上午开盘'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                                type<span class=\"token operator\">:</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                                data<span class=\"token operator\">:</span> s1</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                                name<span class=\"token operator\">:</span> <span class=\"token string\">'上午收盘'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                                type<span class=\"token operator\">:</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                                stack<span class=\"token operator\">:</span> <span class=\"token string\">'广告'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                                data<span class=\"token operator\">:</span> s2</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>                            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>                                name<span class=\"token operator\">:</span> <span class=\"token string\">'下午开盘'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                                type<span class=\"token operator\">:</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                                stack<span class=\"token operator\">:</span> <span class=\"token string\">'广告'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>                                data<span class=\"token operator\">:</span> s3</pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>                            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                                name<span class=\"token operator\">:</span> <span class=\"token string\">'下午收盘'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>                                type<span class=\"token operator\">:</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>                                stack<span class=\"token operator\">:</span> <span class=\"token string\">'广告'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>                                data<span class=\"token operator\">:</span> s4</pre></td></tr><tr><td data-num=\"74\"></td><td><pre>                            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>                        <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>                    riqi<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>                    s1<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>s1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>                    s2<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>s2<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                    s3<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>s3<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>                    s4<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>s4<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>                    <span class=\"token comment\">// 使用刚指定的配置项和数据显示图表。</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>                    myChart<span class=\"token punctuation\">.</span><span class=\"token function\">setOption</span><span class=\"token punctuation\">(</span>option<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"效果\"><a class=\"markdownIt-Anchor\" href=\"#效果\">#</a> 效果</h2>\n<p><img data-src=\"%E6%9F%B1%E7%8A%B6%E5%9B%BE.gif\" alt=\"\"></p>\n",
            "tags": [
                "数据可视化库"
            ]
        },
        {
            "id": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/RBAC-%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6/",
            "url": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/RBAC-%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6/",
            "title": "RBAC--权限控制",
            "date_published": "2020-12-21T12:41:10.000Z",
            "content_html": "<h1 id=\"概述\"><a class=\"markdownIt-Anchor\" href=\"#概述\">#</a> 概述</h1>\n<blockquote>\n<p><code>RBAC 是基于角色的访问控制（Role-Based Access Control ）</code> 在 RBAC 中，权限与角色相关联，用户通过成为适当角色的成员而得到这些角色的权限。这就极大地简化了权限的管理。这样管理都是层级相互依赖的，权限赋予给角色，而把角色又赋予用户，这样的权限设计很清楚，管理起来很方便。</p>\n</blockquote>\n<h1 id=\"简易表设计\"><a class=\"markdownIt-Anchor\" href=\"#简易表设计\">#</a> 简易表设计</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>contrib<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> AbstractUser</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>db <span class=\"token keyword\">import</span> models</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span>AbstractUser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    username <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span><span class=\"token string\">'用户名'</span><span class=\"token punctuation\">,</span> max_length<span class=\"token operator\">=</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> unique<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    password <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span><span class=\"token string\">'密码'</span><span class=\"token punctuation\">,</span> max_length<span class=\"token operator\">=</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    email <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>EmailField<span class=\"token punctuation\">(</span><span class=\"token string\">'邮箱'</span><span class=\"token punctuation\">,</span> max_length<span class=\"token operator\">=</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> blank<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    phone <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span><span class=\"token string\">'电话'</span><span class=\"token punctuation\">,</span> max_length<span class=\"token operator\">=</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span> null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> blank<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    role <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>ForeignKey<span class=\"token punctuation\">(</span><span class=\"token string\">'Role'</span><span class=\"token punctuation\">,</span>on_delete<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>CASCADE<span class=\"token punctuation\">,</span>null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>blank<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Role</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    rolename <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span><span class=\"token string\">'角色名'</span><span class=\"token punctuation\">,</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Permission</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    role <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>ForeignKey<span class=\"token punctuation\">(</span><span class=\"token string\">'Role'</span><span class=\"token punctuation\">,</span>on_delete<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>CASCADE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    node <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>ForeignKey<span class=\"token punctuation\">(</span><span class=\"token string\">'Node'</span><span class=\"token punctuation\">,</span>on_delete<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>CASCADE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        db_table <span class=\"token operator\">=</span> <span class=\"token string\">'tb_permission'</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Node</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    nodename <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span><span class=\"token string\">'节点'</span><span class=\"token punctuation\">,</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"位运算\"><a class=\"markdownIt-Anchor\" href=\"#位运算\">#</a> 位运算</h1>\n<blockquote>\n<p>在计算机内存中都是以二进制的形式储存的。位运算就是直接对整数在内存中的二进制位进行操作。</p>\n<p>举个例子，6 的二进制是 110，11 的二进制是 1011，那么 6 &amp;11 的结果就是 2，它是二进制对应位进行逻辑运算的结果（0 表示 False，1 表示 True，空位都当 0 处理）</p>\n</blockquote>\n<ul>\n<li>在 <code>python</code>  中 <code>0b</code>  代表二进制</li>\n</ul>\n<p><img data-src=\"1.png\" alt=\"\"></p>\n<h2 id=\"使用位运算实现简单权限demo\"><a class=\"markdownIt-Anchor\" href=\"#使用位运算实现简单权限demo\">#</a> 使用位运算实现简单权限 demo</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>user <span class=\"token operator\">=</span> <span class=\"token number\">0b110</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>permission <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">0b100</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"blacklist\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">0b010</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"login\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">0b001</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">my_decorator</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">wrapper</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\"># 进行拦截</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> user <span class=\"token operator\">&amp;</span>  permission<span class=\"token punctuation\">[</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"没权限\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            func<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">return</span> wrapper</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token decorator annotation punctuation\">@my_decorator</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">view</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'进入了视图'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>view<span class=\"token punctuation\">(</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>运算方式：</p>\n<p><img data-src=\"2.png\" alt=\"\"></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 运行后结果为</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 1. view('user')：</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>进入了视图</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 2. view('blacklist')：</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token string\">'blacklist'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>进入了视图</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#3.view('login')</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token string\">'login'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>没权限</pre></td></tr></table></figure><blockquote>\n<p>从结果中可以看出，当访问该视图的用户权限为 <code>0b110</code>  时，只可访问 <code>user</code> , <code>blacklist</code> ，不可访问 <code>login</code></p>\n</blockquote>\n",
            "tags": []
        },
        {
            "id": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/Git%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/",
            "url": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/Git%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/",
            "title": "Git基本命令",
            "date_published": "2020-12-19T12:30:36.000Z",
            "content_html": "<h1 id=\"仓库\"><a class=\"markdownIt-Anchor\" href=\"#仓库\">#</a> 仓库</h1>\n<figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git init\t\t\t# 初始化</pre></td></tr></table></figure><figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git clone url\t\t\t# 下载一个项目</pre></td></tr></table></figure><h1 id=\"查看信息\"><a class=\"markdownIt-Anchor\" href=\"#查看信息\">#</a> 查看信息</h1>\n<figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git status\t\t\t# 查看文件状态</pre></td></tr></table></figure><h1 id=\"增加删除文件\"><a class=\"markdownIt-Anchor\" href=\"#增加删除文件\">#</a> 增加 / 删除文件</h1>\n<figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git add 文件名\t\t\t# 添加指定文件到暂存区</pre></td></tr></table></figure><figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git add 文件名\t\t\t# 添加指定目录到暂存区</pre></td></tr></table></figure><figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git add .\t\t\t# 添加当前目录的所有文件到暂存区</pre></td></tr></table></figure><h1 id=\"代码提交\"><a class=\"markdownIt-Anchor\" href=\"#代码提交\">#</a> 代码提交</h1>\n<figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git commit -m <span class=\"token string\">'备注'</span>\t\t\t# 提交暂存区到仓库区</pre></td></tr></table></figure><figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git commit 文件名 ... -m <span class=\"token string\">'备注'</span>\t\t# 提交暂存区的指定文件到仓库区</pre></td></tr></table></figure><figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git push origin 分支名\t\t\t# 将仓库区的文件推送到线上分支</pre></td></tr></table></figure><h1 id=\"分支\"><a class=\"markdownIt-Anchor\" href=\"#分支\">#</a> 分支</h1>\n<figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git branch\t\t\t# 列出所有本地分支</pre></td></tr></table></figure><figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git branch -r\t\t\t# 列出所有远程分支</pre></td></tr></table></figure><figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git branch -a\t\t\t# 列出所有本地分支和远程分支</pre></td></tr></table></figure><figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git branch 分支名\t\t\t# 新建一个分支，停留在当前分支</pre></td></tr></table></figure><figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git checkout -b 分支名\t\t\t# 新建一个分支，并切换到该分支</pre></td></tr></table></figure><figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git checkout 分支名\t\t\t# 切换到指定分支，并更新工作区</pre></td></tr></table></figure><figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git checkout -\t\t\t\t# 切换到上一个分支</pre></td></tr></table></figure><figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git merge 分支名\t\t\t# 合并指定分支到当前分支</pre></td></tr></table></figure><figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git branch -d 分支名\t\t\t# 删除分支</pre></td></tr></table></figure>",
            "tags": [
                "Git"
            ]
        },
        {
            "id": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/Docker-Desktop%E4%BD%BF%E7%94%A8Mysql%E3%80%81Redis/",
            "url": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/Docker-Desktop%E4%BD%BF%E7%94%A8Mysql%E3%80%81Redis/",
            "title": "Docker_Desktop使用Mysql、Redis",
            "date_published": "2020-12-05T01:29:08.000Z",
            "content_html": "<h1 id=\"docker-desktop使用mysql\"><a class=\"markdownIt-Anchor\" href=\"#docker-desktop使用mysql\">#</a> Docker Desktop 使用 Mysql</h1>\n<ol>\n<li>拉取镜像</li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker pull mysql</pre></td></tr></table></figure><ol start=\"2\">\n<li>启动镜像，第一次启动最少需要指定 <code>MYSQL_ROOT_PASSWORD</code></li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker run --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=000 -d mysql</pre></td></tr></table></figure><p><img data-src=\"1.png\" alt=\"\"></p>\n<ol start=\"3\">\n<li>运行 Mysql</li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker exec -it mysql mysql -uroot -p000</pre></td></tr></table></figure><p><img data-src=\"2.png\" alt=\"\"></p>\n<h1 id=\"docker-desktop使用redis\"><a class=\"markdownIt-Anchor\" href=\"#docker-desktop使用redis\">#</a> Docker Desktop 使用 Redis</h1>\n<ol>\n<li>拉取镜像</li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker pull redis</pre></td></tr></table></figure><p>2. 启动镜像</p>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker run -it -p 6380:6379 redis</pre></td></tr></table></figure><p><img data-src=\"3.png\" alt=\"\"></p>\n<ol start=\"3\">\n<li>运行 Redis</li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>redis-cli -p 6380\t\t\t# 指定端口，可开启多个redis服务，互不影响，本地服务均可开启</pre></td></tr></table></figure><p><img data-src=\"4.png\" alt=\"\"></p>\n",
            "tags": [
                "Docker_Desktop"
            ]
        },
        {
            "id": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/%E5%9C%A8Ubuntu%E4%B8%AD%E5%AE%89%E8%A3%85Docker%E5%92%8Cdocker%E7%9A%84%E4%BD%BF%E7%94%A8/",
            "url": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/%E5%9C%A8Ubuntu%E4%B8%AD%E5%AE%89%E8%A3%85Docker%E5%92%8Cdocker%E7%9A%84%E4%BD%BF%E7%94%A8/",
            "title": "Ubuntu安装Docker和docker的使用",
            "date_published": "2020-12-01T02:58:04.000Z",
            "content_html": "<h1 id=\"docker-概述\"><a class=\"markdownIt-Anchor\" href=\"#docker-概述\">#</a> Docker 概述</h1>\n<blockquote>\n<p><code>Docker </code> 是一个开源的应用容器引擎，基于 <code>Go语言</code> 并遵从 Apache2.0 协议开源。</p>\n<p><code>Docker </code> 可以让开发者打包他们的应用以及依赖包到一个 <code>轻量级</code> 、 <code>可移植</code> 的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。</p>\n<p>容器是完全使用 <code>沙箱机制</code> ，相互之间不会有任何接口（类似 iPhone 的 app）, 更重要的是容器性能开销极低。</p>\n</blockquote>\n<h1 id=\"docker应用场景\"><a class=\"markdownIt-Anchor\" href=\"#docker应用场景\">#</a> Docker 应用场景</h1>\n<blockquote>\n<p><code>Web </code> 应用的自动化打包和发布。</p>\n<p>自动化测试和持续集成、发布。</p>\n<p>在服务型环境中部署和调整数据库或其他的后台应用。</p>\n<p>从头编译或者扩展现有的  <code>OpenShift</code>  或  <code>Cloud Foundry</code>  平台来搭建自己的  <code>PaaS</code>  环境</p>\n</blockquote>\n<h1 id=\"docker-的优点\"><a class=\"markdownIt-Anchor\" href=\"#docker-的优点\">#</a> Docker 的优点</h1>\n<blockquote>\n<p><code>Docker</code>  是一个用于开发，交付和运行应用程序的开放平台。Docker 使您能够将应用程序与基础架构分开，从而可以快速交付软件。借助 Docker，您可以与管理应用程序相同的方式来管理基础架构。通过利用 Docker 的方法来 <code>快速交付</code> ， <code>测试</code> 和 <code>部署代码</code> ，您可以大大减少编写代码和在生产环境中运行代码之间的延迟。</p>\n</blockquote>\n<h1 id=\"在ubuntu中安装docker\"><a class=\"markdownIt-Anchor\" href=\"#在ubuntu中安装docker\">#</a> 在 Ubuntu 中安装 Docker</h1>\n<ol>\n<li>更新 ubuntu 的 apt 源索引</li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>sudo apt-get update</pre></td></tr></table></figure><ol start=\"2\">\n<li>安装包允许 apt 通过 HTTPS 使用仓库</li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>sudo apt-get install \\</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    apt-transport-https \\</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    ca-certificates \\</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    curl \\</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    software-properties-common</pre></td></tr></table></figure><ol start=\"3\">\n<li>添加 Docker 官方 GPG key</li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</pre></td></tr></table></figure><ol start=\"4\">\n<li>设置 Docker 稳定版仓库</li>\n</ol>\n<pre><code class=\"language-dock\">sudo add-apt-repository \\\n   &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n   $(lsb_release -cs) \\\n   stable&quot;\n</code></pre>\n<ol start=\"5\">\n<li>添加仓库后，更新 apt 源索引</li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>sudo apt-get update</pre></td></tr></table></figure><ol start=\"6\">\n<li>安装最新版 Docker CE（社区版）</li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>sudo apt-get install docker-ce</pre></td></tr></table></figure><ol start=\"7\">\n<li>检查 Docker CE 是否安装正确</li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>sudo docker run hello-world</pre></td></tr></table></figure><ol start=\"8\">\n<li>出现如下信息，表示安装成功</li>\n</ol>\n<p><img data-src=\"1.png\" alt=\"\"></p>\n<h1 id=\"docker使用\"><a class=\"markdownIt-Anchor\" href=\"#docker使用\">#</a> Docker 使用</h1>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 启动 docker</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>sudo service docker start</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 停止 docker</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>sudo service docker stop</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 重启 docker</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>sudo service docker restart</pre></td></tr></table></figure><h2 id=\"容器使用\"><a class=\"markdownIt-Anchor\" href=\"#容器使用\">#</a> 容器使用</h2>\n<ol>\n<li>启动容器</li>\n</ol>\n<details class=\"info\"><summary>参数说明</summary><div>\n<p>-i: 交互式操作</p>\n<p>-t: 终端</p>\n<p>redis:redis 镜像</p>\n</div></details>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker run -it redis</pre></td></tr></table></figure><ol start=\"2\">\n<li>停止一个容器</li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker stop &lt;容器 ID></pre></td></tr></table></figure><ol start=\"3\">\n<li>重启，停止的容器</li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker restart &lt;容器 ID></pre></td></tr></table></figure><ol start=\"4\">\n<li>进入容器</li>\n</ol>\n<ul>\n<li>在使用  <code>-d</code>  参数时，容器启动后会进入后台。此时想要进入容器，可以通过以下指令进入</li>\n</ul>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker attach &lt;容器 ID></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>docker exec -it &lt;容器 ID>           # 推荐大家使用 docker exec 命令，因为此退出容器终端，不会导致容器的停止。</pre></td></tr></table></figure><ol start=\"5\">\n<li>kill 掉一个已经在运行的容器</li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker kill &lt;容器 ID></pre></td></tr></table></figure><ol start=\"6\">\n<li>清理掉所有处于终止状态的容器</li>\n</ol>\n<pre><code>docker container prune\n</code></pre>\n<ol start=\"7\">\n<li>删除容器</li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker rm -f &lt;容器 ID></pre></td></tr></table></figure><h2 id=\"镜像使用\"><a class=\"markdownIt-Anchor\" href=\"#镜像使用\">#</a> 镜像使用</h2>\n<ol>\n<li>列出镜像</li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker images</pre></td></tr></table></figure><details class=\"info\"><summary>各个选项说明</summary><div>\n<p>REPOSITORY：镜像所在的仓库名称</p>\n<p>TAG：镜像标签</p>\n<p>IMAGEID：镜像 ID</p>\n<p>CREATED：镜像的创建日期 (不是获取该镜像的日期)</p>\n<p>SIZE：镜像大小</p>\n</div></details>\n<p><img data-src=\"2.png\" alt=\"\"></p>\n<ol start=\"2\">\n<li>搜索镜像</li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker search redis</pre></td></tr></table></figure><details class=\"info\"><summary>各项说明</summary><div>\n<p>NAME: 镜像仓库源的名称</p>\n<p>DESCRIPTION: 镜像的描述</p>\n<p>OFFICIAL: 是否 docker 官方发布</p>\n<p>START: 类似 Github 里面的 star，表示点赞、喜欢的意思。</p>\n<p>AUTOMATED: 自动构建。</p>\n</div></details>\n<p><img data-src=\"3.png\" alt=\"\"></p>\n<ol start=\"3\">\n<li>拉取镜像</li>\n</ol>\n<blockquote>\n<p>Docker 维护了镜像仓库，分为共有和私有两种，共有的官方仓库<span class=\"exturl\" data-url=\"aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS8=\"> Docker Hub (https://hub.docker.com/)</span> 是最重要最常用的镜像仓库。私有仓库（Private Registry）是开发者或者企业自建的镜像存储库，通常用来保存企业 内部的 Docker 镜像，用于内部开发流程和产品的发布、版本控制。</p>\n</blockquote>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker pull django</pre></td></tr></table></figure><ol start=\"4\">\n<li>删除镜像</li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker image rm 镜像名或镜像id</pre></td></tr></table></figure><ol start=\"5\">\n<li>镜像备份与迁移</li>\n</ol>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker save -o ./ubuntu.tar ubuntu\t\t# 镜像打包成文件</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>docker load -i ./ubuntu.tar\t\t\t# 将镜像加载到本地</pre></td></tr></table></figure><h2 id=\"仓库管理\"><a class=\"markdownIt-Anchor\" href=\"#仓库管理\">#</a> 仓库管理</h2>\n<blockquote>\n<p><code>仓库（Repository）</code> 是集中存放镜像的地方。以下介绍一下 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS8=\">Docker Hub</span>。当然不止 Docker hub，只是远程的服务商不一样，操作都是一样的。</p>\n</blockquote>\n<h3 id=\"docker-hub\"><a class=\"markdownIt-Anchor\" href=\"#docker-hub\">#</a> Docker Hub</h3>\n<blockquote>\n<p>目前 Docker 官方维护了一个公共仓库 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS8=\">Docker Hub</span>。</p>\n<p>大部分需求都可以通过在 Docker Hub 中直接下载镜像来实现。</p>\n</blockquote>\n<h3 id=\"注册\"><a class=\"markdownIt-Anchor\" href=\"#注册\">#</a> 注册</h3>\n<blockquote>\n<p>在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS8=\">https://hub.docker.com</span> 免费注册一个 Docker 账号。</p>\n</blockquote>\n<ul>\n<li>登录</li>\n</ul>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker login</pre></td></tr></table></figure><ul>\n<li>退出</li>\n</ul>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker logout</pre></td></tr></table></figure><ul>\n<li>可以通过 docker search 命令来查找官方仓库中的镜像，并利用 docker pull 命令来将它下载到本地。</li>\n<li>以 Mysql 为关键词进行搜索</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker search mysql</pre></td></tr></table></figure><ul>\n<li>使用 docker pull 将官方 ubuntu 镜像下载到本地：</li>\n</ul>\n<pre><code class=\"language-dock\">docker pull mysql\n</code></pre>\n<ul>\n<li>推送对象\n<ul>\n<li>用户登录后，可以通过 docker push 命令将自己的镜像推送到 Docker Hub。</li>\n<li>以下命令中的 username 请替换为你的 Docker 账号用户名。</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker tag mysql username/mysql</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>docker image ls</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>docker push username/mysql</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>docker search username/mysql</pre></td></tr></table></figure>",
            "tags": [
                "Docker"
            ]
        },
        {
            "id": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/SQL-%E4%B8%80%E5%88%87%E7%9A%86%E5%85%B3%E7%B3%BB/",
            "url": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/SQL-%E4%B8%80%E5%88%87%E7%9A%86%E5%85%B3%E7%B3%BB/",
            "title": "SQL--一切皆关系",
            "date_published": "2020-11-17T12:12:50.000Z",
            "content_html": "<h1 id=\"sql一切皆关系\"><a class=\"markdownIt-Anchor\" href=\"#sql一切皆关系\">#</a> SQL–一切皆关系</h1>\n<p><img data-src=\"1.png\" alt=\"\"></p>\n<p>在计算机领域有许多伟大的设计理念和思想，例如：</p>\n<ul>\n<li>在 Unix 中，一切皆文件。</li>\n<li>在面向对象的编程语言中，一切皆对象。</li>\n</ul>\n<p>关系数据库同样也有自己的设计思想：<strong>在 SQL 中，一切皆关系</strong>。</p>\n<h3 id=\"关系模型\"><a class=\"markdownIt-Anchor\" href=\"#关系模型\">#</a> 关系模型</h3>\n<blockquote>\n<p>关系模型（Relational model）由 E.F.Codd 博士于 1970 年提出，以集合论中的关系概念为基础；无论是现实世界中的实体对象还是它们之间的联系都使用关系表示。我们在数据库系统中看到的关系就是二维表（Table），由行（Row）和列（Column）组成。因此，也可以说关系表是由数据行构成的集合。</p>\n</blockquote>\n<p><img data-src=\"2.png\" alt=\"\"></p>\n<p>关系模型由<strong>数据结构</strong>、<strong>关系操作</strong>、<strong>完整性约束</strong>三部分组成。</p>\n<ul>\n<li>关系模型中的数据结构就是关系表，包括<strong>基础表</strong>、<strong>派生表</strong>（查询结果）和<strong>虚拟表</strong>（视图）。</li>\n<li>常用的关系操作包括<strong>增加</strong>、<strong>删除</strong>、<strong>修改</strong>和<strong>查询</strong>（CRUD），使用的就是 SQL 语言。其中查询操作最为复杂，包括选择（Selection）、投影（Projection）、并集（Union）、交集（Intersection）、差集（Exception）以及笛卡儿积（Cartesian product）等。</li>\n<li>完整性约束用于维护数据的完整性或者满足业务约束的需求，包括<strong>实体完整性</strong>（主键约束）、<strong>参照完整性</strong>（外键约束）以及<strong>用户定义的完整性</strong>（非空约束、唯一约束、检查约束和默认值）。</li>\n</ul>\n<h3 id=\"面向集合\"><a class=\"markdownIt-Anchor\" href=\"#面向集合\">#</a> 面向集合</h3>\n<blockquote>\n<p>SQL（结构化查询语言）是操作关系数据库的标准语言。SQL 非常接近英语，使用起来非常简单。它在设计之初就考虑了非技术人员的使用需求，我们通常只需说明想要的结果（What），而将数据处理的过程（How）交给数据库管理系统。所以说，SQL 才是真正给人用的编程语言！😎</p>\n</blockquote>\n<p>接下来我们具体分析一下关系的各种操作语句；目的是为了让大家能够了解 <strong>SQL 是一种面向集合的编程语言，它的操作对象是集合，操作的结果也是集合</strong>。</p>\n<p>📝在关系数据库中，关系、表、集合三者通常表示相同的概念。</p>\n<h3 id=\"select\"><a class=\"markdownIt-Anchor\" href=\"#select\">#</a> SELECT</h3>\n<p>下面是一个简单的查询语句：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> employee_id<span class=\"token punctuation\">,</span> first_name<span class=\"token punctuation\">,</span> last_name<span class=\"token punctuation\">,</span> hire_date</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">FROM</span> employees<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>它的作用就是从 employees 表中查询员工信息。显然，我们都知道 FROM 之后是一个表（关系、集合）。不仅如此，整个查询语句的结果也是一个表。所以，我们可以将上面的查询作为表使用：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> employee_id<span class=\"token punctuation\">,</span> first_name<span class=\"token punctuation\">,</span> last_name<span class=\"token punctuation\">,</span> hire_date</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>          <span class=\"token keyword\">FROM</span> employees<span class=\"token punctuation\">)</span> t<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>括号内的查询语句被称为派生表，我们给它指定了一个别名叫做 t。同样，整个查询结果也是一个表；这就意味着我们可以继续嵌套，虽然这么做很无聊。</p>\n<p>我们再看一个 PostgreSQL 中的示例：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- PostgreSQL</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">FROM</span> upper<span class=\"token punctuation\">(</span><span class=\"token string\">'sql'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">|</span> upper <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">|</span><span class=\"token comment\">-------|</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">|</span>   <span class=\"token keyword\">SQL</span> <span class=\"token operator\">|</span></pre></td></tr></table></figure><p>upper () 是一个大写转换的函数。它出现再 FROM 子句中，意味着它的结果也是一个表，只不过是 1 行 1 列的特殊表。</p>\n<p>SELECT 子句用于指定需要查询的字段，可以包含表达式、函数值等。SELECT 在关系操作中被称为投影（Projection），看下面的示意图应该就比较好理解了。</p>\n<p><img data-src=\"3.png\" alt=\"\"></p>\n<p>除了 SELECT 之外，还有一些常用的 SQL 子句。</p>\n<hr>\n<p>WHERE 用于指定数据过滤的条件，在关系运算中被称为选择（Selection），示意图如下：</p>\n<p><img data-src=\"4.png\" alt=\"\"></p>\n<p>ORDER BY 用于对查询的结果进行排序，示意图如下：</p>\n<p><img data-src=\"5.png\" alt=\"\"></p>\n<p>总之，SQL 可以完成各种数据操作，例如过滤、分组、排序、限定数量等；所有这些操作的对象都是关系表，结果也是关系表。</p>\n<p><img data-src=\"6.png\" alt=\"\"></p>\n<p>在这些关系操作中，有一个比较特殊，就是分组。</p>\n<hr>\n<h3 id=\"group-by\"><a class=\"markdownIt-Anchor\" href=\"#group-by\">#</a> GROUP BY</h3>\n<p>分组（ GROUP BY）操作和其他的关系操作不同，因为它改变了关系的结构。来看下面的示例：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> department_id<span class=\"token punctuation\">,</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> first_name</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">FROM</span> employees</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> department_id<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>该语句的目的是按照部门统计员工的数量，但是存在一个语法错误，就是 first_name 不能出现在查询列表中。原因在于按照部门进行分组的话，每个部门包含多个员工；无法确定需要显示哪个员工的姓名，这是一个逻辑上的错误。</p>\n<p>所以说，GROUP BY 改变了集合元素（数据行）的结构，创建了一个全新的关系。分组操作的示意图如下：</p>\n<p><img data-src=\"7.png\" alt=\"\"></p>\n<p>尽管如此，GROUP BY 的结果仍然是一个集合。</p>\n<hr>\n<h3 id=\"union\"><a class=\"markdownIt-Anchor\" href=\"#union\">#</a> UNION</h3>\n<p>SQL 面向集合特性最明显的体现就是 UNION（并集运算）、INTERSECT（交集运算）和 EXCEPT/MINUS（差集运算）。</p>\n<p>这些集合运算符的作用都是将两个集合并成一个集合，因此需要满足以下条件：</p>\n<ul>\n<li>两边的集合中字段的数量和顺序必须相同；</li>\n<li>两边的集合中对应字段的类型必须匹配或兼容。</li>\n</ul>\n<p>具体来说，UNION 和 UNION ALL 用于计算两个集合的并集，返回出现在第一个查询结果或者第二个查询结果中的数据。它们的区别在于 UNION 排除了结果中的重复数据，UNION ALL 保留了重复数据。下面是 UNION 操作的示意图：</p>\n<p><img data-src=\"8.png\" alt=\"\"></p>\n<p>INTERSECT 操作符用于返回两个集合中的共同部分，即同时出现在第一个查询结果和第二个查询结果中的数据，并且排除了结果中的重复数据。INTERSECT 运算的示意图如下：</p>\n<p><img data-src=\"9.png\" alt=\"\"></p>\n<p>EXCEPT 或者 MINUS 操作符用于返回两个集合的差集，即出现在第一个查询结果中，但不在第二个查询结果中的记录，并且排除了结果中的重复数据。EXCEPT 运算符的示意图如下：</p>\n<p><img data-src=\"10.png\" alt=\"\"></p>\n<p>除此之外，DISTINCT 运算符用于消除重复数据，也就是排除集合中的重复元素。</p>\n<blockquote>\n<p>SQL 中的关系概念来自数学中的集合理论，因此 UNION、INTERSECT 和 EXCEPT 分别来自集合论中的并集（∪ \\cup∪）、交集（∩ \\cap∩）和差集（∖ \\setminus∖）运算。需要注意的是，集合理论中的集合不允许存在重复的数据，但是 SQL 允许。因此，SQL 中的集合也被称为多重集合（multiset）；多重集合与集合理论中的集合都是无序的，但是 SQL 可以通过 ORDER BY 子句对查询结果进行排序。</p>\n</blockquote>\n<hr>\n<h3 id=\"join\"><a class=\"markdownIt-Anchor\" href=\"#join\">#</a> JOIN</h3>\n<p>在 SQL 中，不仅实体对象存储在关系表中，对象之间的联系也存储在关系表中。因此，当我们想要获取这些相关的数据时，需要使用到另一个操作：连接查询（JOIN）。</p>\n<p>常见的 SQL 连接查类型包括<strong>内连接</strong>、<strong>外连接</strong>、<strong>交叉连接</strong>等。其中，外连接又可以分为<strong>左外连接</strong>、<strong>右外连接</strong>以及<strong>全外连接</strong>。</p>\n<p>内连接（Inner Join）返回两个表中满足连接条件的数据，内连接的原理如下图所示：</p>\n<p><img data-src=\"11.png\" alt=\"\"></p>\n<p>左外连接（Left Outer Join）返回左表中所有的数据；对于右表，返回满足连接条件的数据；如果没有就返回空值。左外连接的原理如下图所示：</p>\n<p><img data-src=\"12.png\" alt=\"\"></p>\n<p>右外连接（Right Outer Join）返回右表中所有的数据；对于左表，返回满足连接条件的数据，如果没有就返回空值。右外连接与左外连接可以互换，以下两者等价：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>t1 <span class=\"token keyword\">RIGHT</span> <span class=\"token keyword\">JOIN</span> t2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>t2 <span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">JOIN</span> t1</pre></td></tr></table></figure><p>全外连接（Full Outer Join）等价于左外连接加上右外连接，同时返回左表和右表中所有的数据；对于两个表中不满足连接条件的数据返回空值。全外连接的原理如下图所示：</p>\n<p><img data-src=\"13.png\" alt=\"\"></p>\n<p>交叉连接也称为笛卡尔积（Cartesian Product）。两个表的交叉连接相当于一个表的所有行和另一个表的所有行两两组合，结果的数量为两个表的行数相乘。交叉连接的原理如下图所示：</p>\n<p><img data-src=\"14.png\" alt=\"\"></p>\n<blockquote>\n<p>其他类型的连接还有<span class=\"exturl\" data-url=\"aHR0cHM6Ly90b255ZG9uZy5ibG9nLmNzZG4ubmV0L2FydGljbGUvZGV0YWlscy8xMDgxNTIzMjk=\">半连接</span>（SEMI JOIN）、<span class=\"exturl\" data-url=\"aHR0cHM6Ly90b255ZG9uZy5ibG9nLmNzZG4ubmV0L2FydGljbGUvZGV0YWlscy8xMDgxNTIzMjk=\">反连接</span>（ANTI JOIN）。</p>\n</blockquote>\n<p>集合操作将两个集合合并成一个更大或更小的集合；连接查询将两个集合转换成一个更大或更小的集合，同时获得了一个更大的元素（更多的列）。很多时候集合操作都可以通过连接查询来实现，例如：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> department_id</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">FROM</span> departments</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token keyword\">UNION</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">SELECT</span> department_id</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">FROM</span> employees<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>等价于：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">COALESCE</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span>department_id<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>department_id<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">FROM</span> departments d</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">FULL</span> <span class=\"token keyword\">JOIN</span> employees e <span class=\"token keyword\">ON</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>department_id <span class=\"token operator\">=</span> d<span class=\"token punctuation\">.</span>department_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">123</span></pre></td></tr></table></figure><p>我们已经介绍了许多查询的示例，接下来看看其他的数据操作。</p>\n<hr>\n<h3 id=\"dml\"><a class=\"markdownIt-Anchor\" href=\"#dml\">#</a> DML</h3>\n<p>DML 表示数据操作语言，也就是插入、更新和删除。以下是一个插入语句示例：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> test<span class=\"token punctuation\">(</span>id <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- MySQL、SQL Server 等</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> test<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">-- Oracle</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> test<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token number\">1</span> <span class=\"token keyword\">AS</span> id <span class=\"token keyword\">FROM</span> DUAL</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">UNION</span> <span class=\"token keyword\">ALL</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token number\">2</span> <span class=\"token keyword\">FROM</span> DUAL</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">UNION</span> <span class=\"token keyword\">ALL</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token number\">3</span> <span class=\"token keyword\">FROM</span> DUAL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>我们通过一个 INSERT 语句插入了 3 条记录，或者说是插入了一个包含 3 条记录的关系表。因为，UNION ALL 返回的是一个关系表。VALUES 同样是指定了一个关系表，在 SQL Server 和 PostgreSQL 中支持以下语句：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">)</span> test<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>我们已经说过，FROM 之后是一个关系表，所以这里的 VALUES 也是一样。由于我们经常插入单条记录，并没有意识到实际上是以表为单位进行操作。</p>\n<p>同样，UPDATE 和 DELETE 语句也都是以关系表为单位的操作；只不过我们习惯了说更新一行数据或者删除几条记录。</p>\n<details class=\"primary\"><summary>参考来源</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hvcnNlcy9hcnRpY2xlL2RldGFpbHMvMTA0NTUzMDc1\">https://blog.csdn.net/horses/article/details/104553075</span></p>\n</div></details>\n",
            "tags": [
                "SQL"
            ]
        },
        {
            "id": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/JWT/",
            "url": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/JWT/",
            "title": "JWT--JSON WEB TOKEN",
            "date_published": "2020-04-12T11:39:37.000Z",
            "content_html": "<h1 id=\"json-web-token\"><a class=\"markdownIt-Anchor\" href=\"#json-web-token\">#</a> Json Web Token</h1>\n<h3 id=\"什么是jwt\"><a class=\"markdownIt-Anchor\" href=\"#什么是jwt\">#</a> 什么是 JWT</h3>\n<blockquote>\n<p>Json web token (JWT), 是为了在网络应用环境间传递声明而执行的一种基于 JSON 的开放标准 (RFC 7519). 该 token 被设计为紧凑且安全的，特别适用于分布式站点的单点登录（SSO）场景。JWT 的声明一般被用来在身份提供者和服务提供者间传递被认证的用户身份信息，以便于从资源服务器获取资源，也可以增加一些额外的其它业务逻辑所必须的声明信息，该 token 也可直接被用于认证，也可被加密。</p>\n</blockquote>\n<ul>\n<li>说起 JWT，我们应该来谈一谈基于 token 的认证和传统的 session 认证的区别。</li>\n</ul>\n<h3 id=\"传统的session认证\"><a class=\"markdownIt-Anchor\" href=\"#传统的session认证\">#</a> 传统的 session 认证</h3>\n<p>我们知道，http 协议本身是一种无状态的协议，而这就意味着如果用户向我们的应用提供了用户名和密码来进行用户认证，那么下一次请求时，用户还要再一次进行用户认证才行，因为根据 http 协议，我们并不能知道是哪个用户发出的请求，所以为了让我们的应用能识别是哪个用户发出的请求，我们只能在服务器存储一份用户登录的信息，这份登录信息会在响应时传递给浏览器，告诉其保存为 cookie, 以便下次请求时发送给我们的应用，这样我们的应用就能识别请求来自哪个用户了，这就是传统的基于 session 认证。</p>\n<p>但是这种基于 session 的认证使应用本身很难得到扩展，随着不同客户端用户的增加，独立的服务器已无法承载更多的用户，而这时候基于 session 认证应用的问题就会暴露出来.</p>\n<h3 id=\"基于session认证所显露的问题\"><a class=\"markdownIt-Anchor\" href=\"#基于session认证所显露的问题\">#</a> 基于 session 认证所显露的问题</h3>\n<p><strong>Session</strong>: 每个用户经过我们的应用认证之后，我们的应用都要在服务端做一次记录，以方便用户下次请求的鉴别，通常而言 session 都是保存在内存中，而随着认证用户的增多，服务端的开销会明显增大。</p>\n<p><strong>扩展性</strong>：用户认证之后，服务端做认证记录，如果认证的记录被保存在内存中的话，这意味着用户下次请求还必须要请求在这台服务器上，这样才能拿到授权的资源，这样在分布式的应用上，相应的限制了负载均衡器的能力。这也意味着限制了应用的扩展能力。</p>\n<p><strong>CSRF</strong>: 因为是基于 cookie 来进行用户识别的，cookie 如果被截获，用户就会很容易受到跨站请求伪造的攻击。</p>\n<h3 id=\"jwt与session的差异\"><a class=\"markdownIt-Anchor\" href=\"#jwt与session的差异\">#</a> JWT 与 Session 的差异</h3>\n<ul>\n<li>\n<p>相同点是，它们都是存储用户信息；然而，Session 是在服务器端的，而 JWT 是在客户端的。</p>\n</li>\n<li>\n<p>Session 方式存储用户信息的最大问题在于要占用大量服务器内存，增加服务器的开销。而 JWT 方式将用户状态分散到了客户端中，可以明显减轻服务端的内存压力。</p>\n</li>\n<li>\n<p>Session 的状态是存储在服务器端，客户端只有 session id；而 Token 的状态是存储在客户端。</p>\n</li>\n</ul>\n<h3 id=\"基于token的鉴权机制\"><a class=\"markdownIt-Anchor\" href=\"#基于token的鉴权机制\">#</a> 基于 token 的鉴权机制</h3>\n<p>基于 token 的鉴权机制类似于 http 协议也是无状态的，它不需要在服务端去保留用户的认证信息或者会话信息。这就意味着基于 token 认证机制的应用不需要去考虑用户在哪一台服务器登录了，这就为应用的扩展提供了便利。</p>\n<p>流程上是这样的：</p>\n<ul>\n<li>用户使用用户名密码来请求服务器</li>\n<li>服务器进行验证用户的信息</li>\n<li>服务器通过验证发送给用户一个 token</li>\n<li>客户端存储 token，并在每次请求时附送上这个 token 值</li>\n<li>服务端验证 token 值，并返回数据</li>\n</ul>\n<h3 id=\"jwt长什么样\"><a class=\"markdownIt-Anchor\" href=\"#jwt长什么样\">#</a> JWT 长什么样</h3>\n<p>JWT 是由三段信息构成的，将这三段信息文本用 <code>.</code>  链接一起就构成了 Jwt 字符串</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9<span class=\"token punctuation\">.</span>eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ<span class=\"token punctuation\">.</span>cThIIoDvwdueQB468K5xDc5633seEFoqwxjF_xSJyQQ</pre></td></tr></table></figure><h3 id=\"jwt的构成\"><a class=\"markdownIt-Anchor\" href=\"#jwt的构成\">#</a> JWT 的构成</h3>\n<ul>\n<li>\n<p>第一部分我们称它为头部（header)</p>\n</li>\n<li>\n<p>第二部分我们称其为载荷（payload)</p>\n</li>\n<li>\n<p>第三部分是签证（signature)</p>\n</li>\n</ul>\n<h4 id=\"头部header\"><a class=\"markdownIt-Anchor\" href=\"#头部header\">#</a> 头部（header）</h4>\n<p>jwt 的头部承载两部分信息：</p>\n<ul>\n<li>声明类型，这里是 jwt</li>\n<li>声明加密的算法 通常直接使用 HMAC SHA256</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token string\">'typ'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'JWT'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token string\">'alg'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'HS256'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>然后进行 base64 加密（该加密是可以对称解密的), 构成了第一部分.</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9</pre></td></tr></table></figure><h4 id=\"载荷playload\"><a class=\"markdownIt-Anchor\" href=\"#载荷playload\">#</a> 载荷（playload）</h4>\n<p>载荷就是存放有效信息的地方，这些有效信息包含三个部分</p>\n<ul>\n<li>标准中注册的声明</li>\n<li>公共的声明</li>\n<li>私有的声明</li>\n</ul>\n<h5 id=\"标准中注册的声明-建议但不强制使用\"><a class=\"markdownIt-Anchor\" href=\"#标准中注册的声明-建议但不强制使用\">#</a> <strong>标准中注册的声明</strong> (建议但不强制使用) :</h5>\n<p><strong>iss</strong>: jwt 签发者</p>\n<p><strong>sub</strong>: jwt 所面向的用户</p>\n<p><strong>aud</strong>: 接收 jwt 的一方</p>\n<p><strong>exp</strong>: jwt 的过期时间，这个过期时间必须要大于签发时间</p>\n<p><strong>nbf</strong>: 定义在什么时间之前，该 jwt 都是不可用的.</p>\n<p><strong>iat</strong>: jwt 的签发时间</p>\n<p><strong>jti</strong>: jwt 的唯一身份标识，主要用来作为一次性 token, 从而回避重放攻击。</p>\n<h5 id=\"公共的声明\"><a class=\"markdownIt-Anchor\" href=\"#公共的声明\">#</a> 公共的声明：</h5>\n<p>公共的声明可以添加任何的信息，一般添加用户的相关信息或其他业务需要的必要信息。但不建议添加 <code>敏感信息</code> ，因为该部分在客户端可解密.</p>\n<h5 id=\"私有的声明\"><a class=\"markdownIt-Anchor\" href=\"#私有的声明\">#</a> <strong>私有的声明</strong> ：</h5>\n<p>私有声明是提供者和消费者所共同定义的声明，一般不建议存放敏感信息，因为 base64 是对称解密的，意味着该部分信息可以归类为明文信息。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token string\">\"sub\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"1234567890\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"John Doe\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token string\">\"iat\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1516239022</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>然后进行 base64 加密，得到 Jwt 的第二部分</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ</pre></td></tr></table></figure><h4 id=\"签证signature\"><a class=\"markdownIt-Anchor\" href=\"#签证signature\">#</a> 签证（signature）</h4>\n<p>jwt 的第三部分是一个签证信息，这个签证信息由三部分组成：</p>\n<ul>\n<li>header (base64 后的)</li>\n<li>payload (base64 后的)</li>\n<li>secret</li>\n</ul>\n<p>这个部分需要 base64 加密后的 header 和 base64 加密后的 payload 使用 <code>.</code>  连接组成的字符串，然后通过 header 中声明的加密方式进行加盐 <code>secret</code>  组合加密，然后就构成了 jwt 的第三部分。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>HMACSHA256<span class=\"token punctuation\">(</span>base64UrlEncode<span class=\"token punctuation\">(</span>header<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\".\"</span> <span class=\"token operator\">+</span> base64UrlEncode<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span>secret<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>将这三部分用 <code>.</code>  连接成一个完整的字符串，构成了最终的 jwt:</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9<span class=\"token punctuation\">.</span>eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ<span class=\"token punctuation\">.</span>cThIIoDvwdueQB468K5xDc5633seEFoqwxjF_xSJyQQ</pre></td></tr></table></figure><p><code>注意：secret是保存在服务器端的，jwt的签发生成也是在服务器端的，secret就是用来进行jwt的签发和jwt的验证，所以，它就是你服务端的私钥，在任何场景都不应该流露出去。一旦客户端得知这个secret, 那就意味着客户端是可以自我签发jwt了。</code></p>\n<h3 id=\"下列场景中使用json-web-token是很有用的\"><a class=\"markdownIt-Anchor\" href=\"#下列场景中使用json-web-token是很有用的\">#</a> 下列场景中使用 JSON Web Token 是很有用的：</h3>\n<ul>\n<li>Authorization (授权) : 这是使用 JWT 的最常见场景。一旦用户登录，后续每个请求都将包含 JWT，允许用户访问该令牌允许的路由、服务和资源。单点登录是现在广泛使用的 JWT 的一个特性，因为它的开销很小，并且可以轻松地跨域使用。</li>\n<li>Information Exchange (信息交换) : 对于安全的在各方之间传输信息而言，JSON Web Tokens 无疑是一种很好的方式。因为 JWT 可以被签名，例如，用公钥 / 私钥对，你可以确定发送人就是它们所说的那个人。另外，由于签名是使用头和有效负载计算的，您还可以验证内容没有被篡改。</li>\n</ul>\n<h3 id=\"jwt与oauth20的区别\"><a class=\"markdownIt-Anchor\" href=\"#jwt与oauth20的区别\">#</a> JWT 与 OAuth2.0 的区别</h3>\n<ul>\n<li>OAuth2.0 是一种授权框架 ，JWT 是一种认证协议</li>\n<li>无论使用哪种方式切记用 HTTPS 来保证数据的安全性</li>\n<li>OAuth2.0 用在使用第三方账号登录的情况 (比如使用 weibo, qq, github 登录某个 app)，而 JWT 是用在前后端分离，需要简单的对后台 API 进行保护时使用。</li>\n</ul>\n<h3 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h3>\n<h4 id=\"优点\"><a class=\"markdownIt-Anchor\" href=\"#优点\">#</a> 优点</h4>\n<ul>\n<li>因为 json 的通用性，所以 JWT 是可以进行跨语言支持的，像 Python,Java,JavaScript,PHP 等很多语言都可以使用。</li>\n<li>因为有了 payload 部分，所以 JWT 可以在自身存储一些其他业务逻辑所必要的非敏感信息。</li>\n<li>便于传输，jwt 的构成非常简单，字节占用很小，所以它是非常便于传输的。</li>\n<li>它不需要在服务端保存会话信息，所以它易于应用的扩展</li>\n</ul>\n<h4 id=\"安全相关\"><a class=\"markdownIt-Anchor\" href=\"#安全相关\">#</a> 安全相关</h4>\n<ul>\n<li>不应该在 jwt 的 payload 部分存放敏感信息，因为该部分是客户端可解密的部分。</li>\n<li>保护好 secret 私钥，该私钥非常重要。</li>\n</ul>\n",
            "tags": [
                "jwt"
            ]
        },
        {
            "id": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/OAuth2-0%E7%9A%84%E5%9B%9B%E7%A7%8D%E6%8E%88%E6%9D%83%E6%A8%A1%E5%BC%8F/",
            "url": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/OAuth2-0%E7%9A%84%E5%9B%9B%E7%A7%8D%E6%8E%88%E6%9D%83%E6%A8%A1%E5%BC%8F/",
            "title": "OAuth2.0的四种授权模式",
            "date_published": "2020-04-08T02:40:53.000Z",
            "content_html": "<h1 id=\"oauth20-为何物\"><a class=\"markdownIt-Anchor\" href=\"#oauth20-为何物\">#</a> <strong>OAuth2.0 为何物</strong></h1>\n<p><code>OAuth</code>  简单理解就是一种授权机制，它是在客户端和资源所有者之间的授权层，用来分离两种不同的角色。在资源所有者同意并向客户端颁发令牌后，客户端携带令牌可以访问资源所有者的资源。<br>\n <code>OAuth2.0</code>  是 <code>OAuth</code>  协议的一个版本，有 <code>2.0</code>  版本那就有 <code>1.0</code>  版本，有意思的是 <code>OAuth2.0</code>  却不向下兼容 <code>OAuth1.0</code>  ，相当于废弃了 <code>1.0</code>  版本。</p>\n<p><strong>举个小栗子解释一下什么是 OAuth 授权？</strong><br>\n在家肝文章饿了定了一个外卖，外卖小哥 30 秒火速到达了我家楼下，奈何有门禁进不来，可以输入密码进入，但出于安全的考虑我并不想告诉他密码。<br>\n此时外卖小哥看到门禁有一个高级按钮 “ <code>一键获取授权</code> ”，只要我这边同意，他会获取到一个有效期 2 小时的令牌（ <code>token</code> ）正常出入。</p>\n<p>令牌（ <code>token</code> ）和  <code>密码</code>  的作用虽然相似都可以进入系统，但还有点不同。 <code>token</code>  拥有权限范围，有时效性的，到期自动失效，而且无效修改</p>\n<p><code>OAuth2.0</code>  的授权简单理解其实就是获取令牌（ <code>token</code> ）的过程， <code>OAuth</code>  协议定义了四种获得令牌的授权方式（ <code>authorization grant</code>  ）如下：</p>\n<ul>\n<li>隐式授权模式（Implicit Grant）</li>\n<li>授权码授权模式（Authorization code Grant）</li>\n<li>密码模式（Resource Owner Password Credentials Grant）</li>\n<li>客户端凭证模式（Client Credentials Grant）</li>\n</ul>\n<p>但值得注意的是，不管我们使用哪一种授权方式，在三方应用申请令牌之前，都必须在系统中去申请身份唯一标识：客户端 ID（ <code>client ID</code> ）和 客户端密钥（ <code>client secret</code> ）。这样做可以保证  <code>token</code>  不被恶意使用。<br>\n下面我们会分析每种授权方式的原理，在进入正题前，先了解  <code>OAuth2.0</code>  授权过程中几个重要的参数：</p>\n<ul>\n<li><code>response_type</code> ：code 表示要求返回授权码，token 表示直接返回令牌</li>\n<li><code>client_id</code> ：客户端身份标识</li>\n<li><code>client_secret</code> ：客户端密钥</li>\n<li><code>redirect_uri</code> ：重定向地址</li>\n<li><code>scope</code> ：表示授权的范围， <code>read</code>  只读权限， <code>all</code>  读写权限</li>\n<li><code>grant_type</code> ：表示授权的方式， <code>AUTHORIZATION_CODE</code> （授权码）、 <code>password</code> （密码）、 <code>client_credentials</code> （凭证式）、 <code>refresh_token</code>  更新令牌</li>\n<li><code>state</code> ：应用程序传递的一个随机数，用来防止 <code>CSRF</code>  攻击。</li>\n</ul>\n<hr>\n<h1 id=\"1隐式授权模式implicit-grant\"><a class=\"markdownIt-Anchor\" href=\"#1隐式授权模式implicit-grant\">#</a> 1. 隐式授权模式（Implicit Grant）</h1>\n<p><img data-src=\"1.png\" alt=\"\"></p>\n<ul>\n<li>第一步：用户访问页面时，重定向到认证服务器。</li>\n<li>第二步：认证服务器给用户一个认证页面，等待用户授权。</li>\n<li>第三步：用户授权，认证服务器想应用页面返回 Token</li>\n<li>第四步：验证 Token，访问真正的资源页面</li>\n</ul>\n<p><img data-src=\"2.png\" alt=\"\"></p>\n<h1 id=\"2授权码授权模式authorization-code-grant\"><a class=\"markdownIt-Anchor\" href=\"#2授权码授权模式authorization-code-grant\">#</a> 2. 授权码授权模式（Authorization code Grant）</h1>\n<p><img data-src=\"3.png\" alt=\"\"></p>\n<ul>\n<li>第一步：用户访问页面</li>\n<li>第二步：访问的页面将请求重定向到认证服务器</li>\n<li>第三步：认证服务器向用户展示授权页面，等待用户授权</li>\n<li>第四步：用户授权，认证服务器生成一个 code 和带上 client_id 发送给应用服务器，然后，应用服务器拿到 code，并用 client_id 去后台查询对应的 client_secret</li>\n<li>第五步：将 code、client_id、client_secret 传给认证服务器换取 access_token 和 refresh_token</li>\n<li>第六步：将 access_token 和 refresh_token 传给应用服务器</li>\n<li>第七步：验证 token，访问真正的资源页面</li>\n</ul>\n<p><img data-src=\"4.png\" alt=\"\"></p>\n<h1 id=\"3密码模式resource-owner-password-credentials-grant\"><a class=\"markdownIt-Anchor\" href=\"#3密码模式resource-owner-password-credentials-grant\">#</a> 3. 密码模式（Resource Owner Password Credentials Grant）</h1>\n<p><img data-src=\"5.png\" alt=\"\"></p>\n<ul>\n<li>第一步：用户访问用页面时，输入第三方认证所需要的信息 (QQ / 微信账号密码)</li>\n<li>第二步：应用页面那种这个信息去认证服务器授权</li>\n<li>第三步：认证服务器授权通过，拿到 token，访问真正的资源页面</li>\n</ul>\n<p><code>优点</code> ：不需要多次请求转发，额外开销，同时可以获取更多的用户信息。(都拿到账号密码了)</p>\n<p><code>缺点</code> ：局限性，认证服务器和应用方必须有超高的信赖。(比如亲兄弟？)</p>\n<p><code>应用场景</code> ：自家公司搭建的认证服务器</p>\n<h1 id=\"4客户端凭证模式client-credentials-grant\"><a class=\"markdownIt-Anchor\" href=\"#4客户端凭证模式client-credentials-grant\">#</a> 4. 客户端凭证模式（Client Credentials Grant）</h1>\n<p><img data-src=\"6.png\" alt=\"\"></p>\n<ul>\n<li>第一步：用户访问应用客户端</li>\n<li>第二步：通过客户端定义的验证方法，拿到 token，无需授权</li>\n<li>第三步：访问资源服务器 A</li>\n<li>第四步：拿到一次 token 就可以畅通无阻的访问其他的资源页面。</li>\n</ul>\n<p><strong>这是一种最简单的模式，只要 client 请求，我们就将 AccessToken 发送给它。这种模式是最方便但最不安全的模式。因此这就要求我们对 client 完全的信任，而 client 本身也是安全的。</strong></p>\n<p><strong>因此这种模式一般用来提供给我们完全信任的服务器端服务。在这个过程中不需要用户的参与。</strong></p>\n",
            "tags": [
                "OAuth2.0"
            ]
        },
        {
            "id": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/RESTfulAPI%E8%A7%84%E8%8C%83/",
            "url": "http://example.com/%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%9D%82%E7%83%A9/RESTfulAPI%E8%A7%84%E8%8C%83/",
            "title": "RESTful API设计规范",
            "date_published": "2020-04-02T10:50:49.000Z",
            "content_html": "<h1 id=\"概述\"><a class=\"markdownIt-Anchor\" href=\"#概述\">#</a> 概述</h1>\n<blockquote>\n<p>RESTful 是目前最流行的 API 设计规范，用于 Web 数据接口的设计。</p>\n<p>核心是面向资源：对象的单个实例。 例如，一只动物。它可以是一段文本、一张图片、一首歌曲、一种服务，总之就是一个具体的实在。你可以用一个 URL（统一资源定位符）指向它，每种资源对应一个特定的 URL。要获取这个资源，访问它的 URL 就可以，因此 URL 就成了每一个资源的地址或独一无二的识别符。</p>\n<p>主要有请求方式、状态码、URL 规范、传参规范</p>\n</blockquote>\n<h1 id=\"请求方式\"><a class=\"markdownIt-Anchor\" href=\"#请求方式\">#</a> 请求方式</h1>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>GET   （SELECT）：从服务器取出资源（一项或多项）</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>POST  （CREATE）：在服务器新建一个资源</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>PUT   （UPDATE）：在服务器更新资源（客户端提供改变后的完整资源）</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>PATCH （UPDATE）：在服务器更新资源（客户端提供改变的属性）</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>DELETE（DELETE）：从服务器删除资源</pre></td></tr></table></figure><ul>\n<li>还有两个不常用的</li>\n</ul>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>HEAD   ：获取资源的元数据</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>OPTIONS：获取信息，关于资源的哪些属性是客户端可以改变的</pre></td></tr></table></figure><h1 id=\"状态码\"><a class=\"markdownIt-Anchor\" href=\"#状态码\">#</a> 状态码</h1>\n<blockquote>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>1xx 信息，请求收到，继续处理。范围保留用于底层HTTP的东西，你很可能永远也用不到。</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>2xx 成功，行为被成功地接受、理解和采纳</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>3xx 重定向，为了完成请求，必须进一步执行的动作</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>4xx 客户端错误，请求包含语法错误或者请求无法实现。范围保留用于响应客户端做出的错误，例如。他们提供不良数据或要求不存在的东西。这些请求应该是幂等的，而不是更改服务器的状态。</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>5xx 范围的状态码是保留给服务器端错误用的。这些错误常常是从底层的函数抛出来的，甚至</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>开发人员也通常没法处理，发送这类状态码的目的以确保客户端获得某种响应。</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>当收到5xx响应时，客户端不可能知道服务器的状态，所以这类状态码是要尽可能的避免。</pre></td></tr></table></figure></blockquote>\n<ul>\n<li>以下是常见状态码</li>\n</ul>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>200：服务器成功返回用户请求的数据，该操作是幂等的（Idempotent）。</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>201：用户新建或修改数据成功。</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>202：表示一个请求已经进入后台排队（异步任务）</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>204：用户删除数据成功。</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>205：重置内容。服务器处理成功，用户端（例如：浏览器）应重置文档视图。可通过此返回码清除浏览器的表单域</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>301：永久重定向，请求的资源已被永久的移动到新URL。</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>302：临时重定向。</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>400：用户发出的请求有错误，服务器没有进行新建或修改数据的操作，该操作是幂等的。</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>401：表示用户没有权限（令牌、用户名、密码错误）。</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>403：表示用户得到授权（与401错误相对），但是访问是被禁止的。</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>404：用户发出的请求针对的是不存在的记录，服务器没有进行操作，该操作是幂等的。</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>406：用户请求的格式不可得（比如用户请求JSON格式，但是只有XML格式）。</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>410：用户请求的资源被永久删除，且不会再得到的。</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>422：当创建一个对象时，发生一个验证错误。</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>500：服务器发生错误，用户将无法判断发出的请求是否成功。</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>501：服务器不支持请求的功能，无法完成请求</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>502：错误的网关，该服务器在充当网关或代理的同时，从尝试访问该请求的上游服务器接收到无效响应。</pre></td></tr></table></figure><h1 id=\"url\"><a class=\"markdownIt-Anchor\" href=\"#url\">#</a> URL</h1>\n<blockquote>\n<p>URL 结尾不应该包含斜杠 “/”</p>\n<p>正斜杠分隔符”/“必须用来指示层级关系</p>\n<p>使用连字符”-“来提高 URL 的可读性，而不是使用下划线”_”</p>\n<p>URL 路径中首选小写字母</p>\n<p>URL 路径使用名词或复数</p>\n</blockquote>\n<ol>\n<li>版本规范</li>\n</ol>\n<ul>\n<li>应该将 API 的版本号放入 URL。</li>\n<li>另一种做法是，将版本号放在 HTTP 头信息中，但不如放入 URL 方便和直观。</li>\n</ul>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>https://api.example.com/v1</pre></td></tr></table></figure><ol start=\"2\">\n<li>路径视网络上任何东西都是资源，比如一个动物园</li>\n</ol>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>https://api.example.com/v1/zoos</pre></td></tr></table></figure><ol start=\"3\">\n<li>完成某种操作</li>\n</ol>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>https://api.example.com/v1/zoos\t\tGET   ：列出所有动物园</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>https://api.example.com/v1/zoos\t\tPOST  ：新建一个动物园</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>https://api.example.com/v1/zoos/ID\t\tGET   ：获取某个指定动物园的信息</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>https://api.example.com/v1/zoos/ID\t\tPUT   ：更新某个指定动物园的信息（提供该动物园的全部信息）</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>https://api.example.com/v1/zoos/ID\t\tPATCH ：更新某个指定动物园的信息（提供该动物园的部分信息）</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>https://api.example.com/v1/zoos/ID\t\tDELETE：删除某个动物园</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>https://api.example.com/v1/zoos/ID/animals\tGET   ：列出某个指定动物园的所有动物</pre></td></tr></table></figure><h1 id=\"传参规范过滤信息\"><a class=\"markdownIt-Anchor\" href=\"#传参规范过滤信息\">#</a> 传参规范 (过滤信息)</h1>\n<blockquote>\n<p>如果记录数量很多，服务器不可能都将它们返回给用户。API 应该提供参数，过滤返回结果。</p>\n<p>参数的设计允许存在冗余，即允许 API 路径和 URL 参数偶尔有重复。比如，</p>\n<p>GET /zoo/ID/animals 与 GET /animals?zoo_id=ID 的含义是相同的。</p>\n</blockquote>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>https://api.example.com/v1/zoos?limit=10：指定返回记录的数量</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>https://api.example.com/v1/zoos?offset=10：指定返回记录的开始位置</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>https://api.example.com/v1/zoos?page=2&amp;per_page=100：指定第几页，以及每页的记录数</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>https://api.example.com/v1/zoos?sortby=name&amp;order=asc：指定返回结果按照哪个属性排序，以及排序顺序</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>https://api.example.com/v1/zoos?animal_type_id=1：指定筛选条件</pre></td></tr></table></figure>",
            "tags": []
        }
    ]
}