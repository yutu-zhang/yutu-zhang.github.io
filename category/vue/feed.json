{
    "version": "https://jsonfeed.org/version/1",
    "title": "The course of true love never did run smooth. • All posts by \"vue\" category",
    "description": "不知道写啥",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/Vue/Vue-%E4%BD%BF%E7%94%A8%E5%A4%A7%E5%90%8C%E5%B0%8F%E5%BC%82%E7%9A%84UI%E7%BB%84%E4%BB%B6/",
            "url": "http://example.com/Vue/Vue-%E4%BD%BF%E7%94%A8%E5%A4%A7%E5%90%8C%E5%B0%8F%E5%BC%82%E7%9A%84UI%E7%BB%84%E4%BB%B6/",
            "title": "UI组件",
            "date_published": "2020-08-24T12:27:35.000Z",
            "content_html": "<h3 id=\"1-ant-design-of-vue\"><a class=\"markdownIt-Anchor\" href=\"#1-ant-design-of-vue\">#</a> 1. ANT DESIGN of Vue</h3>\n<center><img data-src=\"1.png\"  /></center>\n<blockquote>\n<p>Ant Design 是蚂蚁金服技术部经过大量项目时间和总结，设计的前端 UI 组件库。</p>\n<p>致力于提升『用户』和『设计者』使用体验的中台设计语言。它模糊了产品经理、交互设计师、视觉设计师、前端工程师、开发工程师等角色边界，将进行 UE 设计和 UI 设计人员统称为『设计者』，利用统一的规范进行设计赋能，全面提高中台产品体验和研发效率。</p>\n<p>Ant Design Vue 是使用 Vue 实现的遵循 Ant Design 设计规范的高质量 UI 组件库</p>\n</blockquote>\n<h4 id=\"特性\"><a class=\"markdownIt-Anchor\" href=\"#特性\">#</a> 特性</h4>\n<ul>\n<li>\n<p>🌈 提炼自企业级中后台产品的交互语言和视觉风格。</p>\n</li>\n<li>\n<p>📦 开箱即用的高质量 Vue 组件</p>\n</li>\n<li>\n<p>🎉共享<span class=\"exturl\" data-url=\"aHR0cDovL2FudC1kZXNpZ24uZ2l0ZWUuaW8vZG9jcy9zcGVjL2ludHJvZHVjZS1jbg==\"> Ant Design of React</span> 设计工具体系。</p>\n</li>\n<li>\n<p>⚙️ 全链路开发和设计工具体系。</p>\n</li>\n<li>\n<p>🌍 数十个国际化语言支持。</p>\n</li>\n<li>\n<p>🎨 深入每个细节的主题定制能力。</p>\n</li>\n</ul>\n<h4 id=\"使用安装\"><a class=\"markdownIt-Anchor\" href=\"#使用安装\">#</a> 使用安装</h4>\n<blockquote>\n<h4 id=\"1安装\"><a class=\"markdownIt-Anchor\" href=\"#1安装\">#</a> 1. 安装</h4>\n<p>npm install --save ant-design-vue</p>\n</blockquote>\n<blockquote>\n<h4 id=\"2mainjs中全局引入并注册\"><a class=\"markdownIt-Anchor\" href=\"#2mainjs中全局引入并注册\">#</a> 2.main.js 中全局引入并注册</h4>\n<p>import Antd from ‘ant-design-vue’;<br>\nimport ‘ant-design-vue/dist/antd.css’;<br>\nVue.use(Antd);</p>\n</blockquote>\n<blockquote>\n<h4 id=\"3在页面中不再需要引入注册组件可以直接使用所有的组件\"><a class=\"markdownIt-Anchor\" href=\"#3在页面中不再需要引入注册组件可以直接使用所有的组件\">#</a> 3. 在页面中不再需要引入注册组件，可以直接使用所有的组件</h4>\n<pre><code class=\"language-vue\">&lt;template&gt;\n &lt;div&gt;    \n \t&lt;a-button type=&quot;primary&quot;&gt;按钮&lt;/a-button&gt;  \n\t&lt;/div&gt; \n&lt;/template&gt;\n</code></pre>\n</blockquote>\n<h4 id=\"资源地址\"><a class=\"markdownIt-Anchor\" href=\"#资源地址\">#</a> 资源地址</h4>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly92dWUuYW50LmRlc2lnbi9kb2NzL3Z1ZS9pbnRyb2R1Y2UtY24v\">官方文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcmV2aWV3LnByby5hbnRkdi5jb20=\">Ant Design Pro 演示</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NlbmR5YS9hbnQtZGVzaWduLXByby12dWU=\">Ant Design Pro 项目源码</span></li>\n</ul>\n<hr>\n<h3 id=\"2-element-ui\"><a class=\"markdownIt-Anchor\" href=\"#2-element-ui\">#</a> 2. Element UI</h3>\n<center><img data-src=\"2.png\" style=\"zoom:200%;\" /></center>\n<blockquote>\n<p>Element，一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的组件库，提供了配套设计资源，帮助网站快速成型。由饿了么公司前端团队开源。(目前已停止维护)</p>\n</blockquote>\n<h4 id=\"设计原则\"><a class=\"markdownIt-Anchor\" href=\"#设计原则\">#</a> 设计原则</h4>\n<h5 id=\"一致性-consistency\"><a class=\"markdownIt-Anchor\" href=\"#一致性-consistency\">#</a> 一致性 Consistency</h5>\n<ul>\n<li>与现实生活一致：与现实生活的流程、逻辑保持一致，遵循用户习惯的语言和概念；</li>\n<li>在界面中一致：所有的元素和结构需保持一致，比如：设计样式、图标和文本、元素的位置等。</li>\n</ul>\n<h5 id=\"反馈-feedback\"><a class=\"markdownIt-Anchor\" href=\"#反馈-feedback\">#</a> 反馈 Feedback</h5>\n<ul>\n<li>控制反馈：通过界面样式和交互动效让用户可以清晰的感知自己的操作；</li>\n<li>页面反馈：操作后，通过页面元素的变化清晰地展现当前状态。</li>\n</ul>\n<h5 id=\"效率-efficiency\"><a class=\"markdownIt-Anchor\" href=\"#效率-efficiency\">#</a> 效率 Efficiency</h5>\n<ul>\n<li>简化流程：设计简洁直观的操作流程；</li>\n<li>清晰明确：语言表达清晰且表意明确，让用户快速理解进而作出决策；</li>\n<li>帮助用户识别：界面简单直白，让用户快速识别而非回忆，减少用户记忆负担。</li>\n</ul>\n<h5 id=\"可控-controllability\"><a class=\"markdownIt-Anchor\" href=\"#可控-controllability\">#</a> 可控 Controllability</h5>\n<ul>\n<li>用户决策：根据场景可给予用户操作建议或安全提示，但不能代替用户进行决策；</li>\n<li>结果可控：用户可以自由的进行操作，包括撤销、回退和终止当前操作等。</li>\n</ul>\n<h4 id=\"使用\"><a class=\"markdownIt-Anchor\" href=\"#使用\">#</a> 使用</h4>\n<blockquote>\n<h4 id=\"1安装-2\"><a class=\"markdownIt-Anchor\" href=\"#1安装-2\">#</a> 1. 安装</h4>\n<p>npm i element-ui -S</p>\n</blockquote>\n<blockquote>\n<h4 id=\"2mainjs中全局引入并注册-2\"><a class=\"markdownIt-Anchor\" href=\"#2mainjs中全局引入并注册-2\">#</a> 2.main.js 中全局引入并注册</h4>\n<p>import ElementUI from ‘element-ui’;<br>\nimport ‘element-ui/lib/theme-chalk/index.css’;<br>\nVue.use(ElementUI);</p>\n</blockquote>\n<blockquote>\n<h4 id=\"3在页面中不再需要引入注册组件可以直接使用所有的组件-2\"><a class=\"markdownIt-Anchor\" href=\"#3在页面中不再需要引入注册组件可以直接使用所有的组件-2\">#</a> 3. 在页面中不再需要引入注册组件，可以直接使用所有的组件</h4>\n<pre><code class=\"language-vue\">&lt;template&gt;\n &lt;div&gt;    \n \t&lt;el-button type=&quot;primary&quot;&gt;主要按钮&lt;/el-button&gt;\n\t&lt;/div&gt; \n&lt;/template&gt;\n</code></pre>\n</blockquote>\n<h4 id=\"资源地址-2\"><a class=\"markdownIt-Anchor\" href=\"#资源地址-2\">#</a> 资源地址</h4>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbGVtZW50LmVsZW1lLmlvLyMvemgtQ04vY29tcG9uZW50L2luc3RhbGxhdGlvbg==\">官方文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYW5qaWFjaGVuLmdpdGh1Yi5pby92dWUtZWxlbWVudC1hZG1pbi8jL2xvZ2lu\">vue-element-admin 演示</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYW5qaWFjaGVuLmdpdGh1Yi5pby92dWUtZWxlbWVudC1hZG1pbi1zaXRlL3poLw==\">vue-element-admin 项目文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1BhbkppYUNoZW4vdnVlLWVsZW1lbnQtYWRtaW4=\">vue-element-admin 项目源码</span></li>\n</ul>\n",
            "tags": [
                "UI组件"
            ]
        },
        {
            "id": "http://example.com/Vue/Vue-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F-%E4%BB%8E%E6%91%87%E7%AF%AE%E5%88%B0%E5%9D%9F%E5%A2%93/",
            "url": "http://example.com/Vue/Vue-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F-%E4%BB%8E%E6%91%87%E7%AF%AE%E5%88%B0%E5%9D%9F%E5%A2%93/",
            "title": "生命周期(从摇篮到坟墓)",
            "date_published": "2020-08-08T13:25:02.000Z",
            "content_html": "<h1 id=\"vue生命周期\"><a class=\"markdownIt-Anchor\" href=\"#vue生命周期\">#</a> Vue–生命周期</h1>\n<img data-src=\"1.png\"/>\n<h3 id=\"生命周期是什么\"><a class=\"markdownIt-Anchor\" href=\"#生命周期是什么\">#</a> 生命周期是什么</h3>\n<blockquote>\n<p>生命周期 <code>（Life Cycle）</code> 的概念应用很广泛，特别是在政治、经济、环境、技术、社会等诸多领域经常出现，其基本涵义可以通俗地理解为 “从摇篮到坟墓” <code>（Cradle-to-Grave）</code> 的整个过程</p>\n<p>在 <code>Vue</code>  中实例从创建到销毁的过程就是生命周期，即指从创建、初始化数据、编译模板、挂载 Dom→渲染、更新→渲染、销毁等一系列过程</p>\n<p>我们可以把组件比喻成工厂里面的一条流水线，每个工人（生命周期）站在各自的岗位，当任务流转到工人身边的时候，工人就开始工作</p>\n</blockquote>\n<h3 id=\"生命周期有哪些\"><a class=\"markdownIt-Anchor\" href=\"#生命周期有哪些\">#</a> 生命周期有哪些</h3>\n<p>先搂一眼官方文档的图片</p>\n<center><img data-src=\"3.png\"  /></center>\n<ul>\n<li>Vue 生命周期总共可以分为 8 个阶段：创建前后，载入前后，更新前后，销毁前销毁后</li>\n</ul>\n<h3 id=\"1-在beforecreate和created钩子函数之间的生命周期\"><a class=\"markdownIt-Anchor\" href=\"#1-在beforecreate和created钩子函数之间的生命周期\">#</a> 1. <strong>在 beforeCreate 和 created 钩子函数之间的生命周期</strong></h3>\n<ul>\n<li>\n<p>在这个生命周期之间，进行<strong>初始化事件，进行数据的观测</strong>，在 <code>created</code>  的时候数据已经和 <code>data</code> <strong> 属性进行绑定</strong>（放在 data 中的属性当值发生改变的同时，视图也会改变）。</p>\n</li>\n<li>\n<p><code>注意：此时还是没有el选项</code></p>\n</li>\n</ul>\n<h3 id=\"2-created钩子函数和beforemount间的生命周期\"><a class=\"markdownIt-Anchor\" href=\"#2-created钩子函数和beforemount间的生命周期\">#</a> <strong>2. created 钩子函数和 beforeMount 间的生命周期</strong></h3>\n<center><img data-src=\"4.png\"  /></center>\n<p>在这一阶段发生的故事还是比较多的。</p>\n<ul>\n<li>\n<p>首先判断是否存在 <code>el</code>  选项，若不存在则停止编译，直到调用 <code>vm.$mount(el)</code>  才会继续编译</p>\n</li>\n<li>\n<p>是否有模板，有则将模板转化为 <code>render</code>  函数，通过 <code>render</code>  函数去渲染创建 <code>Dom</code>  树，无则编译 <code>el</code>  对象外层 <code>HTML</code>  作为模板</p>\n</li>\n<li>\n<p>优先级： <code>render</code>  &gt;  <code>template</code>  &gt;  <code>outerHTML</code></p>\n</li>\n</ul>\n<h3 id=\"3-beforemount和mounted-钩子函数间的生命周期\"><a class=\"markdownIt-Anchor\" href=\"#3-beforemount和mounted-钩子函数间的生命周期\">#</a> <strong>3. beforeMount 和 mounted 钩子函数间的生命周期</strong></h3>\n<center><img data-src=\"5.png\"  /></center>\n<ul>\n<li>此阶段 <code>vm.el</code>  完成挂载， <code>vm.$el</code>  生成的 <code>DOM</code>  替换了 <code>el</code>  选项所对应的 <code>DOM</code></li>\n</ul>\n<h3 id=\"4-mounted\"><a class=\"markdownIt-Anchor\" href=\"#4-mounted\">#</a> <strong>4. mounted</strong></h3>\n<ul>\n<li><code>vm.el</code>  已完成 <code>DOM</code>  的挂载与渲染，此刻打印 <code>vm.$el</code> ，发现之前的挂载点及内容已被替换成新的 <code>DOM</code></li>\n</ul>\n<h3 id=\"5-beforeupdate钩子函数和updated钩子函数间的生命周期\"><a class=\"markdownIt-Anchor\" href=\"#5-beforeupdate钩子函数和updated钩子函数间的生命周期\">#</a> <strong>5. beforeUpdate 钩子函数和 updated 钩子函数间的生命周期</strong></h3>\n<center><img data-src=\"6.png\"  /></center>\n<ul>\n<li>当 vue 发现 data 中的数据发生了改变，会<strong>触发对应组件的重新渲染</strong>，先后调用 <code>beforeUpdate</code>  和 <code>updated</code>  钩子函数</li>\n</ul>\n<h3 id=\"6beforedestroy\"><a class=\"markdownIt-Anchor\" href=\"#6beforedestroy\">#</a> 6.<strong>beforeDestroy</strong></h3>\n<ul>\n<li><code>0beforeDestroy</code>  钩子函数在实例销毁之前调用。在这一步，实例仍然完全可用。</li>\n</ul>\n<h3 id=\"7destroyed\"><a class=\"markdownIt-Anchor\" href=\"#7destroyed\">#</a> 7.<strong>destroyed</strong></h3>\n<ul>\n<li><code>destroyed</code>  钩子函数在 <code>Vue </code> 实例销毁后调用。调用后， <code>Vue </code> 实例指示的所有东西都会解绑定，所有的事件监听器会被移除，所有的子实例也会被销毁，并不能清除 <code>Dom </code> ，仅仅销毁实例</li>\n</ul>\n<h3 id=\"数据请求在created和mouted的区别\"><a class=\"markdownIt-Anchor\" href=\"#数据请求在created和mouted的区别\">#</a> 数据请求在 created 和 mouted 的区别</h3>\n<ul>\n<li>\n<p><code>created</code>  是在组件实例一旦创建完成的时候立刻调用，这时候页面 <code>dom</code>  节点并未生成</p>\n</li>\n<li>\n<p><code>mounted</code>  是在页面 <code>dom</code>  节点渲染完毕之后就立刻执行的</p>\n</li>\n<li>\n<p>触发时机上 <code>created</code>  是比 <code>mounted</code>  要更早的</p>\n</li>\n<li>\n<p>两者相同点：都能拿到实例对象的属性和方法</p>\n</li>\n<li>\n<p>讨论这个问题本质就是触发的时机，放在 <code>mounted</code>  请求有可能导致页面闪动（页面 <code>dom</code>  结构已经生成），但如果在页面加载前完成则不会出现此情况</p>\n</li>\n</ul>\n",
            "tags": [
                "vue生命周期"
            ]
        }
    ]
}